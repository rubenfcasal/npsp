[{"path":"https://rubenfcasal.github.io/npsp/articles/docs/aquifer.html","id":"geoestadística-no-paramétrica","dir":"Articles > Docs","previous_headings":"","what":"Geoestadística no paramétrica","title":"Geoestadistica no parametrica con el paquete *npsp*","text":"Nos centraremos en el caso de procesos espaciales \\(\\left\\lbrace Y(\\mathbf{x}), \\mathbf{x}  \\D\\subset \\mathbb{R}^{d} \\right\\rbrace\\), con dominio \\(D\\) continuo fijo: proceso geoestadístico. El objetivo en el futuro es considerar procesos puntuales marcados: \\(D\\) es un proceso puntual en \\(\\mathbb{R}^{d}.\\) Normalmente sólo se observa un conjunto de valores \\(\\left\\{  y(\\mathbf{x}_{1}),\\ldots,y(\\mathbf{x}_{n})\\right\\}\\) (realización parcial).","code":""},{"path":"https://rubenfcasal.github.io/npsp/articles/docs/aquifer.html","id":"ejemplo","dir":"Articles > Docs","previous_headings":"Geoestadística no paramétrica","what":"Ejemplo","title":"Geoestadistica no parametrica con el paquete *npsp*","text":"Se utilizará como ejemplo el conjunto de datos aquifer: nivel del agua subterránea en el acuífero Wolfcamp.","code":"str(aquifer) 'data.frame':   85 obs. of  3 variables:  $ lon : num  42.78 -27.4 -1.16 -18.62 96.47 ...  $ lat : num  127.6 90.8 84.9 76.5 64.6 ...  $ head: num  1464 2553 2158 2455 1756 ... #   Scatter plot with a color scale with(aquifer, spoints(lon, lat, head, main = \"Wolfcamp aquifer data\"))"},{"path":"https://rubenfcasal.github.io/npsp/articles/docs/aquifer.html","id":"modelo-general","dir":"Articles > Docs","previous_headings":"Geoestadística no paramétrica","what":"Modelo general","title":"Geoestadistica no parametrica con el paquete *npsp*","text":"Se supone que el proceso se descompone en variabilidad de gran escala y variabilidad de pequeña escala: \\[Y(\\mathbf{x})=\\mu(\\mathbf{x})+\\varepsilon(\\mathbf{x}),\\] donde: \\(\\mu(\\cdot)\\) es la tendencia (función determinística). \\(\\varepsilon(\\cdot)\\) es un proceso de error estacionario de segundo orden, de media cero y covariograma: \\[C(\\mathbf{u}) = Cov(\\varepsilon(\\mathbf{x}), \\varepsilon(\\mathbf{x}+\\mathbf{u} ))\\] (varianza \\(\\sigma^2 = C(\\mathbf{0})\\)). La dependencia espacial se modela normalmente través del variograma: \\[2\\gamma(\\mathbf{u}) = Var(\\varepsilon \\left( \\mathbf{x}\\right) -\\varepsilon \\left(\\mathbf{x}+\\mathbf{u}\\right) ),\\] verificando \\(\\gamma(\\mathbf{u}) = C(0) - C(\\mathbf{u})\\). Se empleará un modelo paramétrico: se supone ninguna forma concreta para \\(\\mu(\\mathbf{\\cdot})\\) y \\(\\gamma(\\mathbf{\\cdot})\\) (funciones suaves). Evitan problemas debidos una mala especificación del modelo. Más fáciles de automatizar. Resultan también de utilidad en inferencia paramétrica.","code":""},{"path":"https://rubenfcasal.github.io/npsp/articles/docs/aquifer.html","id":"ejemplo-1","dir":"Articles > Docs","previous_headings":"Geoestadística no paramétrica","what":"Ejemplo","title":"Geoestadistica no parametrica con el paquete *npsp*","text":"Con el conjunto de datos de ejemplo puede ser preferible emplear métodos paramétricos. El tamaño muestral es pequeño y un modelo lineal para la tendencia parece ser adecuado.","code":"x <- aquifer[,1:2]      # coordenadas espaciales y <- aquifer$head/100   # respuesta (en cientos de pies) scattersplot(x, y, main = \"Wolfcamp aquifer data\", xlab = 'lon', ylab ='lat',               zlab = 'piezometric-head', col = jet.colors(128))"},{"path":"https://rubenfcasal.github.io/npsp/articles/docs/aquifer.html","id":"inferencia-no-paramétrica-en-procesos-geoestadísticos","dir":"Articles > Docs","previous_headings":"Geoestadística no paramétrica","what":"Inferencia (no paramétrica) en procesos geoestadísticos","title":"Geoestadistica no parametrica con el paquete *npsp*","text":"partir de los valores observados \\(\\mathbf{Y}=(Y(\\mathbf{x}_1),\\ldots,Y(\\mathbf{x}_n))^{t}\\) puede interesar: Obtener predicciones (kriging): \\(\\hat{Y}(\\mathbf{x}_0)\\). Realizar inferencias (estimación, contrastes) sobre las componentes del modelo \\(\\hat{\\mu}(\\cdot)\\), \\(\\hat{\\gamma}(\\cdot)\\). Obtención de mapas de riesgo \\(P({Y}(\\mathbf{x}_0)\\geq c)\\) … Aunque hay una gran cantidad de paquetes de R con herramientas de utilidad en geoestadística (geoR, gstat, fields, …) o en estadística paramétrica (mgcv, KernSmooth, sm, …), la mayoría presentan una funcionalidad muy limitada para estadística espacial paramétrica o resulta difícil emplearlos para implementar nuevos métodos (además de otras limitaciones, como su eficiencia computacional o el número de dimensiones que soportan). Por este motivo se decidió desarrollar el paquete npsp: CRAN: https://cran.r-project.org/package=npsp Github: http://github.com/rubenfcasal/npsp La idea sería: Proporcionar un entorno homogéneo para la estimación polinómica lócal multidimensional (tendencia, variograma, densidad, …), especialmente para el caso de procesos espaciales (y espacio-temporales). Trata de minimizar el tiempo de computación y los requerimientos de memoria. Emplear clases y métodos S3 sencillos (que permitan interactuar con las clases S4 del paquete sp y las nuevas S3 del paquete sf; ver npsp/inst/ locpol_classes.pdf). Robusto y que facilite la implementación de nuevos métodos.","code":""},{"path":"https://rubenfcasal.github.io/npsp/articles/docs/aquifer.html","id":"binning-lineal","dir":"Articles > Docs","previous_headings":"","what":"Binning lineal","title":"Geoestadistica no parametrica con el paquete *npsp*","text":"Para acelerar los cálculos se emplea binning (WARPing; e.g. Wand Jones, 1995): datos \\(\\Longrightarrow\\) discretización \\(\\Longrightarrow\\) suavizado \\(\\Longrightarrow\\) interpolación Normalmente el resultado final del análisis es una rejilla y el último paso sólo interesa en cálculos intermedios (e.g. obtención de residuos).","code":""},{"path":"https://rubenfcasal.github.io/npsp/articles/docs/aquifer.html","id":"discretización","dir":"Articles > Docs","previous_headings":"Binning lineal","what":"Discretización","title":"Geoestadistica no parametrica con el paquete *npsp*","text":"En la estimación polinómica local se emplea binning lineal. Wand M.P. Jones M.C. (1995) Kernel Smoothing. Chapman Hall. Las principales funciones son: Tendencia (y densidad): binning. Variograma: svar.bin Normalmente se emplearan dos rejillas, una de baja resolución para acelerar los cálculos durante el proceso de modelado (selección de la ventana, cálculos intermedios, …) y otra con la resolución deseada para obtener los resultados finales.","code":"cpu.time(reset=TRUE) CPU time has been initialized. bin <- binning(x, y, nbin = c(41,41), set.NA = TRUE)  simage(bin, main = 'Binning averages') # Data points points(bin$data$x, col = 'darkgray') # Binning grid coordvs <- coordvalues(bin) abline(v = coordvs[[1]], lty = 3) abline(h = coordvs[[2]], lty = 3) cpu.time(total = FALSE) Time of last operation:     user  system elapsed     0.00    0.00    0.01"},{"path":"https://rubenfcasal.github.io/npsp/articles/docs/aquifer.html","id":"interpolación","dir":"Articles > Docs","previous_headings":"Binning lineal","what":"Interpolación","title":"Geoestadistica no parametrica con el paquete *npsp*","text":"En el paquete se emplea interpolación lineal (algoritmo análogo al binning lineal). Métodos: interp y predict","code":""},{"path":"https://rubenfcasal.github.io/npsp/articles/docs/aquifer.html","id":"estimación-de-la-densidad","dir":"Articles > Docs","previous_headings":"","what":"Estimación de la densidad","title":"Geoestadistica no parametrica con el paquete *npsp*","text":"La estimación de la densidad está implementada como un caso particular de regresión (se suavizan los pesos binning reescalados): np.den. Por defecto emplea el estimador lineal local (establecer degree = 0 para Nadaraya-Watson).  Se puede emplear por ejemplo para establecer una máscara que filtre las posiciones alejadas de los datos.","code":"den <- np.den(bin, h = diag(60, 2), degree = 0)  # alternatively, set h = h.cv(as.bin.den(bin))$h plot(den, main = 'Estimated log(density)') bin <- mask(bin, mask = log(den$est) > -14) str(bin) List of 5  $ biny: num [1:41, 1:41] NA NA NA NA NA NA 35.1 35.1 NA NA ...  $ binw: num [1:41, 1:41] 0 0 0 0 0 ...  $ grid:List of 6   ..$ nd      : int 2   ..$ n       : int [1:2] 41 41   ..$ min     : num [1:2] -145.24 9.41   ..$ max     : num [1:2] 113 185   ..$ lag     : num [1:2] 6.45 4.38   ..$ dimnames: chr [1:2] \"lon\" \"lat\"   ..- attr(*, \"class\")= chr \"grid.par\"  $ data:List of 3   ..$ x  : num [1:85, 1:2] 42.78 -27.4 -1.16 -18.62 96.47 ...   .. ..- attr(*, \"dimnames\")=List of 2   .. .. ..$ : chr [1:85] \"1\" \"2\" \"3\" \"4\" ...   .. .. ..$ : chr [1:2] \"lon\" \"lat\"   ..$ y  : num [1:85] 14.6 25.5 21.6 24.6 17.6 ...   ..$ med: num 20  $ mask: logi [1:41, 1:41] TRUE TRUE TRUE TRUE TRUE TRUE ...  - attr(*, \"class\")= chr [1:3] \"bin.data\" \"bin.den\" \"data.grid\" cpu.time(total = FALSE) Time of last operation:     user  system elapsed     0.03    0.00    0.43"},{"path":[]},{"path":"https://rubenfcasal.github.io/npsp/articles/docs/aquifer.html","id":"regresión-polinómica-local","dir":"Articles > Docs","previous_headings":"Estimación de la tendencia","what":"Regresión polinómica local","title":"Geoestadistica no parametrica con el paquete *npsp*","text":"En el caso univariante, para cada \\(x_{0}\\) se ajusta un polinomio: \\[\\beta_{0}+\\beta_{1}\\left(x - x_{0}\\right) + \\cdots + \\beta_{p}\\left( x-x_{0}\\right)^{p}\\] por mínimos cuadrados ponderados, con pesos \\(w_{} = \\frac{1}{h}K\\left(\\frac{x-x_{0}}{h}\\right)\\). La estimación en \\(x_{0}\\) es \\(\\hat{\\mu}_{h}(x_{0})=\\hat{\\beta}_{0}\\). Adicionalmente: \\(\\widehat{\\mu_{h}^{r)}}(x_{0}) = r!\\hat{\\beta}_{r}\\). Habitualmente se considera: \\(p=0\\): Estimador Nadaraya-Watson. \\(p=1\\): Estimador lineal local. El caso multivariante es análogo. La estimación lineal local multivariante \\(\\hat{\\mu}_{\\mathbf{H}}(\\mathbf{x})=\\hat{\\beta}_{0}\\) se obtiene al minimizar: \\[\\min_{\\beta_{0},\\boldsymbol{\\beta}_{1}}\\sum_{=1}^{n} \\left( Y(\\mathbf{x}_{})-\\beta_{0}-{\\boldsymbol{\\beta}}_{1}^{t} (\\mathbf{x}_{}-\\mathbf{x})\\right)^{2} K_{\\mathbf{H}}(\\mathbf{x}_{}-\\mathbf{x}),\\] donde: \\(\\mathbf{H}\\) es la matriz de ventanas \\(d\\times d\\) (simétrica singular). \\(K_{\\mathbf{H}}(\\mathbf{u})=\\left\\vert \\mathbf{H}\\right\\vert ^{-1}K(\\mathbf{H}^{-1}\\mathbf{u})\\) y \\(K\\) núcleo multivariante. Explícitamente: \\[\\hat{\\mu}_{\\mathbf{H}}(\\mathbf{x}) = \\mathbf{e}_{1}^{t} \\left( \\mathbf{X}_{\\mathbf{x}}^{t} {\\mathbf{W}}_{\\mathbf{x}} \\mathbf{X}_{\\mathbf{x}} \\right)^{-1} \\mathbf{X}_{\\mathbf{x}}^{t} {\\mathbf{W}}_{\\mathbf{x}}\\mathbf{Y} \\equiv {s}_{\\mathbf{x}}^{t}\\mathbf{Y},\\] donde \\(\\mathbf{e}_{1} = \\left( 1, \\cdots, 0\\right)^{t}\\), \\(\\mathbf{X}_{\\mathbf{x}}\\) es la matriz con \\((1,(\\mathbf{x}_{}-\\mathbf{x})^{t})\\) en fila \\(\\), y \\(\\mathbf{W}_{\\mathbf{x}} = \\mathtt{diag} \\left( K_{\\mathbf{H}}(\\mathbf{x}_{1} - \\mathbf{x}), ..., K_{\\mathbf{H}}(\\mathbf{x}_{n}-\\mathbf{x}) \\right)\\) es la matriz de pesos. Se puede pensar que se obtiene aplicando un suavizado lineal \\((\\mathbf{x}_i, Y(\\mathbf{x}_i))\\): \\[\\hat{\\boldsymbol{\\mu}} = \\mathbf{SY},\\] siendo \\(\\mathbf{S}\\) la matriz de suavizado con \\(\\mathbf{s}_{\\mathbf{x}_{}}^{t}\\) en la fila \\(\\).","code":""},{"path":"https://rubenfcasal.github.io/npsp/articles/docs/aquifer.html","id":"implementación-en-el-paquete-npsp","dir":"Articles > Docs","previous_headings":"Estimación de la tendencia","what":"Implementación en el paquete npsp","title":"Geoestadistica no parametrica con el paquete *npsp*","text":"La estimación polinómica local está implementada en la función genérica locpol: Emplea una matriz de ventanas completa y un núcleo triweight para el cálculo de los pesos. Permite cálcular eficientemente la matriz de suavizado \\(\\mathbf{S}\\) (de utilidad en la estimación de la dependencia, en la selección de la ventana, …). Código optimizado para minimizar el tiempo de computación y los requerimientos de memoria (especialmente para validación cruzada, estimación del variograma, …). Los cálculos se realizan en FORTRAN. Para resolver el problema de regresión lineal (local), se emplea (src/dgelsyr.f) una modificación de la rutina DGELSY de la librería LAPACK (admite matrices de rango deficiente).","code":""},{"path":"https://rubenfcasal.github.io/npsp/articles/docs/aquifer.html","id":"ejemplo-2","dir":"Articles > Docs","previous_headings":"Estimación de la tendencia","what":"Ejemplo","title":"Geoestadistica no parametrica con el paquete *npsp*","text":"","code":"lp <- locpol(bin, h = diag(100, 2), hat.bin = TRUE)   # Perspective plot with a color scale spersp(lp, main = 'Trend estimates', zlab = 'piezometric-head', theta = 120) cpu.time(total = FALSE) Time of last operation:     user  system elapsed     0.02    0.00    1.00"},{"path":"https://rubenfcasal.github.io/npsp/articles/docs/aquifer.html","id":"estimación-del-variograma","dir":"Articles > Docs","previous_headings":"","what":"Estimación del variograma","title":"Geoestadistica no parametrica con el paquete *npsp*","text":"Al igual que en la geoestadística paramétrica tradicional, el modelado de la dependencia se realiza partir de los residuos: \\[e(\\mathbf{x}_{})=Y(\\mathbf{x}_{})-\\hat{\\mu}(\\mathbf{x}_{}).\\] Si la media se supone cte. (proceso estacionario) se trabaja directamente con las observaciones (se sustituiría \\(e(\\mathbf{x}_{})\\) por \\(Y(\\mathbf{x}_{})\\) en las expresiones). La estimación se realiza en dos pasos, en primer lugar se obtiene una estimación piloto del variograma y posteriormente se ajusta un modelo válido.","code":""},{"path":"https://rubenfcasal.github.io/npsp/articles/docs/aquifer.html","id":"estimación-piloto-del-variograma","dir":"Articles > Docs","previous_headings":"Estimación del variograma","what":"Estimación piloto del variograma","title":"Geoestadistica no parametrica con el paquete *npsp*","text":"En los métodos tradicionales se trata como un caso particular de regresión: \\[\\gamma\\left(  \\mathbf{x}_{}-\\mathbf{x}_{j}\\right)  =\\frac{1}{2}E\\left( \\varepsilon(\\mathbf{x}_{})-\\varepsilon(\\mathbf{x}_{j})\\right)^{2}\\] con \\(N=\\frac{n(n-1)}{2}\\) observaciones: \\[{\\left(\\mathbf{x}_{}-\\mathbf{x}_{j}, (e(\\mathbf{x}_{})-e(\\mathbf{x}_{j}))^2 / 2 \\right)},\\] asumiendo que la variabilidad de los residuos es (similar ) la de los errores. La estimación polinómico local \\(\\hat{\\gamma}_{\\mathbf{G}}(\\mathbf{u}) = \\hat{\\beta}_{0}\\) se obtendría minimizando: \\[\\begin{aligned} \\min_{\\beta_{0}, \\boldsymbol{\\beta}_{1}, \\cdots} \\sum_{=1}^{n}\\left( \\frac{1}{2} \\left( e(\\mathbf{x}_{})-e(\\mathbf{x}_{j}) \\right)^{2} - \\beta_{0} - {\\boldsymbol{\\beta}}_{1}^{t} (\\mathbf{x}_{} - \\mathbf{x}_{j} - \\mathbf{u}) - \\cdots\\right)  ^{2}\\times & \\\\ K_{\\mathbf{G}}(\\mathbf{x}_{}-\\mathbf{x}_{j}-\\mathbf{u})  & \\end{aligned},\\] siendo \\(\\mathbf{G}\\) la correspondiente matriz de ventanas. Actualmente en el paquete npsp solo está implementado el caso isotrópico: svar.bin: estimador empírico con binning lineal. np.svar: estimador polinómico local. Estas funciones son adecuadas para procesos estacionarios y se podrían emplear en el caso estacionario para estimar el variograma residual (sesgado) calculando previamente los residuos.","code":"lp.resid <- residuals(lp) esvar0 <- np.svariso(x, lp.resid, nlags = 50, h = 50) plot(esvar0, main = \"Nonparametric (residual) pilot semivariogram\") cpu.time(total = FALSE) Time of last operation:     user  system elapsed     0.06    0.00    0.28"},{"path":"https://rubenfcasal.github.io/npsp/articles/docs/aquifer.html","id":"estimación-piloto-del-variograma-con-corrección-de-sesgo","dir":"Articles > Docs","previous_headings":"Estimación del variograma","what":"Estimación piloto del variograma con corrección de sesgo","title":"Geoestadistica no parametrica con el paquete *npsp*","text":"El uso directo de los residuos \\(\\boldsymbol{\\hat{\\varepsilon}} = \\mathbf{Y} - \\hat{\\boldsymbol{\\mu}} = (\\mathbf{- S})\\mathbf{Y}\\) introduce un sesgo en la estimación del variograma, ya que su variabilidad es distinta de la de los errores: \\[Var(\\boldsymbol{\\hat{\\varepsilon}}) = {\\boldsymbol{\\Sigma}}_{\\hat{\\varepsilon}} = \\boldsymbol{\\Sigma} + \\mathbf{B},\\] siendo \\(\\mathbf{B} = \\mathbf{S} \\boldsymbol{\\Sigma} \\mathbf{S}^{t} - \\boldsymbol{\\Sigma} \\mathbf{S}^{t} - \\mathbf{S} \\boldsymbol{\\Sigma}\\) la matriz de sesgos. En términos del variograma: \\[Var\\left(\\hat{\\varepsilon}(\\mathbf{x}_i) - \\hat{\\varepsilon}(\\mathbf{x}_j) \\right) = Var\\left(\\varepsilon(\\mathbf{x}_i) - \\varepsilon(\\mathbf{x}_j) \\right) + b_{ii} + b_{jj} - 2 b_{ij}.\\] Este sesgo es normalmente negativo y mayor en saltos grandes (ver p.e. Cressie, 1993, sección 3.4.3). En Fernandez-Casal y Francisco-Fernandez (2013) se propone un método iterativo para su corrección. La función np.svariso.corr implementa un algoritmo similar (totalmente paramétrico). Comenzando con el estimador lineal local residual anterior, en cada iteración \\(k\\) se actualizan las diferencias \\((\\hat{\\varepsilon}(\\mathbf{x}_i)- \\hat{\\varepsilon}(\\mathbf{x}_j))^2\\) reemplazándolas por: \\[(\\hat{\\varepsilon}(\\mathbf{x}_i)- \\hat{\\varepsilon}(\\mathbf{x}_j))^2 - \\hat{b}_{ii}^{(k-1)} - \\hat{b}_{jj}^{(k-1)} + 2 \\hat{b}_{ij}^{(k-1)},\\] siendo \\(\\hat{\\mathbf{B}}^{(k-1)}\\) la aproximación del sesgo obtenida en la iteración anterior. Ejemplo:","code":"esvar <- np.svariso.corr(lp, nlags = 50, h = 50, plot = TRUE) Iteration  2 :  1  Iteration  3 :  0.1071746  Iteration  4 :  0.07731208  Iteration  5 :  0.06118289  Iteration  6 :  0.05087295  Iteration  7 :  0.04358588 cpu.time(total = FALSE) Time of last operation:     user  system elapsed     0.02    0.00    0.61"},{"path":"https://rubenfcasal.github.io/npsp/articles/docs/aquifer.html","id":"ajuste-de-un-modelo-no-paramétrico","dir":"Articles > Docs","previous_headings":"Estimación del variograma","what":"Ajuste de un modelo no paramétrico","title":"Geoestadistica no parametrica con el paquete *npsp*","text":"Los estimadores piloto verifican las propiedades de un variograma (condicionalmente semidefinidos negativos) y pueden ser usados en predicción espacial (kriging). Para resolver este problema se ajusta un modelo válido. La función fitsvar.sb.iso permite ajustar un modelo paramétrico de Shapiro-Botha. En el caso isotrópico son de la forma: \\[\\gamma(\\left\\Vert \\mathbf{u} \\right\\Vert ) = \\nu_{0} -     \\sum\\limits_{k=1}^{K}\\kappa_{d}(x_{k}\\left\\Vert \\mathbf{u}\\right\\Vert )     z_{k},\\] siendo: \\(\\kappa_{d}(x) = \\left( \\tfrac{2}{x}\\right)^{{\\frac{d{-2}}{2}}} \\Gamma\\left(  \\tfrac{d}{2}\\right)  J_{{\\frac{d{-2}}{2}}}(x)\\), donde \\(J_p\\) es la función de Bessel de orden \\(p\\). \\(x_{k}\\) nodos de discretización (siguiendo la recomendación de Gorsich y Genton, 2004, se establecen reescalando los ceros de las funciones de Bessel (ver disc.sb).). \\(\\left( z_{1}, ..., z_{K}, \\nu_{0} \\right)^{t}\\) parámetros, verificando: \\[z_{k} \\geq0 \\text{ y } c_{0} =  \\nu_{0}-\\sum\\nolimits_{k=1}^{K}z_{k}\\geq0.\\] El ajuste por WLS un conjunto de estimaciones piloto se puede realizar fácilmente mediante programación cuadrática (modificación de la función solve.QP del paquete quadprog para obtener la solución de problemas estrictamente convexos). Estos modelos son muy flexibles por lo que es habitual considerar una dimensión \\(d\\) mayor que la de los datos para obtener ajustes más suaves (empleando el parámetro dk). En el límite obtendríamos \\(\\kappa_{\\infty}(x)\\equiv e^{-x^{2}}\\), que se correspondería con un modelo válido en cualquier dimensión (se selecciona estableciendodk = 0). Ejemplo:  Estos modelos son extensibles al caso anisotrópico (Fernandez-Casal et al., 2003), adecuado para procesos espacio-temporales.","code":"svm <- fitsvar.sb.iso(esvar, dk = 0) plot(svm, main = \"Nonparametric semivariogram and fitted model\") svm0 <- fitsvar.sb.iso(esvar0, dk = 0)  with(svm0$fit, lines(u, fitted.sv, lty = 3, lwd = 2)) cpu.time(total = FALSE) Time of last operation:     user  system elapsed     0.03    0.02    0.28"},{"path":"https://rubenfcasal.github.io/npsp/articles/docs/aquifer.html","id":"selección-de-las-ventanas","dir":"Articles > Docs","previous_headings":"","what":"Selección de las ventanas","title":"Geoestadistica no parametrica con el paquete *npsp*","text":"La función genérica h.cv permite seleccionar la ventana de una estimación polinómico local (de la tendencia, densidad o variograma) usando criterios de validación cruzada (CV), validación cruzada generalizada (GCV) o MASE (estándar y modificados).","code":""},{"path":"https://rubenfcasal.github.io/npsp/articles/docs/aquifer.html","id":"estimación-de-la-tendencia-1","dir":"Articles > Docs","previous_headings":"Selección de las ventanas","what":"Estimación de la tendencia","title":"Geoestadistica no parametrica con el paquete *npsp*","text":"Con los criterios de selección de la ventana diseñados para datos independientes se tiende infrasuavizar la estimación (e.g. Opsomer et al, 2001): Validación cruzada tradicional (LOOCV): \\[CV(\\mathbf{H})=\\frac{1}{n}\\sum_{=1}^{n} \\left( Y(\\mathbf{x}_{}) - \\hat{\\mu}_{-}(\\mathbf{x}_{}) \\right)^{2},\\] siendo \\(\\hat{\\mu}_{-}(\\mathbf{x}_{})\\) la estimación obtenida eliminando el dato \\(\\)-ésimo. Validación cruzada generalizada (Craven y Wahba, 1978): \\[GCV(\\mathbf{H})=\\frac{1}{n}\\sum_{=1}^{n} \\left(  \\frac{Y(\\mathbf{x}_{}) -\\hat{\\mu}(\\mathbf{x}_{})} {1-\\frac{1}{n}tr\\left( \\mathbf{S}\\right) }\\right)^{2}.\\] Por ello se han propuesto distintos criterios alternativos para el caso de datos dependientes: Validación cruzada modificada (Chu Marron, 1991): \\[MCV(\\mathbf{H})=\\frac{1}{n}\\sum_{=1}^{n}\\left(  Y(\\mathbf{x}_{})-\\hat {\\mu}_{-N()}(\\mathbf{x}_{})\\right)^{2},\\] siendo \\(\\hat{\\mu}_{-}(\\mathbf{x}_{})\\) la estimación obtenida eliminando los datos en un vecindario \\(N()\\) de \\(\\mathbf{x}_{}\\). Validación cruzada generalizada con corrección de sesgo para dependencia (Francisco-Fernandez Opsomer, 2005): \\[CGCV(\\mathbf{H})=\\frac{1}{n}\\sum_{=1}^{n} \\left(   \\frac{Y(\\mathbf{x}_{}) -\\hat{\\mu}(\\mathbf{x}_{})} {1 - \\frac{1}{n}tr\\left( \\mathbf{S} \\hat{\\mathbf{R}} \\right) }\\right)^{2},\\] siendo \\(\\hat{\\mathbf{R}}\\) una estimación de la matriz de correlaciones. Adicionalmente, reescribiendo el criterio MCV de la forma: \\[MCV(\\mathbf{H}) = \\frac{1}{n}  \\left( \\mathbf{Y}-\\mathbf{S}_{-N} \\mathbf{Y}\\right) ^{t} \\left( \\mathbf{Y}-\\mathbf{S}_{-N} \\mathbf{Y} \\right),\\] donde \\(N = \\left\\lbrace  N(1),\\ldots, N(n) \\right\\rbrace\\), puede verse que: \\[\\mathrm{E}\\left( MCV(\\mathbf{H})\\right) \\simeq MASE(\\mathbf{H}) + \\sigma^{2} - \\frac{2}{n}tr\\left(\\mathbf{S}_{-N}\\boldsymbol{\\Sigma}\\right),\\] siendo: \\[MASE(\\mathbf{H})= \\frac{1}{n}\\mathbb{E}\\left( \\left( \\mathbf{SY}-\\boldsymbol{\\mu}\\right)^{t} \\left( \\mathbf{SY}-\\boldsymbol{\\mu}\\right) \\right) = \\\\ = \\frac{1}{n}\\left(\\mathbf{S}\\boldsymbol{\\mu}-\\boldsymbol{\\mu}\\right)^{t} \\left( \\mathbf{S}\\boldsymbol{\\mu}-\\boldsymbol{\\mu}\\right) + \\frac{1}{n}tr\\left( \\mathbf{S}\\boldsymbol{\\Sigma }\\mathbf{S}^{t}\\right).\\] Validación cruzada modificada corregida (Fernández-Casal et al, Preprint): \\[CMCV(\\mathbf{H}) = \\frac{1}{n}\\sum_{=1}^{n} \\left( Y(\\mathbf{x}_{}) - \\hat{\\mu}_{-N()}{(\\mathbf{x_i)}} \\right)^{2} + \\frac{2}{n}tr\\left( \\mathbf{S}_{-N} \\hat{\\boldsymbol{\\Sigma}}\\right).\\] \\(CCV\\) sería un caso particular tomando \\(N = N_1 = \\left\\lbrace \\{\\mathbf{x}_{1}\\}, \\ldots, \\{\\mathbf{x}_{n}\\}\\right\\rbrace\\). Ventana por bootstrap suavizado: El criterio \\(MASE(\\mathbf{H})\\) puede ser empleado cuando se conocen la media y varianzas teóricas (p.e. en simulación), pero si se sustituyen por estimaciones, obtendríamos la ventana óptima MASE de la correspondiente distribución bootstrap. Hay que tener cuidado con los algoritmos de optimización automáticos. Por defecto se emplea el método “L-BFGS-B” de la función optim. Como se trata de una minimización lineal multidimensional puede haber problemas de mínimos locales. Para intentar evitar este problema se puede establecer unos valores iniciales para los parámetros de la ventana mediante el argumento h.start. Alternativamente se puede establecer el parámetro DEalgorithm = TRUE para utilizar el algoritmo genético de optimización del paquete DEoptim (aunque puede aumentar considerablemente el tiempo de computación). Empleando la ventana seleccionada se podría reestimar de nuevo la tendencia, aunque también habría que volver estimar el variograma (si se modifica la variabilidad de gran escala, habría que actualizar la variabilidad de pequeña escala). Este procedimento se podría repetir iterativamente. Se tratará más adelante en la sección “Estimación conjunta (automática)”.","code":"#   Example: bin2 <- binning(x, y)     # sets nbin automatically h.cv(bin2, h.start = c(100, 100))                # MCV (ncv = 2) $h          [,1]   [,2] [1,] 150.2659  0.000 [2,]   0.0000 82.392  $value [1] 3.989047  $objective [1] \"CV\" # cov.bin <-  varcov(svm2, coords = coords(bin2)) lp.h <- h.cv(bin2, cov.bin = svm, h.start = c(100, 100)) # CMCV (ncv = 2) lp.h $h          [,1]    [,2] [1,] 403.1891   0.000 [2,]   0.0000 208.273  $value [1] 5.925639  $objective [1] \"CV\" cpu.time(total = FALSE) Time of last operation:     user  system elapsed     0.03    0.26    2.86"},{"path":"https://rubenfcasal.github.io/npsp/articles/docs/aquifer.html","id":"estimación-del-variograma-1","dir":"Articles > Docs","previous_headings":"Selección de las ventanas","what":"Estimación del variograma","title":"Geoestadistica no parametrica con el paquete *npsp*","text":"La ventana para la estimación del variograma puede seleccionarse por ejemplo minimizando el correspondiente error cuadrático de validación cruzada: \\[\\sum\\limits_{=1}^{n-1}\\sum\\limits_{j=+1}^{n} \\left( \\left( \\hat{\\varepsilon}(\\mathbf{x}_{}) - \\hat{\\varepsilon}(\\mathbf{x}_{j})\\right)^{2} - 2\\hat{\\gamma}_{-(,j)}\\left( \\left\\Vert \\mathbf{x}_{} - \\mathbf{x}_{j}\\right\\Vert \\right) \\right) ^{2},\\] siendo \\(\\hat{\\gamma}_{-(,j)}(\\cdot )\\) la estimación obtenida descartando \\(\\left( \\hat{\\varepsilon}(\\mathbf{x}_{}) - \\hat{\\varepsilon}(\\mathbf{x}_{j})\\right) ^{2}\\). Sin embargo, para tener un mejor ajuste cerca del origen, suele ser preferible emplear el error cuadrático relativo de validación cruzada: \\[\\sum\\limits_{=1}^{n-1}\\sum\\limits_{j=+1}^{n}\\left( \\frac{\\left( \\hat{ \\varepsilon}(\\mathbf{x}_{})-\\hat{\\varepsilon}(\\mathbf{x}_{j})\\right) ^{2} }{2\\hat{\\gamma}_{-(,j)}\\left( \\left\\Vert \\mathbf{x}_{}-\\mathbf{x} _{j}\\right\\Vert \\right) }-1\\right) ^{2}.\\] Adicionalmente, si hay datos atípicos, sería recomendable emplear un error absoluto en lugar de cuadrático. Ninguno de estos criterios tiene en cuenta la dependencia entre las semivarianzas, por lo que las ventanas seleccionadas tenderán infrasuavizar (especialmente en saltos grandes). Si se emplea un procedimiento automático, puede ser recomendable incrementar la ventana obtenida con estos criterios (en el algoritmo automático implementado en np.fitgeo descrito continuación, si se especifica la ventana para la estimación del variograma, se incrementa por defecto la ventana obtenida con h.cv en un 50%). NOTA: Actualmente sólo está implementada la estimación con ventana global. En este caso, como las semivarianzas son homocedásticas, sería preferible emplear ventanas locales.","code":""},{"path":"https://rubenfcasal.github.io/npsp/articles/docs/aquifer.html","id":"estimación-conjunta-automática","dir":"Articles > Docs","previous_headings":"","what":"Estimación conjunta (automática)","title":"Geoestadistica no parametrica con el paquete *npsp*","text":"Como se comentó en la sección anterior, para poder seleccionar una ventana “óptima” para la estimación de la tendencia es necesario disponer de una estimación del variograma. Sin embargo, la estimación de la dependencia requiere de una estimación de la tendencia. Para resolver este problema circular se puede emplear un algoritmo iterativo (similar al método de estimación paramétrica tradicional propuesto por Neuman y Jacobson, 1984): Seleccionar una ventana inicial \\(\\mathbf{H}^{(0)}\\) para \\(\\hat{\\mu}\\) (usando por ejemplo \\(MCV\\)). Para \\(k\\geq 1\\), usando la ventana \\(\\mathbf{H}^{(k-1)}\\) calcular \\(\\hat{\\boldsymbol{\\mu}} = \\mathbf{S}\\mathbf{Y}\\) y los correspondientes residuos \\(\\hat{\\boldsymbol{\\varepsilon}}\\). Empleando el algoritmo para la corrección de sesgo, obtener una estimación piloto \\(\\tilde{\\gamma}(\\cdot)\\), y ajustar un modelo S-B. Construir \\(\\hat{\\Sigma}^{(k)}\\) y seleccionar una nueva ventana \\(\\mathbf{H}^{(k)}\\) (empleando \\(CMCV\\) o \\(CGCV\\)). Repetir los pasos 2 al 4 hasta obtener convergencia. Este algoritmo está implementado en la función np.fitgeo y normalmente dos iteraciones (el valor por defecto) son suficientes. Por ejemplo, se podría hacer un modelado automático ejecutando: El parámetro iter controla el número máximo de iteraciones del algoritmo completo. Estableciendo iter = 0 se emplea el variograma residual: La rutina devuelve el modelo paramétrico ajustado, un objeto np.geo que contiene las estimaciones de la tendencia y del variograma. Al representarlo gráficamente: Además de las estimaciones finales de la tendencia y del variograma, se muestra también el variograma ajustado obtenido en la iteración anterior (y si svm.resid = TRUE el variograma residual). Si hay grandes diferencias habría necesidad de seguir iterando, ya que el criterio de selección de la ventana proporcionaría un suavizado similar.","code":"geom <- np.fitgeo(x, y, svm.resid = TRUE, h.start = c(100, 100)) cpu.time(total = FALSE) Time of last operation:     user  system elapsed     0.08    0.02    1.28 geom0 <- np.fitgeo(x, y, iter = 0, h.start = c(100, 100)) plot(geom)"},{"path":"https://rubenfcasal.github.io/npsp/articles/docs/aquifer.html","id":"predicción-kriging","dir":"Articles > Docs","previous_headings":"","what":"Predicción kriging","title":"Geoestadistica no parametrica con el paquete *npsp*","text":"La función genérica np.kriging permite obtener predicciones mediante kriging residual (combinando la estimación de la tendencia con el kriging simple de los residuos). Actualmente solo está implementado kriging simple y kriging residual con vecindario global. Para la resolución del sistema de ecuaciones kriging, partir de la factorización de Choleski de la matriz de covarianzas, se emplea el paquete spam para matrices dispersas. Como ejemplo, compararemos las predicciones kriging obtenidas con el ajuste automático con las correspondientes la estimación con el variograma residual.   Hay que tener en cuenta que se trata de un método robusto y depende demasiado del modelo de tendencia (la variabilidad explicada por la tendencia es capturada por la variabilidad de pequeña escala). En este caso es de especial importancia la estimación del variograma cerca del origen. Sin embargo, si se comparan las varianzas kriging (o se emplean otros métodos de inferencia, como por ejemplo bootstrap) puede haber grandes diferencias entre los resultados obtenidos con distintos modelos.","code":"krig.grid0 <- np.kriging(geom0, ngrid = c(96, 96)) # 9216 predicciones krig.grid <- np.kriging(geom, ngrid = c(96, 96)) cpu.time(total = FALSE) Time of last operation:     user  system elapsed     0.20    0.00    2.65 old.par <- par(mfrow = c(1,2), omd = c(0.01, 0.9, 0.05, 0.95)) scale.range <- range(krig.grid0$trend, krig.grid$trend, finite = TRUE) simage( krig.grid0, 'trend', slim = scale.range, main = 'Trend estimates (residuals)',          col = jet.colors(256), legend = FALSE, reset = FALSE) simage( krig.grid, 'trend', slim = scale.range, main = 'Trend estimates (iteration 2)',          col = jet.colors(256), legend = FALSE, reset = FALSE) par(old.par) splot(slim = scale.range, col = jet.colors(256), add = TRUE) old.par <- par(mfrow = c(1,2), omd = c(0.01, 0.9, 0.05, 0.95)) scale.range <- range(krig.grid0$kpred, krig.grid$kpred, finite = TRUE) simage( krig.grid0, 'kpred', slim = scale.range, main = 'Kriging predictions (residuals)',          col = jet.colors(256), legend = FALSE, reset = FALSE) simage( krig.grid, 'kpred', slim = scale.range, main = 'Kriging predictions (iteration 2)',          col = jet.colors(256), legend = FALSE, reset = FALSE) par(old.par) splot(slim = scale.range, col = jet.colors(256), add = TRUE) old.par <- par(mfrow = c(1,2), omd = c(0.01, 0.9, 0.05, 0.95)) scale.range <- range(krig.grid0$ksd, krig.grid$ksd, finite = TRUE) simage( krig.grid0, 'ksd', slim = scale.range, main = 'Kriging sd (residuals)',          col = hot.colors(256), legend = FALSE, reset = FALSE) with(aquifer, points(lon, lat, cex = 0.75)) simage( krig.grid, 'ksd', slim = scale.range, main = 'Kriging sd (iteration 2)',          col = hot.colors(256), legend = FALSE, reset = FALSE) with(aquifer, points(lon, lat, cex = 0.75)) par(old.par) splot(slim = scale.range, col = hot.colors(256), add = TRUE) cpu.time() Time of last operation:     user  system elapsed     0.08    0.01    0.74  Total time:    user  system elapsed     0.55    0.31   10.14"},{"path":"https://rubenfcasal.github.io/npsp/articles/docs/aquifer.html","id":"futuras-implementaciones","dir":"Articles > Docs","previous_headings":"Predicción kriging","what":"Futuras implementaciones","title":"Geoestadistica no parametrica con el paquete *npsp*","text":"Modelos anisotrópicos de semivariograma (caso espacio-temporal). Modelos aditivos y parcialmente lineales. Modelos dinámicos. Kriging local. …","code":""},{"path":"https://rubenfcasal.github.io/npsp/articles/docs/aquifer.html","id":"referencias","dir":"Articles > Docs","previous_headings":"","what":"Referencias","title":"Geoestadistica no parametrica con el paquete *npsp*","text":"Chu, C.K. Marron, J.S. (1991) Comparison Two Bandwidth Selectors Dependent Errors. Annals Statistics, 19, 1906-1918. Fernández-Casal R., Castillo-Páez S. Francisco-Fernández M. (2018), Nonparametric geostatistical risk mapping, Stoch. Environ. Res. Ris. Assess., DOI. Fernández-Casal R., Castillo-Páez S. García-Soidán P. (2017), Nonparametric estimation small-scale variability heteroscedastic spatial processes, Spa. Sta., 22, 358-370, DOI. Fernandez-Casal R. Francisco-Fernandez M. (2014) Nonparametric bias-corrected variogram estimation non-constant trend, Stoch. Environ. Res. Ris. Assess., 28, 1247-1259. Fernandez-Casal R., Gonzalez-Manteiga W. Febrero-Bande M. (2003) Flexible Spatio-Temporal Stationary Variogram Models, Statistics Computing, 13, 127-136. Francisco-Fernandez M. Opsomer J.D. (2005) Smoothing parameter selection methods nonparametric regression spatially correlated errors. Canadian Journal Statistics, 33, 539-558. Rupert D. Wand M.P. (1994) Multivariate locally weighted least squares regression. Annals Statistics, 22, 1346-1370. Shapiro . Botha J.D. (1991) Variogram fitting general class conditionally non-negative definite functions. Computational Statistics Data Analysis, 11, 87-96. Wand M.P. (1994) Fast Computation Multivariate Kernel Estimators. Journal Computational Graphical Statistics, 3, 433-445. Wand M.P. Jones M.C. (1995) Kernel Smoothing. Chapman Hall, London.","code":""},{"path":"https://rubenfcasal.github.io/npsp/articles/docs/Introduccion.html","id":"proceso-espacial","dir":"Articles > Docs","previous_headings":"","what":"Proceso espacial","title":" Introduccion a la Geoestadistica con R","text":"Si \\(Y(\\mathbf{x})\\) es un valor aleatorio en la posición espacial \\(\\mathbf{x}\\\\mathbb{R}^{d}\\), entonces:\\[\\left\\{  Y(\\mathbf{x}):\\mathbf{x}\\D\\subset\\mathbb{R}^{d}\\right\\}  ,\\] se denomina proceso espacial (univariante). Normalmente sólo se observa un conjunto de valores:\\[\\left\\{  y(\\mathbf{x}_{1}),\\ldots,y(\\mathbf{x}_{n})\\right\\}\\] (realización parcial).","code":""},{"path":"https://rubenfcasal.github.io/npsp/articles/docs/Introduccion.html","id":"tipos-de-procesos-espaciales","dir":"Articles > Docs","previous_headings":"Proceso espacial","what":"Tipos de procesos espaciales","title":" Introduccion a la Geoestadistica con R","text":"Dependiendo de las suposiciones sobre el conjunto \\(D\\), se distingue entre: Procesos geoestadísticos: índice espacial continuo. \\(D\\) es un subconjunto fijo que contiene un rectángulo \\(d\\)-dimensional de volumen positivo. El proceso puede ser observado en cualquier posición. Procesos reticulares/regionales: índice espacial discreto. \\(D\\) es un conjunto numerable de posiciones/regiones. El proceso solo puede ser observado en determinadas posiciones. Procesos/patrones puntuales: índice espacial aleatorio. \\(D\\) es un proceso puntual en \\(\\mathbb{R}^{d}.\\) Las posiciones en las que se observa el proceso son aleatorias. Caso general: proceso puntual marcado.","code":""},{"path":[]},{"path":"https://rubenfcasal.github.io/npsp/articles/docs/Introduccion.html","id":"wolfcamp-aquifer-data","dir":"Articles > Docs","previous_headings":"Ejemplo (proceso geostadístico)","what":"Wolfcamp aquifer data:","title":" Introduccion a la Geoestadistica con R","text":"","code":"library(npsp) ##  Package npsp: Nonparametric Spatial Statistics, ##  version 0.7-14 (built on 2024-07-09). ##  Copyright (C) R. Fernandez-Casal 2012-2024. ##  Type `help(npsp)` for an overview of the package or ##  visit https://rubenfcasal.github.io/npsp. # ?aquifer str(aquifer) ## 'data.frame':    85 obs. of  3 variables: ##  $ lon : num  42.78 -27.4 -1.16 -18.62 96.47 ... ##  $ lat : num  127.6 90.8 84.9 76.5 64.6 ... ##  $ head: num  1464 2553 2158 2455 1756 ... summary(aquifer) ##       lon               lat               head      ##  Min.   :-145.24   Min.   :  9.414   Min.   :1024   ##  1st Qu.: -21.30   1st Qu.: 33.682   1st Qu.:1548   ##  Median :  11.66   Median : 59.158   Median :1797   ##  Mean   :  16.89   Mean   : 79.356   Mean   :2002   ##  3rd Qu.:  70.90   3rd Qu.:131.825   3rd Qu.:2540   ##  Max.   : 112.80   Max.   :184.766   Max.   :3571 # Scatter plot with a color scale with(aquifer, spoints(lon, lat, head, main = \"Wolfcamp aquifer data\"))"},{"path":"https://rubenfcasal.github.io/npsp/articles/docs/Introduccion.html","id":"paquetes-de-r","dir":"Articles > Docs","previous_headings":"","what":"Paquetes de R","title":" Introduccion a la Geoestadistica con R","text":"En R hay disponibles una gran cantidad de paquetes para el análisis estadístico de datos espaciales: CRAN Task View: Analysis Spatial Data (http://cran.r-project.org/web/views/Spatial.html) Procesos geoestadísticos: gstat, geoR, geoRglm, fields, spBayes, RandomFields, VR:spatial, sgeostat, vardiag, npsp Procesos reticulares/regionales: spdep, DCluster, spgwr, ade4 Procesos puntuales: spatstat, VR:spatial, splancs Otros paquetes: sp, sf, spacetime, maptools, rgdal, raster, … spgrass6, GeoXp, PBSmapping, … googleVis, plotGoogleMaps, … Una introducción la geoestadística con el paquete geoR está disponible aquí.","code":""},{"path":"https://rubenfcasal.github.io/npsp/articles/docs/Introduccion.html","id":"el-paquete-sp","dir":"Articles > Docs","previous_headings":"","what":"El paquete sp","title":" Introduccion a la Geoestadistica con R","text":"Se decidió crear un paquete de R con el objetivo de unificar la manipulación de datos espaciales: El paquete sp: Classes methods spatial data. Bivand, R.S., Pebesma, E.J. y Gómez-Rubio, V. (2008). Applied Spatial Data Analysis R. Use R! Series. Springer.http://www.asdar-book.org Sirve de soporte muchos otros paquetes. Facilita la interacción entre paquetes de R y también con software externo (ej. GIS).","code":""},{"path":"https://rubenfcasal.github.io/npsp/articles/docs/Introduccion.html","id":"el-paquete-sf","dir":"Articles > Docs","previous_headings":"","what":"El paquete sf","title":" Introduccion a la Geoestadistica con R","text":"Recientemente se comenzó desarrollar una alternativa, el paquete sf Simple Features R, con un sistema de clases S3 más simple.","code":""},{"path":"https://rubenfcasal.github.io/npsp/articles/krigstat.html","id":"kriging-with-gstat","dir":"Articles","previous_headings":"","what":"Kriging with gstat","title":"Kriging with gstat","text":"can use krige (krige.cv) utilities gstat package together .vgm (global local) kriging…","code":""},{"path":"https://rubenfcasal.github.io/npsp/articles/krigstat.html","id":"wolfcamp-aquifer-data","dir":"Articles","previous_headings":"Kriging with gstat","what":"Wolfcamp aquifer data:","title":"Kriging with gstat","text":"","code":"library(npsp) ##  Package npsp: Nonparametric Spatial Statistics, ##  version 0.7-14 (built on 2024-07-09). ##  Copyright (C) R. Fernandez-Casal 2012-2024. ##  Type `help(npsp)` for an overview of the package or ##  visit https://rubenfcasal.github.io/npsp. # ?aquifer; str(aquifer); summary(aquifer) # Scatter plot with a color scale with(aquifer, spoints(lon, lat, head, main = \"Wolfcamp aquifer data\"))"},{"path":[]},{"path":"https://rubenfcasal.github.io/npsp/articles/krigstat.html","id":"trend-estimation","dir":"Articles","previous_headings":"Kriging with gstat > Kriging","what":"Trend estimation","title":"Kriging with gstat","text":"","code":"lp <- locpol(aquifer[,1:2], aquifer$head, h = diag(75, 2),               hat.bin = TRUE)               # np.svariso.corr: 'lp' must have a '$locpol$hat' component  # Mask grid nodes far from data mask <- log(np.den(lp, h = diag(c(55,55)), degree = 0)$est) > -15 lp <- mask(lp, mask = mask)  spersp(lp, main = 'Trend estimates',         zlab = 'piezometric-head levels', theta = 120) cpu.time(total = FALSE) ## Time of last operation:  ##    user  system elapsed  ##    0.37    0.06    2.45"},{"path":"https://rubenfcasal.github.io/npsp/articles/krigstat.html","id":"variogram-estimation","dir":"Articles","previous_headings":"Kriging with gstat > Kriging","what":"Variogram estimation","title":"Kriging with gstat","text":"","code":"lp.resid <- residuals(lp) esvar <- np.svariso(aquifer[,1:2], lp.resid, maxlag = 150, nlags = 60, h = 60) svm <- fitsvar.sb.iso(esvar)  # dk = 2 esvar2 <- np.svariso.corr(lp, maxlag = 150, nlags = 60, h = 60) svm2 <- fitsvar.sb.iso(esvar2, dk = 0)  # dk = Inf plot(svm2, main = \"Nonparametric bias-corrected semivariogram and fitted models\",       lwd = 2)  with(svm$fit, lines(u, fitted.sv, lty = 2)) cpu.time(total = FALSE) ## Time of last operation:  ##    user  system elapsed  ##     0.0     0.0     0.3"},{"path":"https://rubenfcasal.github.io/npsp/articles/krigstat.html","id":"residual-kriging","dir":"Articles","previous_headings":"Kriging with gstat","what":"Residual Kriging","title":"Kriging with gstat","text":"","code":"library(sp) library(gstat) spdf <- SpatialPointsDataFrame(aquifer[,1:2],              data.frame(y = aquifer$head, r = lp.resid)) newdata <- SpatialPoints(coords(lp)) krig <- krige(r ~ 1, locations = spdf, newdata = newdata,                model = as.vgm(svm), beta = 0) ## [using simple kriging] krig.grid <- data.grid(kpred = lp$est + krig@data$var1.pred,                         ksd = sqrt(krig@data$var1.var),          grid = lp$grid) krig2 <- krige(r ~ 1, locations = spdf, newdata = newdata,                 model = as.vgm(svm2), beta = 0) ## [using simple kriging] krig2.grid <- data.grid(kpred = lp$est + krig2@data$var1.pred,                          ksd = sqrt(krig2@data$var1.var),          grid = lp$grid) scale.color <- jet.colors(64) scale.range <- c(1100, 4100) # 1x2 plot with some room for the legend... old.par <- par(mfrow = c(1,2), omd = c(0.01, 0.9, 0.05, 0.95),                plt= c(0.08, 0.94, 0.1, 0.8)) spersp(krig.grid, main = 'Kriging predictions', col = scale.color,         legend = FALSE, theta = 120, reset = FALSE) spersp(krig2.grid, main = 'Kriging predictions \\n (bias-corrected)',         col = scale.color, legend = FALSE, theta = 120, reset = FALSE) par(old.par) splot(slim = scale.range, col = scale.color, legend.shrink = 0.6, add = TRUE) old.par <- par(mfrow = c(1,2), omd = c(0.05, 0.85, 0.05, 0.95)) scale.range <- c(125, 200) scale.range <- range(krig.grid$ksd, krig2.grid$ksd, finite = TRUE) image( krig.grid, 'ksd', zlim = scale.range, # asp = 1,         main = 'Kriging sd', col = scale.color) with(aquifer, points(lon, lat, cex = 0.75)) image( krig2.grid, 'ksd', zlim = scale.range, # asp = 1,         main = 'Kriging sd (bias-corrected)', col = scale.color) with(aquifer, points(lon, lat, cex = 0.75)) par(old.par) splot(slim = scale.range, col = scale.color, add = TRUE) cpu.time() ## Time of last operation:  ##    user  system elapsed  ##    0.09    0.03    2.28  ## Total time: ##    user  system elapsed  ##    0.46    0.09    5.03"},{"path":"https://rubenfcasal.github.io/npsp/articles/krigstat.html","id":"notes","dir":"Articles","previous_headings":"Kriging with gstat > Residual Kriging","what":"Notes:","title":"Kriging with gstat","text":"reproduce results SERRA paper use data(wolfcamp) package geoR. Results obtained aquifer data set comparable Cressie (1993, section 4.1).","code":""},{"path":"https://rubenfcasal.github.io/npsp/articles/npsp.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Introduction to the npsp Package","text":"assume \\(\\left\\{ Y(\\mathbf{x}),\\mathbf{x}\\D \\subset \\mathbb{R}^{d}\\right\\}\\) spatial process can modeled : \\[Y(\\mathbf{x})=\\mu(\\mathbf{x})+\\varepsilon(\\mathbf{x}),\\] \\(\\mu(\\cdot)\\) trend function (large-scale variation) error term \\(\\varepsilon\\) (small-scale variation), second order stationary process zero mean covariogram \\(C(\\mathbf{u}) = Cov(\\varepsilon \\left( \\mathbf{x}\\right) ,\\varepsilon \\left(\\mathbf{x}+\\mathbf{u}\\right) )\\), \\(\\mathbf{u} \\D\\). framework, given \\(n\\) observed values \\(\\mathbf{Y}=( Y(\\mathbf{x}_{1}),...,Y(\\mathbf{x}_{n}))^{t}\\), first step consists estimate trend \\(\\mu(\\mathbf{x})\\) semivariogram \\(\\gamma(\\mathbf{h}) = C(\\mathbf{0}) - C(\\mathbf{u})\\). several R packages, gstat geoR, implement traditional geostatistical techniques approximate functions. Nevertheless, approaches usually assume parametric models, can present misspecification problems. aim npsp package provide nonparametric tools geostatistical modeling interpolation, general spatial model (large + small variation scales), without assuming specific form (parametric model) trend variogram process. precipitation data set (sp::SpatialGridDataFrame class object), supplied npsp package, used examples work. data consist total precipitations (square-root rainfall inches) March 2016 recorded 1053 locations continental part USA. instance, spoints() function may used plot data…  Function scattersplot() may used detect presence non-constant trend…","code":"library(npsp) ##  Package npsp: Nonparametric Spatial Statistics, ##  version 0.7-14 (built on 2024-07-09). ##  Copyright (C) R. Fernandez-Casal 2012-2024. ##  Type `help(npsp)` for an overview of the package or ##  visit https://rubenfcasal.github.io/npsp. library(sp) summary(precipitation) ## Object of class SpatialPointsDataFrame ## Coordinates: ##         min      max ## x1 -124.555 -67.7928 ## x2   24.555  48.9676 ## Is projected: FALSE  ## proj4string : [+proj=longlat +ellps=WGS84] ## Number of points: 1053 ## Data attributes: ##        y              WBAN                 state      ##  Min.   :0.000   Min.   :  166   USA          :1053   ##  1st Qu.:1.100   1st Qu.:13733   Alaska       :   0   ##  Median :1.539   Median :23254   Isla Hawai   :   0   ##  Mean   :1.551   Mean   :39700   Isla Honolulu:   0   ##  3rd Qu.:1.954   3rd Qu.:63895   Isla Kauai   :   0   ##  Max.   :4.105   Max.   :94996   Isla Maui    :   0   ##                                  (Other)      :   0 spoints(precipitation) scattersplot(precipitation)"},{"path":"https://rubenfcasal.github.io/npsp/articles/npsp.html","id":"trend-estimation","dir":"Articles","previous_headings":"","what":"Trend estimation","title":"Introduction to the npsp Package","text":"local polynomial trend estimator \\(\\hat{\\mu}_{\\mathbf{H}}(\\mathbf{x})\\) (e.g. Fan Gijbels, 1996), obtained polynomial smoothing \\(\\{(\\mathbf{x}_{},Y(\\mathbf{x}_{})):=1,\\ldots,n\\}\\), solution \\(\\beta_0\\) least squares minimization problem \\[\\begin{aligned}     \\min_{\\beta_0 ,\\boldsymbol{\\beta}_1, \\ldots, \\boldsymbol{\\beta}_p}     \\sum_{=1}^{n}\\left\\{ Y(\\mathbf{x}_{})-\\beta_0     -\\boldsymbol{\\beta}_1^{t}(\\mathbf{x}_{}-\\mathbf{x}) - \\ldots \\right. \\nonumber \\\\     \\left. -\\boldsymbol{\\beta}_p^{t}(\\mathbf{x}_{}-\\mathbf{x})^p \\right\\}^{2}     K_{\\mathbf{H}}(\\mathbf{x}_{}-\\mathbf{x}), \\end{aligned}\\] \\(\\mathbf{H}\\) \\(d\\times d\\) symmetric positive definite matrix; \\(K\\) \\(d\\)-dimensional kernel \\(K_{\\mathbf{H}}(\\mathbf{u})=\\left\\vert     \\mathbf{H}\\right\\vert ^{-1}K(\\mathbf{H}^{-1}\\mathbf{u})\\). bandwidth matrix \\(\\mathbf{H}\\) controls shape size local neighborhood used estimate \\(\\mu(\\mathbf{x})\\). local trend estimates can computed practice locpol() function. full bandwidth matrix multiplicative triweight kernel used compute weights. Main calculations performed Fortran using LAPACK library. can plot trend estimates function simage() (spersp()). Additionally, case estimates outside continental part USA masked.  smoothing procedures npsp use linear binning discretize data. instance, instead previous code can use:  Usually two grids considered, low resolution one speed computations modeling (e.g. using default values), higher resolution one obtain final results.","code":"x <- coordinates(precipitation) y <- precipitation$y lp <- locpol(x, y, nbin = c(120, 120), h = diag(c(5, 5))) attr <- attributes(precipitation) border <- attr$border  # Mask grid points outside of continental part of USA lp <- mask(lp, window = border) ## Warning in mask.locpol.bin(lp, window = border):  ## some data will be masked... interior <- attr$interior  slim <- range(y) col <- jet.colors(256) simage(lp,  slim = slim, main = \"Trend estimates\",        col = col, xlab = \"Longitude\", ylab = \"Latitude\", asp = 1) plot(border, border = \"darkgray\", lwd = 2, add = TRUE) plot(interior, border = \"lightgray\", lwd = 1, add = TRUE) bin <- binning(x, y, nbin = c(120, 120), window = border) # lp <- locpol(bin, h = diag(c(5, 5))) lp2 <- locpol(bin, h = diag(c(2, 2))) simage(lp2, slim = slim, main = \"Trend estimates\",        col = col, xlab = \"Longitude\", ylab = \"Latitude\", asp = 1) plot(border, border = \"darkgray\", lwd = 2, add = TRUE) plot(interior, border = \"lightgray\", lwd = 1, add = TRUE)"},{"path":"https://rubenfcasal.github.io/npsp/articles/npsp.html","id":"bandwidth-selection","dir":"Articles","previous_headings":"","what":"Bandwidth selection","title":"Introduction to the npsp Package","text":"trend estimates depends crucially bandwidth matrix \\(H\\). small bandwidth produce undersmoothed estimates, whereas big bandwidth oversmooth data. Although may subjectively choosed eye, beneficial automatic selection criteria data. Traditional bandwidth selectors, cross validation (CV) generalized cross validation (GCV), good performance dependent data (Opsomer et al, 2001), since tend undersmooth trend function. modified cross-validation criteria (MCV), proposed (Chu Marron, 1991) time series, can adapted spatial data, ignoring observations neighbourhood \\(N()\\) around \\(\\mathbf{x}_{}\\). Note ordinary CV approach particular case \\(N()=\\left\\lbrace \\mathbf{x}_{} \\right\\rbrace\\). practice, bandwidth can selected h.cv() (hcv.data()) function. alternative corrected generalized cross-validation criterion (CGCV), proposed Francisco-Fernández Opsomer (2005), takes spatial dependence account. use approach practice (setting objective = \"GCV\" cov.bin h.cv), estimate variogram previously required.","code":"bin <- binning(x, y, window = border) lp0.h <- h.cv(bin)$h lp0 <- locpol(bin, h = lp0.h, hat.bin = TRUE)"},{"path":"https://rubenfcasal.github.io/npsp/articles/npsp.html","id":"variogram-estimation","dir":"Articles","previous_headings":"","what":"Variogram estimation","title":"Introduction to the npsp Package","text":"process assumed stationary, pilot local linear estimate \\(\\hat\\gamma(\\mathbf{u})\\) obtained linear smoothing \\(\\left(\\mathbf{x}_{}-\\mathbf{x}_{j},(Y(\\mathbf{x}_i)- Y(\\mathbf{x}_j))^2/2 \\right)\\). corresponding bandwidth can selected, instance, minimizing cross-validation relative squared error. general setting non constant trend, natural approach consists removing trend estimating variogram residuals \\(\\mathbf{r}=\\mathbf{Y}-\\mathbf{SY}\\). Nevertheless, residuals variability may different true errors (see e.g. Cressie, 1993, Section 3.4.3, case linear trend estimator). bias due direct use residuals variogram estimation may significant impact inference, similar approach described Fernández-Casal Francisco-Fernández (2014) considered. practice, local linear variogram estimates can computed functions np.svar() np.svariso.corr(). generic function h.cv() may used select corresponding bandwidth. final variogram estimate obtained fitting “nonparametric” isotropic Shapiro-Botha variogram model (Shapiro Botha, 1991), nonparametric pilot estimate, using function fitsvar.sb.iso().","code":"svar.bin <- svariso(x, residuals(lp0), nlags = 60, maxlag = 20)   svar.h <- h.cv(svar.bin)$h  svar.np <- np.svar(svar.bin, h = svar.h) svar.np2 <- np.svariso.corr(lp0, nlags = 60, maxlag = 20,                              h = svar.h, plot = FALSE) svm0 <- fitsvar.sb.iso(svar.np, dk = 0)  svm1 <- fitsvar.sb.iso(svar.np2, dk = 0)  # plot... plot(svm1, main = \"Nonparametric bias-corrected semivariogram\\nand fitted models\",       legend = FALSE, xlim = c(0,max(coords(svar.np2))),       ylim = c(0,max(svar.np2$biny, na.rm = TRUE))) plot(svm0, lwd = c(1, 1), add = TRUE) plot(svar.np, type = \"p\", pch = 2, add = TRUE) # abline(h = c(svm1$nugget, svm1$sill), lty = 3) # abline(v = 0, lty = 3) legend(\"bottomright\", legend = c(\"corrected\", 'biased'),             lty = c(1, 1), pch = c(1, 2), lwd = c(1, 1))"},{"path":"https://rubenfcasal.github.io/npsp/articles/npsp.html","id":"automatic-modeling","dir":"Articles","previous_headings":"","what":"Automatic modeling","title":"Introduction to the npsp Package","text":"Function np.fitgeo() implements automatic procedure joint estimation trend semivariogram. algorithm follows: Select initial bandwidth estimate trend using MCV criterion (function h.cv()). Compute local linear trend estimate (function locpol()). Obtain bias-corrected pilot semivariogram estimate corresponding residuals (function np.svariso.corr()). Fit valid Shapiro-Botha model pilot semivariogram estimates (function fitsvar.sb.iso()). Select new bandwidth matrix trend estimation CGCV criterion, using fitted variogram model approximate data covariance matrix (function h.cv() objective = \"GCV\" cov.bin = fitted variogram model). Repeat steps 2-5 convergence (practice, two iterations usually needed).  Setting corr.svar = TRUE may slow (memory demanding) number data large (note also bias residual variogram decreases sample size increases).","code":"geomod <- np.fitgeo(x, y, nbin = c(30, 30), maxlag = 20, svm.resid = TRUE, window = border) plot(geomod)"},{"path":"https://rubenfcasal.github.io/npsp/articles/npsp.html","id":"kriging","dir":"Articles","previous_headings":"","what":"Kriging","title":"Introduction to the npsp Package","text":"final trend variogram estimates employed spatial prediction, using method np.kriging().  Currently, global residual kriging implemented. Users encouraged use gstat::krige() (krige.cv()) together .vgm() local kriging (see e.g. https://rubenfcasal.github.io/npsp/articles/krigstat.html).","code":"krig.grid <- np.kriging(geomod, ngrid = c(120, 120)) # Plot kriging predictions and kriging standard deviations old.par <- par(mfrow = c(1,2), omd = c(0.0, 0.98, 0.0, 1)) simage(krig.grid, 'kpred', main = 'Kriging predictions', slim = slim,       xlab = \"Longitude\", ylab = \"Latitude\" , col = col, asp = 1, reset = FALSE) plot(border, border = \"darkgray\", lwd = 2, add = TRUE) plot(interior, border = \"lightgray\", lwd = 1, add = TRUE) simage(krig.grid, 'ksd', main = 'Kriging sd', xlab = \"Longitude\",         ylab = \"Latitude\" , col = hot.colors(256), asp = 1, reset = FALSE) plot(border, border = \"darkgray\", lwd = 2, add = TRUE) plot(interior, border = \"lightgray\", lwd = 1, add = TRUE) par(old.par)"},{"path":"https://rubenfcasal.github.io/npsp/articles/npsp.html","id":"conclusions-and-future-work","dir":"Articles","previous_headings":"","what":"Conclusions and future work","title":"Introduction to the npsp Package","text":"Unlike traditional geostatistical methods, nonparametric procedures avoid problems due model misspecification. bias due direct use residuals, may significant impact variogram estimation (consequently selected bandwidth CGCV criterion). Therefore, use bias-corrected nonparametric variogram estimator recommended. Currently, isotropic semivariogram estimation supported, intention extend approach anisotropy two components (Fernández-Casal et al., 2003), suitable modeling spatio-temporal dependency. nonparametric trend variogram estimates also allow perform inferences characteristics interest process, instance, using bootstrap algorithm described (Castillo-Páez et al., 2019), implemented next version package (https://github.com/rubenfcasal/npsp).","code":""},{"path":"https://rubenfcasal.github.io/npsp/articles/npsp.html","id":"acknowledgments","dir":"Articles","previous_headings":"","what":"Acknowledgments","title":"Introduction to the npsp Package","text":"research supported MINECO grant MTM2017-82724-R, Xunta de Galicia (Grupos de Referencia Competitiva ED431C-2020-14 Centro de Investigación del Sistema universitario de Galicia ED431G 2019/01), ERDF.","code":""},{"path":"https://rubenfcasal.github.io/npsp/articles/npsp.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"Introduction to the npsp Package","text":"Castillo-Páez, S., Fernández-Casal, R., García-Soidán, P. (2019). nonparametric bootstrap method spatial data. Comput. Stat. Data ., 137, 1–15. Chu, C. K. Marron, J. S. (1991). Comparison Two Bandwidth Selectors Dependent Errors. Annals Statistics 19, 1906–1918. Cressie, N. (1993). Statistics Spatial Data. Wiley, New York. Fernández-Casal, R. (2019). npsp: Nonparametric Spatial Statistics. R package version 0.7-5. https://github.com/rubenfcasal/npsp. Fan, J. Gijbels, . (1996). Local polynomial modelling applications. Chapman & Hall, London. Fernández-Casal, R. Francisco-Fernández, M. (2014). Nonparametric bias-corrected variogram estimation non-constant trend. Stochastic Environmental Research Risk Assessment 28, 1247–1259. Fernández-Casal, R., González Manteiga, W. Febrero-Bande, M. (2003). Flexible Spatio-Temporal Stationary Variogram Models. Statistics Computing 13, 127–136. Francisco-Fernández, M. Opsomer, J. D. (2005). Smoothing parameter selection methods nonparametric regression spatially correlated errors. Canadian Journal Statistics 33, 279–295. Opsomer, J. D., Wang, Y. Yang, Y. (2001). Nonparametric regression correlated errors. Statistical Science 16, 134–153. Shapiro, . Botha, J.D. (1991). Variogram fitting general class conditionally non-negative definite functions. Computational Statistics Data Analysis 11, 87–96.","code":""},{"path":"https://rubenfcasal.github.io/npsp/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Ruben Fernandez-Casal. Author, maintainer.","code":""},{"path":"https://rubenfcasal.github.io/npsp/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Fernandez-Casal R (2024). npsp: Nonparametric Spatial Statistics. R package version 0.7-14, https://github.com/rubenfcasal/npsp/, https://rubenfcasal.github.io/npsp/.","code":"@Manual{,   title = {npsp: Nonparametric Spatial Statistics},   author = {Ruben Fernandez-Casal},   year = {2024},   note = {R package version 0.7-14, https://github.com/rubenfcasal/npsp/},   url = {https://rubenfcasal.github.io/npsp/}, }"},{"path":[]},{"path":"https://rubenfcasal.github.io/npsp/index.html","id":"version-0714","dir":"","previous_headings":"","what":"Version 0.7.14","title":"Nonparametric Spatial Statistics","text":"package implements nonparametric methods inference multidimensional spatial (spatio-temporal) processes, may (especially) useful (automatic) geostatistical modeling interpolation.","code":""},{"path":"https://rubenfcasal.github.io/npsp/index.html","id":"main-functions","dir":"","previous_headings":"","what":"Main functions","title":"Nonparametric Spatial Statistics","text":"Nonparametric methods inference spatial trend variogram functions: np.fitgeo() (automatically) fits isotropic nonparametric geostatistical model estimating trend variogram (using bias-corrected estimator) iteratively (calling h.cv(), locpol(), np.svariso.corr() fitsvar.sb.iso() iteration). locpol(), np.den() np.svar() use local polynomial kernel smoothing compute nonparametric estimates multidimensional regression function (e.g. spatial trend), probability density function semivariogram (first derivatives), respectively. Estimates functions can constructed dimension (depending amount available memory). np.svariso.corr() computes bias-corrected nonparametric semivariogram estimate using iterative algorithm similar described Fernandez-Casal Francisco-Fernandez (2014). procedure tries correct bias due direct use residuals (obtained, case, nonparametric estimation trend function) semivariogram estimation. fitsvar.sb.iso() fits ‘nonparametric’ isotropic Shapiro-Botha variogram model WLS. Currently, isotropic semivariogram estimation supported. Nonparametric residual kriging (sometimes called external drift kriging): np.kriging() computes residual kriging predictions (corresponding simple kriging standard errors). kriging.simple() computes simple kriging predictions standard errors. Currently, global (residual) simple kriging implemented. Users encouraged use gstat::krige() (gstat::krige.cv()) together .vgm() local kriging.","code":""},{"path":"https://rubenfcasal.github.io/npsp/index.html","id":"other-functions","dir":"","previous_headings":"","what":"Other functions","title":"Nonparametric Spatial Statistics","text":"Among functions intended direct access user, following (methods multidimensional linear binning, local polynomial kernel regression, density variogram estimation) emphasized: binning(), bin.den(), svar.bin(), h.cv() interp(). functions plotting data joint legend representing continuous color scale (based fields::image.plot()): splot() allows combine standard R plot legend. spoints(), simage() spersp() draw corresponding high-level plot legend strip color scale. also functions can used interact packages. instance, .variogram() (geoR) .vgm() (gstat). See Reference complete list functions.","code":""},{"path":"https://rubenfcasal.github.io/npsp/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Nonparametric Spatial Statistics","text":"npsp available CRAN, can install development version github : Note also , package requires compilation, Windows users need previously installed appropriate version Rtools, OS X users need installed Xcode. Alternatively, Windows users may install corresponding npsp_X.Y.Z.zip file releases section github repository. R versions 4.4.x Windows:","code":"# install.packages(\"devtools\") devtools::install_github(\"rubenfcasal/npsp\") install.packages('https://github.com/rubenfcasal/npsp/releases/download/v0.7-14/npsp_0.7-14.zip',                  repos = NULL)"},{"path":"https://rubenfcasal.github.io/npsp/index.html","id":"author","dir":"","previous_headings":"","what":"Author","title":"Nonparametric Spatial Statistics","text":"Ruben Fernandez-Casal (Dep. Mathematics, University Coruña, Spain). Please send comments, error reports suggestions rubenfcasal@gmail.com.","code":""},{"path":"https://rubenfcasal.github.io/npsp/index.html","id":"acknowledgments","dir":"","previous_headings":"","what":"Acknowledgments","title":"Nonparametric Spatial Statistics","text":"Important suggestions contributions techniques included made Sergio Castillo-Páez (Universidad de las Fuerzas Armadas ESPE, Ecuador) Tomas Cotos-Yañez (Dep. Statistics, University Vigo, Spain). research supported MINECO grant MTM2017-82724-R, Xunta de Galicia (Grupos de Referencia Competitiva ED431C-2020-14 Centro de Investigación del Sistema universitario de Galicia ED431G 2019/01), ERDF.","code":""},{"path":"https://rubenfcasal.github.io/npsp/index.html","id":"references","dir":"","previous_headings":"","what":"References","title":"Nonparametric Spatial Statistics","text":"Castillo-Páez S., Fernández-Casal R. García-Soidán P. (2019). nonparametric bootstrap method spatial data, 137, Comput. Stat. Data Anal., 1-15. Fernández-Casal, R., Castillo-Páez, S. Francisco-Fernandez, M. (2024). Nonparametric Conditional Risk Mapping Heteroscedasticity, JABES, 29, 56-72. Fernández-Casal R., Castillo-Páez S. Francisco-Fernández M. (2018). Nonparametric geostatistical risk mapping, Stoch. Environ. Res. Ris. Assess., 32, 675-684. Fernández-Casal R., Castillo-Páez S. García-Soidán P. (2017). Nonparametric estimation small-scale variability heteroscedastic spatial processes, Spa. Sta., 22, 358-370. Fernandez-Casal R. Francisco-Fernandez M. (2014). Nonparametric bias-corrected variogram estimation non-constant trend, Stoch. Environ. Res. Ris. Assess., 28, 1247-1259. Fernandez-Casal R., Gonzalez-Manteiga W. Febrero-Bande M. (2003). Flexible Spatio-Temporal Stationary Variogram Models, Statistics Computing, 13, 127-136. Rupert D. Wand M.P. (1994). Multivariate locally weighted least squares regression. Annals Statistics, 22, 1346-1370. Shapiro . Botha J.D. (1991). Variogram fitting general class conditionally non-negative definite functions. Computational Statistics Data Analysis, 11, 87-96. Wand M.P. (1994). Fast Computation Multivariate Kernel Estimators. Journal Computational Graphical Statistics, 3, 433-445. Wand M.P. Jones M.C. (1995). Kernel Smoothing. Chapman Hall, London.","code":""},{"path":"https://rubenfcasal.github.io/npsp/reference/aquifer.html","id":null,"dir":"Reference","previous_headings":"","what":"Wolfcamp aquifer data — aquifer","title":"Wolfcamp aquifer data — aquifer","text":"Deaf Smith County (Texas, bordering New Mexico) selected alternate site possible nuclear waste disposal repository 1980s. site later dropped grounds contamination aquifer, source much water supply west Texas. study conducted U.S. Department Energy, piezometric-head data obtained 85 locations (irregularly scattered Texas panhandle) drilling narrow pipe aquifer. data set used numerous papers. instance, Cressie (1989) lists data uses illustrate kriging, Cressie (1993, section 4.1) gives detailed description data results different geostatistical analyses.","code":""},{"path":"https://rubenfcasal.github.io/npsp/reference/aquifer.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Wolfcamp aquifer data — aquifer","text":"data frame 85 observations following 3 variables: lon relative longitude position (miles). lat relative latitude position (miles). head piezometric-head levels (feet sea level).","code":""},{"path":"https://rubenfcasal.github.io/npsp/reference/aquifer.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Wolfcamp aquifer data — aquifer","text":"Harper, W.V. Furr, J.M. (1986) Geostatistical analysis potentiometric data Wolfcamp Aquifer Palo Duro Basin, Texas. Technical Report BMI/ONWI-587, Bettelle Memorial Institute, Columbus, OH.","code":""},{"path":"https://rubenfcasal.github.io/npsp/reference/aquifer.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Wolfcamp aquifer data — aquifer","text":"Cressie, N. (1989) Geostatistics.   American Statistician, 43, 197-202. Cressie, N. (1993) Statistics Spatial Data. New York. Wiley.","code":""},{"path":"https://rubenfcasal.github.io/npsp/reference/aquifer.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Wolfcamp aquifer data — aquifer","text":"","code":"summary(aquifer) #>       lon               lat               head      #>  Min.   :-145.24   Min.   :  9.414   Min.   :1024   #>  1st Qu.: -21.30   1st Qu.: 33.682   1st Qu.:1548   #>  Median :  11.66   Median : 59.158   Median :1797   #>  Mean   :  16.89   Mean   : 79.356   Mean   :2002   #>  3rd Qu.:  70.90   3rd Qu.:131.825   3rd Qu.:2540   #>  Max.   : 112.80   Max.   :184.766   Max.   :3571   with(aquifer, spoints(lon, lat, head, main = \"Wolfcamp aquifer\"))"},{"path":"https://rubenfcasal.github.io/npsp/reference/as.data.grid.html","id":null,"dir":"Reference","previous_headings":"","what":"data.grid-class methods — as.data.grid","title":"data.grid-class methods — as.data.grid","text":"S3 class data.grid methods.","code":""},{"path":"https://rubenfcasal.github.io/npsp/reference/as.data.grid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"data.grid-class methods — as.data.grid","text":"","code":"as.data.grid(object, ...)  # S3 method for class 'SpatialGridDataFrame' as.data.grid(object, data.ind = NULL, ...)  # S3 method for class 'data.grid' as.data.frame(   x,   row.names = NULL,   optional = FALSE,   data.ind = NULL,   coords = FALSE,   sp = FALSE,   check.names = coords,   ... )"},{"path":"https://rubenfcasal.github.io/npsp/reference/as.data.grid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"data.grid-class methods — as.data.grid","text":"object (gridded data) used select method. ... arguments passed data.grid. data.ind integer character vector indexes names components. x data.grid object. row.names NULL, column used row names, vector giving row names data frame. optional logical; currently used (see .data.frame). coords logical; TRUE, (spatial) coordinates object added. sp logical; TRUE, second dimension data reversed (stored sp package). check.names logical; TRUE, names variables data frame checked adjusted necessary.","code":""},{"path":"https://rubenfcasal.github.io/npsp/reference/as.data.grid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"data.grid-class methods — as.data.grid","text":".data.grid returns data.grid object. .data.frame returns data frame.","code":""},{"path":[]},{"path":"https://rubenfcasal.github.io/npsp/reference/as.sp.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert npsp object to sp object — as.sp","title":"Convert npsp object to sp object — as.sp","text":"Converts npsp object sp object.","code":""},{"path":"https://rubenfcasal.github.io/npsp/reference/as.sp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert npsp object to sp object — as.sp","text":"","code":"as.sp(obj, ...)  # S3 method for class 'grid.par' as.sp(obj, ...)  # S3 method for class 'data.grid' as.sp(obj, data.ind = NULL, proj4string = CRS(as.character(NA)), ...)"},{"path":"https://rubenfcasal.github.io/npsp/reference/as.sp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert npsp object to sp object — as.sp","text":"obj npsp object. ... arguments passed methods. data.ind integer character; vector indexes names data components. proj4string CRS-class object.","code":""},{"path":"https://rubenfcasal.github.io/npsp/reference/as.sp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert npsp object to sp object — as.sp","text":".sp.grid.par returns GridTopology-class object. .sp.data.grid returns SpatialGridDataFrame-class object.","code":""},{"path":[]},{"path":"https://rubenfcasal.github.io/npsp/reference/bin.den.html","id":null,"dir":"Reference","previous_headings":"","what":"Linear binning for density estimation — bin.den","title":"Linear binning for density estimation — bin.den","text":"Creates bin.den-class (gridded binned density) object simple linear binning counts.","code":""},{"path":"https://rubenfcasal.github.io/npsp/reference/bin.den.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Linear binning for density estimation — bin.den","text":"","code":"bin.den(x, nbin = NULL, type = c(\"linear\", \"simple\"))  as.bin.den(object, ...)  # S3 method for class 'data.grid' as.bin.den(object, weights.ind = 1, ...)  # S3 method for class 'bin.den' as.bin.den(object, ...)"},{"path":"https://rubenfcasal.github.io/npsp/reference/bin.den.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Linear binning for density estimation — bin.den","text":"x vector matrix covariates (e.g. spatial coordinates). Columns correspond dimensions rows observations. nbin vector number bins dimension. type character, binning method: \"linear\" (default) \"simple\". object (gridded data) used select method. ... arguments passed methods. weights.ind integer character index name component containing bin counts/weights.","code":""},{"path":"https://rubenfcasal.github.io/npsp/reference/bin.den.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Linear binning for density estimation — bin.den","text":"Returns S3 object class bin.den (extends data.grid).    list following 3 components: binw vector array (dimension nbin) bin counts (weights). grid grid.par-class object grid parameters. data list component $x argument x.","code":""},{"path":"https://rubenfcasal.github.io/npsp/reference/bin.den.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Linear binning for density estimation — bin.den","text":"parameter nbin specified set pmax(25, rule.binning(x)).","code":""},{"path":[]},{"path":"https://rubenfcasal.github.io/npsp/reference/bin.den.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Linear binning for density estimation — bin.den","text":"","code":"binden <- bin.den(earthquakes[, c(\"lon\", \"lat\")], nbin = c(30,30)) bindat <- binning(earthquakes[, c(\"lon\", \"lat\")], earthquakes$mag, nbin = c(30,30)) all.equal(binden, as.bin.den(bindat)) #> [1] TRUE"},{"path":"https://rubenfcasal.github.io/npsp/reference/binning.html","id":null,"dir":"Reference","previous_headings":"","what":"Linear binning — binning","title":"Linear binning — binning","text":"Discretizes data regular grid (computes binned approximation) using simple linear multivariate binning techniques described Wand (1994).","code":""},{"path":"https://rubenfcasal.github.io/npsp/reference/binning.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Linear binning — binning","text":"","code":"binning(   x,   y = NULL,   nbin = NULL,   type = c(\"linear\", \"simple\"),   set.NA = FALSE,   window = NULL,   ... )  as.bin.data(object, ...)  # S3 method for class 'data.grid' as.bin.data(object, data.ind = 1, weights.ind = NULL, ...)  # S3 method for class 'bin.data' as.bin.data(object, ...)  # S3 method for class 'SpatialGridDataFrame' as.bin.data(object, data.ind = 1, weights.ind = NULL, ...)"},{"path":"https://rubenfcasal.github.io/npsp/reference/binning.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Linear binning — binning","text":"x vector matrix covariates (e.g. spatial coordinates). Columns correspond covariates (coordinate dimension) rows data. y vector data (response variable). nbin vector number bins dimension. type character, binning method: \"linear\" (default) \"simple\". set.NA logical. TRUE, sets bin averages corresponding cells without data NA. window spatial window (values outside window masked), currently sp-object class extending SpatialPolygons. ... arguments passed mask.bin.data(). object (gridded data) used select method. data.ind integer (character) index (name) component containing bin averages. weights.ind integer (character) index (name) component containing bin counts/weights (specified, set .numeric( .finite( object[[data.ind]] ))).","code":""},{"path":"https://rubenfcasal.github.io/npsp/reference/binning.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Linear binning — binning","text":"y != NULL, S3 object class bin.data (gridded binned data; extends bin.den) returned. data.grid object following 4 components: biny vector array (dimension nbin) bin averages. binw vector array (dimension nbin) bin counts (weights). grid grid.par-class object grid parameters. data list 3 components: x argument x. y argument y. med (weighted) mean (binned) data. y == NULL, bin.den called bin.den-class object returned.","code":""},{"path":"https://rubenfcasal.github.io/npsp/reference/binning.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Linear binning — binning","text":"parameter nbin specified set pmax(25, rule.binning(x)). Setting set.NA = TRUE (equivalent biny[binw == 0] <- NA) may useful plotting binned averages $biny (hat matrix handled care using locpol).","code":""},{"path":"https://rubenfcasal.github.io/npsp/reference/binning.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Linear binning — binning","text":"Wand M.P. (1994) Fast Computation Multivariate Kernel Estimators.   Journal Computational Graphical Statistics, 3, 433-445.","code":""},{"path":[]},{"path":"https://rubenfcasal.github.io/npsp/reference/binning.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Linear binning — binning","text":"","code":"with(earthquakes, spoints(lon, lat, mag, main = \"Earthquake data\"))   bin <- binning(earthquakes[, c(\"lon\", \"lat\")], earthquakes$mag, nbin = c(30,30), set.NA = TRUE)  simage(bin, main = \"Binning averages\", reset = FALSE) with(earthquakes, points(lon, lat, pch = 20))"},{"path":"https://rubenfcasal.github.io/npsp/reference/coords.html","id":null,"dir":"Reference","previous_headings":"","what":"(spatial) coordinates — coords","title":"(spatial) coordinates — coords","text":"Retrieves (spatial) coordinates object.","code":""},{"path":"https://rubenfcasal.github.io/npsp/reference/coords.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"(spatial) coordinates — coords","text":"","code":"coords(x, ...)  # S3 method for class 'grid.par' coords(x, ...)  # S3 method for class 'data.grid' coords(x, masked = FALSE, ...)"},{"path":"https://rubenfcasal.github.io/npsp/reference/coords.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"(spatial) coordinates — coords","text":"x (spatial) object used select method. ... arguments passed methods. masked logical; TRUE, coordinates corresponding unmasked cells returned (see mask).","code":""},{"path":"https://rubenfcasal.github.io/npsp/reference/coords.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"(spatial) coordinates — coords","text":"matrix coordinates (columns correspond dimensions rows data).","code":""},{"path":[]},{"path":"https://rubenfcasal.github.io/npsp/reference/coordvalues.html","id":null,"dir":"Reference","previous_headings":"","what":"Coordinate values — coordvalues","title":"Coordinate values — coordvalues","text":"Returns coordinate values dimension.","code":""},{"path":"https://rubenfcasal.github.io/npsp/reference/coordvalues.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coordinate values — coordvalues","text":"","code":"coordvalues(x, ...)  # S3 method for class 'grid.par' coordvalues(x, ...)  # S3 method for class 'data.grid' coordvalues(x, ...)"},{"path":"https://rubenfcasal.github.io/npsp/reference/coordvalues.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coordinate values — coordvalues","text":"x (spatial) object used select method. ... arguments passed methods.","code":""},{"path":"https://rubenfcasal.github.io/npsp/reference/coordvalues.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coordinate values — coordvalues","text":"list (unique) coordinates along axis.","code":""},{"path":[]},{"path":"https://rubenfcasal.github.io/npsp/reference/covar.html","id":null,"dir":"Reference","previous_headings":"","what":"Covariance values — covar","title":"Covariance values — covar","text":"Computes covariance values (pseudo-covariances) given variogram model covariance estimates given semivariogram estimate.","code":""},{"path":"https://rubenfcasal.github.io/npsp/reference/covar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Covariance values — covar","text":"","code":"covar(x, h, ...)  # S3 method for class 'svarmod' covar(x, h, sill = x$sill, discretize = FALSE, ...)  # S3 method for class 'np.svar' covar(x, h, sill = NULL, ...)"},{"path":"https://rubenfcasal.github.io/npsp/reference/covar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Covariance values — covar","text":"x variogram model (svarmod object) semivariogram estimate. h vector (isotropic case) matrix lag values. ... arguments passed methods. sill (theoretical estimated) variance \\(C(0) = \\sigma^2\\) pseudo-sill (unbounded variograms). discretize logical. TRUE variogram previously discretized.","code":""},{"path":"https://rubenfcasal.github.io/npsp/reference/covar.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Covariance values — covar","text":"vector (pseudo) covariance values \\(C(h_i) = \\sigma^2 - \\gamma(h_i)\\) covariance estimates.","code":""},{"path":[]},{"path":"https://rubenfcasal.github.io/npsp/reference/cpu.time.html","id":null,"dir":"Reference","previous_headings":"","what":"Total and partial CPU time used — cpu.time","title":"Total and partial CPU time used — cpu.time","text":"Returns (optionally) prints total /partial (since last call function) real CPU times.","code":""},{"path":"https://rubenfcasal.github.io/npsp/reference/cpu.time.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Total and partial CPU time used — cpu.time","text":"","code":"cpu.time(..., reset = FALSE, total = TRUE, last = TRUE, flush = FALSE)"},{"path":"https://rubenfcasal.github.io/npsp/reference/cpu.time.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Total and partial CPU time used — cpu.time","text":"... objects (describing last operation) printed (using cat), last == TRUE. reset logical; TRUE, time counters initialized. total logical; TRUE, total time used printed. last logical; TRUE, partial time used printed. flush logical; TRUE, flush.console called.","code":""},{"path":"https://rubenfcasal.github.io/npsp/reference/cpu.time.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Total and partial CPU time used — cpu.time","text":"Invisibly returns list  following 3 components (objects class \"proc_time\"): time user, system, total elapsed times currently running R process (result call proc.time). last, total differences corresponding proc.time calls.","code":""},{"path":[]},{"path":"https://rubenfcasal.github.io/npsp/reference/cpu.time.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Total and partial CPU time used — cpu.time","text":"","code":"cpu.time(reset=TRUE) #> CPU time has been initialized. res <- median(runif(100000)) cpu.time('\\nSample median of', 100000, 'values =', res) #> Time of last operation:  #> Sample median of 1e+05 values = 0.4972626  #>    user  system elapsed  #>       0       0       0  #> Total time: #>    user  system elapsed  #>       0       0       0  res <- median(runif(1000)) cpu.time('\\nSample median of', 1000, 'values =', res) #> Time of last operation:  #> Sample median of 1000 values = 0.5138546  #>    user  system elapsed  #>       0       0       0  #> Total time: #>    user  system elapsed  #>       0       0       0"},{"path":"https://rubenfcasal.github.io/npsp/reference/data.grid.html","id":null,"dir":"Reference","previous_headings":"","what":"Gridded data (S3 class ","title":"Gridded data (S3 class ","text":"Defines data full regular (spatial) grid. Constructor function data.grid-class.","code":""},{"path":"https://rubenfcasal.github.io/npsp/reference/data.grid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gridded data (S3 class ","text":"","code":"data.grid(   ...,   grid = NULL,   window = NULL,   mask = NULL,   set.NA = FALSE,   warn = FALSE )"},{"path":"https://rubenfcasal.github.io/npsp/reference/data.grid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Gridded data (S3 class ","text":"... vectors arrays data length equal prod(grid$n). grid grid.par-class object (optional). window spatial window (values outside window masked), currently sp-object class extending SpatialPolygons. mask logical; vector (array) indicating selected values (masked). set.NA logical; TRUE, values corresponding masked cells set NA. warn logical; TRUE warning message generated original data masked.","code":""},{"path":"https://rubenfcasal.github.io/npsp/reference/data.grid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Gridded data (S3 class ","text":"Returns object class data.grid, list arguments components.","code":""},{"path":"https://rubenfcasal.github.io/npsp/reference/data.grid.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Gridded data (S3 class ","text":"parameter grid.par specified set first argument. S3 \"version\" SpatialGridDataFrame-class sp package.","code":""},{"path":[]},{"path":"https://rubenfcasal.github.io/npsp/reference/data.grid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Gridded data (S3 class ","text":"","code":"# Grid parameters grid <- grid.par(n = c(15,15), min = c(x = -1, y = -1), max = c(1, 1)) coordinates <- coords(grid) plot(coordinates) coordvs <- coordvalues(grid) abline(v = coordvs[[1]], lty = 3) abline(h = coordvs[[2]], lty = 3)  # Gridded data y <- apply(coordinates, 1, function(x) x[1]^2 - x[2]^2 ) datgrid <- data.grid(y = y, grid = grid) spersp(datgrid, main = 'f(x,y) = x^2 - y^2')  dim(datgrid) #> [1] 15 15 all.equal(coordinates, coords(datgrid)) #> [1] TRUE"},{"path":"https://rubenfcasal.github.io/npsp/reference/disc.sb.html","id":null,"dir":"Reference","previous_headings":"","what":"Discretization nodes of a Shapiro-Botha variogram model — disc.sb","title":"Discretization nodes of a Shapiro-Botha variogram model — disc.sb","text":"Computes discretization nodes `nonparametric' extended Shapiro-Botha variogram model, following Gorsich Genton (2004), scaled roots Bessel functions.","code":""},{"path":"https://rubenfcasal.github.io/npsp/reference/disc.sb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Discretization nodes of a Shapiro-Botha variogram model — disc.sb","text":"","code":"disc.sb(nx, dk = 0, rmax = 1)"},{"path":"https://rubenfcasal.github.io/npsp/reference/disc.sb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Discretization nodes of a Shapiro-Botha variogram model — disc.sb","text":"nx number discretization nodes. dk dimension kappa function (dk >= 1, see Details ). rmax maximum lag considered.","code":""},{"path":"https://rubenfcasal.github.io/npsp/reference/disc.sb.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Discretization nodes of a Shapiro-Botha variogram model — disc.sb","text":"vector discretization nodes.","code":""},{"path":"https://rubenfcasal.github.io/npsp/reference/disc.sb.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Discretization nodes of a Shapiro-Botha variogram model — disc.sb","text":"dk >= 1, nodes computed : $$x_i = q_i/rmax; = 1,\\ldots, nx,$$ \\(q_i\\) first \\(n\\) roots \\(J_{(d-2)/2}\\), \\(J_p\\) Bessel function order \\(p\\) \\(rmax\\) maximum lag considered. computation zeros Bessel function done using efficient algorithm developed Ball (2000). dk == 0 (corresponding model valid spatial dimension), nodes computed gaussian variogram models involved practical ranges:    $$r_i = 2 ( 1 + (-1) ) rmax/nx; = 1,\\ldots, nx.$$","code":""},{"path":"https://rubenfcasal.github.io/npsp/reference/disc.sb.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Discretization nodes of a Shapiro-Botha variogram model — disc.sb","text":"Ball, J.S. (2000) Automatic computation zeros Bessel functions   special functions. SIAM Journal Scientific Computing, 21,   1458-1464. Gorsich, D.J. Genton, M.G. (2004) discretization nonparametric   covariogram estimators. Statistics Computing, 14, 99-108.","code":""},{"path":[]},{"path":"https://rubenfcasal.github.io/npsp/reference/disc.sb.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Discretization nodes of a Shapiro-Botha variogram model — disc.sb","text":"","code":"disc.sb( 12, 1, 1.0) #>  [1]  1.570796  4.712389  7.853982 10.995574 14.137167 17.278760 20.420352 #>  [8] 23.561945 26.703538 29.845130 32.986723 36.128316  nx <- 1 dk <- 0 x <- disc.sb(nx, dk, 1.0) h <- seq(0, 1, length = 100) plot(h, kappasb(x * h, 0), type=\"l\", ylim = c(0, 1)) abline(h = 0.05, lty = 2)"},{"path":"https://rubenfcasal.github.io/npsp/reference/earthquakes.html","id":null,"dir":"Reference","previous_headings":"","what":"Earthquake data — earthquakes","title":"Earthquake data — earthquakes","text":"data set consists 1859 earthquakes (magnitude equal 2.0 Richter's scale), occurred 25 November 1944 16 October 2013 northwest (NW) part Iberian Peninsula. area considered limited coordinates 41N-44N 6W-10W, contains autonomic region Galicia (Spain) northern Portugal.","code":""},{"path":"https://rubenfcasal.github.io/npsp/reference/earthquakes.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Earthquake data — earthquakes","text":"data frame 1859 observations following 6 variables: date Date time (POSIXct format). time Time (years since first event). lon Longitude. lat Latitude. depth Depth (km). mag Magnitude (Richter's scale).","code":""},{"path":"https://rubenfcasal.github.io/npsp/reference/earthquakes.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Earthquake data — earthquakes","text":"National Geographic Institute (IGN) Spain: https://www.ign.es/web/ign/portal/sis-area-sismicidad.","code":""},{"path":"https://rubenfcasal.github.io/npsp/reference/earthquakes.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Earthquake data — earthquakes","text":"Francisco-Fernandez M., Quintela-del-Rio . Fernandez-Casal R. (2012)    Nonparametric methods spatial regression. application seismic    events, Environmetrics, 23, 85-93.","code":""},{"path":"https://rubenfcasal.github.io/npsp/reference/earthquakes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Earthquake data — earthquakes","text":"","code":"str(earthquakes) #> 'data.frame':\t1859 obs. of  6 variables: #>  $ date : POSIXct, format: \"1944-11-25 23:52:38\" \"1948-11-18 03:34:46\" ... #>  $ time : num  0 3.98 5.35 16.21 16.21 ... #>  $ lon  : num  -9 -8.5 -6 -6.2 -6.2 ... #>  $ lat  : num  43.7 41.5 43.3 41.7 41.7 ... #>  $ depth: int  NA NA NA NA NA NA NA 5 5 NA ... #>  $ mag  : num  4.7 4.8 4.6 5.2 5.2 3.9 4.4 4.3 3.2 2.7 ... summary(earthquakes) #>       date                             time            lon         #>  Min.   :1944-11-25 23:52:38.00   Min.   : 0.00   Min.   :-9.954   #>  1st Qu.:1996-04-18 19:10:18.00   1st Qu.:51.39   1st Qu.:-8.127   #>  Median :1998-06-18 07:20:29.00   Median :53.56   Median :-7.284   #>  Mean   :2000-02-10 12:32:54.97   Mean   :55.21   Mean   :-7.654   #>  3rd Qu.:2005-05-16 21:09:41.00   3rd Qu.:60.47   3rd Qu.:-7.216   #>  Max.   :2013-10-06 22:27:42.00   Max.   :68.86   Max.   :-6.000   #>                                                                    #>       lat            depth            mag        #>  Min.   :41.02   Min.   : 1.00   Min.   :2.000   #>  1st Qu.:42.21   1st Qu.: 6.00   1st Qu.:2.300   #>  Median :42.76   Median :11.00   Median :2.600   #>  Mean   :42.54   Mean   :10.61   Mean   :2.696   #>  3rd Qu.:42.82   3rd Qu.:13.00   3rd Qu.:3.000   #>  Max.   :43.99   Max.   :80.00   Max.   :5.200   #>                  NA's   :414                     with(earthquakes, spoints(lon, lat, mag, main = \"Earthquake data\"))"},{"path":"https://rubenfcasal.github.io/npsp/reference/fitsvar.sb.iso.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit an isotropic Shapiro-Botha variogram model — fitsvar.sb.iso","title":"Fit an isotropic Shapiro-Botha variogram model — fitsvar.sb.iso","text":"Fits `nonparametric' isotropic Shapiro-Botha variogram model WLS quadratic programming. Following Gorsich Genton (2004), nodes selected scaled roots Bessel functions (see disc.sb).","code":""},{"path":"https://rubenfcasal.github.io/npsp/reference/fitsvar.sb.iso.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit an isotropic Shapiro-Botha variogram model — fitsvar.sb.iso","text":"","code":"fitsvar.sb.iso(   esv,   dk = 4 * ncol(esv$data$x),   nx = NULL,   rmax = esv$grid$max,   min.contrib = 10,   method = c(\"cressie\", \"equal\", \"npairs\", \"linear\"),   iter = 10,   tol = sqrt(.Machine$double.eps) )"},{"path":"https://rubenfcasal.github.io/npsp/reference/fitsvar.sb.iso.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit an isotropic Shapiro-Botha variogram model — fitsvar.sb.iso","text":"esv pilot semivariogram estimate, np.svar-class (svar.bin) object. Typically output function np.svariso. dk dimension kappa function (dk == 0 corresponds model valid dimension; dk > 0, greater equal dimension spatial process ncol(esv$data$x)). nx number discretization nodes. Defaults min(nesv - 1, 50), nesv number semivariogram estimates. rmax maximum lag considered discretization (range fitted variogram output). min.contrib minimum number (equivalent) contributing pairs (pilot estimates lower number ignored, warning). method string indicating WLS fitting method used (e.g. method = \"cressie\"). See \"Details\" . iter maximum number interations WLS algorithm (used method == \"cressie\"). tol absolute convergence tolerance (used method == \"cressie\").","code":""},{"path":"https://rubenfcasal.github.io/npsp/reference/fitsvar.sb.iso.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit an isotropic Shapiro-Botha variogram model — fitsvar.sb.iso","text":"Returns fitted variogram model, object class fitsvar. svarmod object additional components esv (pilot semivariogram estimate) fit containing: u vector lags/distances. sv vector pilot semivariogram estimates. fitted.sv vector fitted semivariances. w vector (least squares) weights. wls value objective function. method string indicating WLS fitting method used. iter number WLS iterations (method == \"cressie\").","code":""},{"path":"https://rubenfcasal.github.io/npsp/reference/fitsvar.sb.iso.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fit an isotropic Shapiro-Botha variogram model — fitsvar.sb.iso","text":"fit done using (possibly iterated) weighted least squares criterion, minimizing: $$WLS(\\theta) = \\sum_i w_i[(\\hat{\\gamma}(h_i)) -\t\\gamma(\\theta; h_i)]^2.$$ different options argument method define WLS algorithm used: \"cressie\" default method. procedure  iterative, \\(w_i = 1\\) (OLS) used first step  weights recalculated iteration,  following Cressie (1985), convergence: $$w_i =  N(h_i)/\\gamma(\\hat{\\theta}; h_i)^2,$$ \\(N(h_i)\\)  (equivalent) number contributing pairs  estimation lag \\(h_i\\). \"equal\" Ordinary least squares: \\(w_i = 1\\). \"npairs\" \\(w_i = N(h_i).\\) \"linear\" \\(w_i = N(h_i)/h_i^2\\)  (default fitting method gstat package). Function solve.QP quadprog package used solve strictly convex quadratic program. avoid problems, Cholesky decomposition matrix corresponding original problem computed using chol pivot = TRUE. matrix positive semi-definite (non-strictly convex QP), number discretization nodes less nx.","code":""},{"path":"https://rubenfcasal.github.io/npsp/reference/fitsvar.sb.iso.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Fit an isotropic Shapiro-Botha variogram model — fitsvar.sb.iso","text":"Ball, J.S. (2000) Automatic computation zeros Bessel functions   special functions. SIAM Journal Scientific Computing, 21,   1458-1464. Cressie, N. (1985) Fitting variogram models weighted least squares.   Mathematical Geology, 17, 563-586. Cressie, N. (1993) Statistics Spatial Data. New York. Wiley. Fernandez Casal R., Gonzalez Manteiga W.  Febrero Bande M. (2003) Flexible Spatio-Temporal Stationary Variogram Models, Statistics Computing, 13, 127-136. Gorsich, D.J. Genton, M.G. (2004) discretization nonparametric   covariogram estimators. Statistics Computing, 14, 99-108. Shapiro, . Botha, J.D. (1991) Variogram fitting general class   conditionally non-negative definite functions. Computational Statistics   Data Analysis, 11, 87-96.","code":""},{"path":[]},{"path":"https://rubenfcasal.github.io/npsp/reference/fitsvar.sb.iso.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit an isotropic Shapiro-Botha variogram model — fitsvar.sb.iso","text":"","code":"# Trend estimation lp <- locpol(aquifer[,1:2], aquifer$head, nbin = c(41,41),              h = diag(100, 2), hat.bin = TRUE)                                # 'np.svariso.corr()' requires a 'lp$locpol$hat' component  # Variogram estimation esvar <- np.svariso.corr(lp, maxlag = 150, nlags = 60, h = 60, plot = FALSE)  # Variogram fitting svm2 <- fitsvar.sb.iso(esvar)  # dk = 2 svm3 <- fitsvar.sb.iso(esvar, dk = 0) # To avoid negative covariances... svm4 <- fitsvar.sb.iso(esvar, dk = 10) # To improve fit...  plot(svm4, main = \"Nonparametric bias-corrected semivariogram and fitted models\", legend = FALSE) plot(svm3, add = TRUE) plot(svm2, add = TRUE, lty = 3) legend(\"bottomright\", legend = c(\"NP estimates\", \"fitted model (dk = 10)\", \"dk = 0\", \"dk = 2\"),             lty = c(NA, 1, 1, 3), pch = c(1, NA, NA, NA), lwd = c(1, 2, 1, 1))"},{"path":"https://rubenfcasal.github.io/npsp/reference/grid.par.html","id":null,"dir":"Reference","previous_headings":"","what":"Grid parameters (S3 class ","title":"Grid parameters (S3 class ","text":"Defines full regular (spatial) grid. Constructor function grid.par-class.","code":""},{"path":"https://rubenfcasal.github.io/npsp/reference/grid.par.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Grid parameters (S3 class ","text":"","code":"grid.par(   n,   min,   max = min + (n - 1) * lag,   lag = (max - min)/(n - 1),   dimnames = names(min) )"},{"path":"https://rubenfcasal.github.io/npsp/reference/grid.par.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Grid parameters (S3 class ","text":"n integer vector; number nodes dimension. min vector; minimum values coordinates. max vector; maximum values coordinates (optional). lag vector; lag dimension (optional). dimnames character vector; names used label dimensions.","code":""},{"path":"https://rubenfcasal.github.io/npsp/reference/grid.par.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Grid parameters (S3 class ","text":"Returns object class grid.par, list arguments components    additional component $nd = length(n).","code":""},{"path":"https://rubenfcasal.github.io/npsp/reference/grid.par.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Grid parameters (S3 class ","text":"parameters must length. one arguments max lag must specified. S3 'version' GridTopology-class sp package.","code":""},{"path":[]},{"path":"https://rubenfcasal.github.io/npsp/reference/grid.par.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Grid parameters (S3 class ","text":"","code":"grid.par(n = c(100, 100), min = c(-10, 42), max = c(-7.5, 44)) #>      n min  max        lag #> x1 100 -10 -7.5 0.02525253 #> x2 100  42 44.0 0.02020202 grid.par(n = c(100, 100), min = c(-10, 42), lag = c(0.03, 0.02)) #>      n min   max  lag #> x1 100 -10 -7.03 0.03 #> x2 100  42 43.98 0.02"},{"path":"https://rubenfcasal.github.io/npsp/reference/h.cv.html","id":null,"dir":"Reference","previous_headings":"","what":"Cross-validation methods for bandwidth selection — h.cv","title":"Cross-validation methods for bandwidth selection — h.cv","text":"Selects bandwidth local polynomial kernel (regression, density variogram) estimator using (standard modified) CV, GCV MASE criteria.","code":""},{"path":"https://rubenfcasal.github.io/npsp/reference/h.cv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cross-validation methods for bandwidth selection — h.cv","text":"","code":"h.cv(bin, ...)  # S3 method for class 'bin.data' h.cv(   bin,   objective = c(\"CV\", \"GCV\", \"MASE\"),   h.start = NULL,   h.lower = NULL,   h.upper = NULL,   degree = 1,   ncv = ifelse(objective == \"CV\", 2, 0),   cov.bin = NULL,   DEalgorithm = FALSE,   warn = TRUE,   tol.mask = npsp.tolerance(2),   ... )  # S3 method for class 'bin.den' h.cv(   bin,   h.start = NULL,   h.lower = NULL,   h.upper = NULL,   degree = 1,   ncv = 2,   DEalgorithm = FALSE,   ... )  # S3 method for class 'svar.bin' h.cv(   bin,   loss = c(\"MRSE\", \"MRAE\", \"MSE\", \"MAE\"),   h.start = NULL,   h.lower = NULL,   h.upper = NULL,   degree = 1,   ncv = 1,   DEalgorithm = FALSE,   warn = FALSE,   ... )  hcv.data(   bin,   objective = c(\"CV\", \"GCV\", \"MASE\"),   h.start = NULL,   h.lower = NULL,   h.upper = NULL,   degree = 1,   ncv = ifelse(objective == \"CV\", 1, 0),   cov.dat = NULL,   DEalgorithm = FALSE,   warn = TRUE,   ... )"},{"path":"https://rubenfcasal.github.io/npsp/reference/h.cv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cross-validation methods for bandwidth selection — h.cv","text":"bin object used select method (binned data, binned density binned semivariogram). ... arguments passed methods (e.g. parameters optimization routine). objective character; optimal criterion used (\"CV\", \"GCV\" \"MASE\"). h.start vector; initial values parameters (diagonal elements) optimized . DEalgorithm == FALSE (otherwise used), defaults (3 + ncv) * lag, lag = bin$grid$lag. h.lower vector; lower bounds parameter (diagonal elements) optimized. Defaults (1.5 + ncv) * bin$grid$lag. h.upper vector; upper bounds parameter (diagonal elements) optimized. Defaults 1.5 * dim(bin) * bin$grid$lag. degree degree local polynomial used. Defaults 1 (local linear estimation). ncv integer; determines number cells leaved dimension. (0 GCV considering data, \\(>0\\) traditional modified cross-validation). See \"Details\" bellow. cov.bin (optional) covariance matrix binned data semivariogram model (svarmod-class) (unbinned) data. Defaults identity matrix. DEalgorithm logical; TRUE, differential evolution optimization algorithm package DEoptim used. warn logical; sets handling warning messages (normally due lack data neighborhoods). FALSE warnings ignored. tol.mask tolerance used aproximations. Defaults npsp.tolerance(2). loss character; CV error. See \"Details\" bellow. cov.dat covariance matrix data semivariogram model (class extending svarmod). Defaults identity matrix (uncorrelated data).","code":""},{"path":"https://rubenfcasal.github.io/npsp/reference/h.cv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cross-validation methods for bandwidth selection — h.cv","text":"Returns list containing following 3 components: h best (diagonal) bandwidth matrix found. value value objective function corresponding h. objective criterion used.","code":""},{"path":"https://rubenfcasal.github.io/npsp/reference/h.cv.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Cross-validation methods for bandwidth selection — h.cv","text":"Currently, diagonal bandwidths supported. h.cv methods use binning approximations objective function values (almost cases, averaged squared error). ncv > 0, estimates computed leaving binning cells indexes within intervals \\([x_i - ncv + 1, x_i + ncv - 1]\\), dimension , \\(x\\) denotes index estimation location. \\(ncv = 1\\) corresponds traditional cross-validation \\(ncv > 1\\) modified CV (may appropriate dependent data; see e.g. Chu Marron, 1991, one dimensional case). Setting ncv >= 2 recommended sparse data (linear binning used). standard GCV, set ncv = 0 (whole data used). theoretical MASE, set bin = binning(x, y = trend.teor), cov = cov.teor ncv = 0. DEalgorithm == FALSE, \"L-BFGS-B\" method optim used. different options argument loss h.cv.svar.bin() define CV error considered semivariogram estimation: \"MSE\" Mean squared error \"MRSE\" Mean relative squared error \"MAE\" Mean absolute error \"MRAE\" Mean relative absolute error hcv.data evaluates objective function original data (combining binning approximation nonparametric estimates linear interpolation), can slow (memory demanding; consider using h.cv instead). ncv > 1 (modified CV), similar algorithm h.cv used, estimates computed leaving binning cells indexes within intervals \\([x_i - ncv + 1, x_i + ncv - 1]\\).","code":""},{"path":"https://rubenfcasal.github.io/npsp/reference/h.cv.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Cross-validation methods for bandwidth selection — h.cv","text":"Chu, C.K. Marron, J.S. (1991) Comparison Two Bandwidth Selectors   Dependent Errors. Annals Statistics, 19, 1906-1918. Francisco-Fernandez M. Opsomer J.D. (2005) Smoothing parameter selection  methods nonparametric regression spatially correlated errors.  Canadian Journal Statistics, 33, 539-558.","code":""},{"path":[]},{"path":"https://rubenfcasal.github.io/npsp/reference/h.cv.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cross-validation methods for bandwidth selection — h.cv","text":"","code":"# Trend estimation bin <- binning(earthquakes[, c(\"lon\", \"lat\")], earthquakes$mag) hcv <- h.cv(bin, ncv = 2) lp <- locpol(bin, h = hcv$h) # Alternatively, `locpolhcv()` could be called instead of the previous code.   simage(lp, main = 'Smoothed magnitude') contour(lp, add = TRUE) with(earthquakes, points(lon, lat, pch = 20))   # Density estimation hden <- h.cv(as.bin.den(bin)) den <- np.den(bin, h = hden$h)  plot(den, main = 'Estimated log(density)')"},{"path":"https://rubenfcasal.github.io/npsp/reference/interp.html","id":null,"dir":"Reference","previous_headings":"","what":"Fast linear interpolation of a regular grid — interp","title":"Fast linear interpolation of a regular grid — interp","text":"Computes linear interpolation multidimensional regularly gridded data.","code":""},{"path":"https://rubenfcasal.github.io/npsp/reference/interp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fast linear interpolation of a regular grid — interp","text":"","code":"interp(object, ...)  # S3 method for class 'grid.par' interp(object, data, newx, ...)  # S3 method for class 'data.grid' interp(object, data.ind = 1, newx, ...)  # S3 method for class 'locpol.bin' predict(object, newx = NULL, hat.data = FALSE, ...)  # S3 method for class 'np.den' predict(object, newx = NULL, ...)"},{"path":"https://rubenfcasal.github.io/npsp/reference/interp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fast linear interpolation of a regular grid — interp","text":"object (gridded data) object used select method. ... arguments passed methods. data vector array data values. newx vector matrix (irregular) locations interpolate. Columns correspond dimensions rows data. data.ind integer (character) index (name) data component. hat.data logical; TRUE (possible), hat matrix corresponding (original) data returned.","code":""},{"path":"https://rubenfcasal.github.io/npsp/reference/interp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fast linear interpolation of a regular grid — interp","text":"list two components: x interpolation locations. y interpolated values. newx == NULL, predict.locpol.bin returns estimates (optionally hat matrix) corresponding data (otherwise interp.data.grid called).","code":""},{"path":"https://rubenfcasal.github.io/npsp/reference/interp.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fast linear interpolation of a regular grid — interp","text":"interp methods interfaces fortran routine interp_data_grid    (grid_module.f90). predict.locpol.bin interface fortran routine predict_lp (lp_module.f90).","code":""},{"path":"https://rubenfcasal.github.io/npsp/reference/interp.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Fast linear interpolation of a regular grid — interp","text":"Linear extrapolation performed end nodes grid. WARNING: May fail missing values (especially object$locpol$ncv > 0).","code":""},{"path":[]},{"path":"https://rubenfcasal.github.io/npsp/reference/kappasb.html","id":null,"dir":"Reference","previous_headings":"","what":"Coefficients of an extended Shapiro-Botha variogram model — kappasb","title":"Coefficients of an extended Shapiro-Botha variogram model — kappasb","text":"Computes coefficients extended Shapiro-Botha variogram model.","code":""},{"path":"https://rubenfcasal.github.io/npsp/reference/kappasb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coefficients of an extended Shapiro-Botha variogram model — kappasb","text":"","code":"kappasb(x, dk = 0)"},{"path":"https://rubenfcasal.github.io/npsp/reference/kappasb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coefficients of an extended Shapiro-Botha variogram model — kappasb","text":"x numeric vector (kappa function evaluated). dk dimension kappa function.","code":""},{"path":"https://rubenfcasal.github.io/npsp/reference/kappasb.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coefficients of an extended Shapiro-Botha variogram model — kappasb","text":"vector coefficients extended Shapiro-Botha variogram model.","code":""},{"path":"https://rubenfcasal.github.io/npsp/reference/kappasb.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Coefficients of an extended Shapiro-Botha variogram model — kappasb","text":"dk >= 1, coefficients computed : $$\\kappa_d(x) = (2/x)^{(d-2)/2} \\Gamma(d/2) J_{(d-2)/2}(x)$$ \\(J_p\\) Bessel function order \\(p\\).  dk == 0, coefficients computed : $$\\kappa _\\infty(x) = e^{-x^2}$$ (corresponding model valid spatial dimension).  NOTE: authors denote functions \\(\\Omega_d\\).","code":""},{"path":"https://rubenfcasal.github.io/npsp/reference/kappasb.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Coefficients of an extended Shapiro-Botha variogram model — kappasb","text":"Shapiro, . Botha, J.D. (1991) Variogram fitting general class   conditionally non-negative definite functions. Computational Statistics   Data Analysis, 11, 87-96.","code":""},{"path":[]},{"path":"https://rubenfcasal.github.io/npsp/reference/kappasb.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Coefficients of an extended Shapiro-Botha variogram model — kappasb","text":"","code":"kappasb(seq(0, 6*pi, len = 10), 2) #>  [1]  1.00000000  0.16979382 -0.37808962  0.22027691  0.07521839 -0.23876759 #>  [7]  0.15750739  0.05562746 -0.18861103  0.12906352    curve(kappasb(x/5, 0), xlim = c(0, 6*pi), ylim = c(-1, 1), lty = 2) for (i in 1:10) curve(kappasb(x, i), col = gray((i-1)/10), add = TRUE) abline(h = 0, lty = 3)"},{"path":"https://rubenfcasal.github.io/npsp/reference/locpol.html","id":null,"dir":"Reference","previous_headings":"","what":"Local polynomial estimation — locpol","title":"Local polynomial estimation — locpol","text":"Estimates multidimensional regression function (first derivatives) using local polynomial kernel smoothing (linear binning).","code":""},{"path":"https://rubenfcasal.github.io/npsp/reference/locpol.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Local polynomial estimation — locpol","text":"","code":"locpol(x, ...)  # Default S3 method locpol(   x,   y,   h = NULL,   nbin = NULL,   type = c(\"linear\", \"simple\"),   degree = 1 + as.numeric(drv),   drv = FALSE,   hat.bin = FALSE,   ncv = 0,   set.NA = FALSE,   ... )  # S3 method for class 'bin.data' locpol(   x,   h = NULL,   degree = 1 + as.numeric(drv),   drv = FALSE,   hat.bin = FALSE,   ncv = 0,   ... )  # S3 method for class 'svar.bin' locpol(x, h = NULL, degree = 1, drv = FALSE, hat.bin = TRUE, ncv = 0, ...)  # S3 method for class 'bin.den' locpol(x, h = NULL, degree = 1 + as.numeric(drv), drv = FALSE, ncv = 0, ...)  locpolhcv(   x,   y,   nbin = NULL,   objective = c(\"CV\", \"GCV\", \"MASE\"),   degree = 1 + as.numeric(drv),   drv = FALSE,   hat.bin = FALSE,   set.NA = FALSE,   ncv = ifelse(objective == \"CV\", 2, 0),   cov.dat = NULL,   ... )"},{"path":"https://rubenfcasal.github.io/npsp/reference/locpol.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Local polynomial estimation — locpol","text":"x (data) object used select method. ... arguments passed methods (e.g. hcv.data). y vector data (response variable). h (full) bandwidth matrix (controls degree smoothing; upper triangular part h used). nbin vector number bins dimension. type character, binning method: \"linear\" (default) \"simple\". degree degree local polynomial used. Defaults 1 (local linear estimation). drv logical; TRUE, matrix estimated first derivatives returned. hat.bin logical; TRUE, hat matrix binned data returned. ncv integer; determines number cells leaved dimension. Defaults 0 (full data used) normally changed user setting. See \"Details\" . set.NA logical. TRUE, sets bin averages corresponding cells without data NA. objective character; optimal criterion used (\"CV\", \"GCV\" \"MASE\"). cov.dat covariance matrix data semivariogram model (class extending svarmod). Defaults identity matrix (uncorrelated data).","code":""},{"path":"https://rubenfcasal.github.io/npsp/reference/locpol.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Local polynomial estimation — locpol","text":"Returns S3 object class locpol.bin (locpol + bin data + grid par.). bin.data object additional (optional) 3 components: est vector array (dimension nbin) local polynomial estimates. locpol list 7 components: degree degree polinomial. h bandwidth matrix. rm residual mean. rss sum squared residuals. ncv number cells ignored direction. hat (requested) hat matrix binned data. nrl0 (appropriate) number cells data (binw > 0)    missing estimate (est == NA). deriv (requested) matrix first derivatives. locpol.svar.bin returns S3 object class np.svar (locpol semivar + bin semivar + grid par.). locpol.bin.den returns S3 object class np.den (locpol den + bin den + grid par.).","code":""},{"path":"https://rubenfcasal.github.io/npsp/reference/locpol.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Local polynomial estimation — locpol","text":"Standard generic function default method (interface fortran routine lp_raw), argument x vector matrix covariates (e.g. spatial coordinates). parameter nbin specified set pmax(25, rule.binning(x)). multiplicative triweight kernel used compute weights. ncv > 0, estimates computed leaving cells indexes within intervals \\([x_i - ncv + 1, x_i + ncv - 1]\\), dimension , \\(x\\) denotes index estimation position. \\(ncv = 1\\) corresponds traditional cross-validation \\(ncv > 1\\) modified CV (see e.g. Chu Marron, 1991, one dimensional case). Setting set.NA = TRUE (equivalent biny[binw == 0] <- NA) may useful plotting binned averages $biny (hat matrix handled care). locpolhcv calls hcv.data obtain \"optimal\" bandwith (additional arguments ... passed function). Argument ncv used bandwith selection stage (estimation done data).","code":""},{"path":"https://rubenfcasal.github.io/npsp/reference/locpol.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Local polynomial estimation — locpol","text":"Chu, C.K. Marron, J.S. (1991) Comparison Two Bandwidth Selectors   Dependent Errors. Annals Statistics, 19, 1906-1918. Rupert D. Wand M.P. (1994) Multivariate locally weighted least squares regression.   Annals Statistics, 22, 1346-1370.","code":""},{"path":[]},{"path":"https://rubenfcasal.github.io/npsp/reference/locpol.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Local polynomial estimation — locpol","text":"","code":"lp <- locpol(earthquakes[, c(\"lon\", \"lat\")], earthquakes$mag, h = diag(2, 2), nbin = c(41,41)) simage(lp, main = \"Smoothed magnitude\", reset = FALSE) contour(lp, add = TRUE)   bin <- binning(earthquakes[, c(\"lon\", \"lat\")], earthquakes$mag, nbin = c(41,41)) lp2 <- locpol(bin, h = diag(2, 2)) all.equal(lp, lp2) #> [1] TRUE  den <- locpol(as.bin.den(bin), h = diag(1, 2)) plot(den, log = FALSE, main = 'Estimated density')"},{"path":"https://rubenfcasal.github.io/npsp/reference/mask.html","id":null,"dir":"Reference","previous_headings":"","what":"Mask methods — mask","title":"Mask methods — mask","text":"Filters data satisfy condition.","code":""},{"path":"https://rubenfcasal.github.io/npsp/reference/mask.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mask methods — mask","text":"","code":"mask(x, ...)  # Default S3 method mask(x, tol.mask = 0, ...)  # S3 method for class 'data.grid' mask(x, mask = NULL, window = NULL, set.NA = FALSE, warn = FALSE, ...)  # S3 method for class 'bin.den' mask(   x,   mask = mask.default(x$binw, npsp.tolerance(2)),   window = NULL,   set.NA = FALSE,   warn = TRUE,   ... )  # S3 method for class 'bin.data' mask(   x,   mask = NULL,   window = NULL,   set.NA = FALSE,   warn = FALSE,   filter.lp = TRUE,   ... )  # S3 method for class 'locpol.bin' mask(   x,   mask = mask.default(x$binw, npsp.tolerance(2)),   window = NULL,   set.NA = FALSE,   warn = TRUE,   filter.lp = TRUE,   ... )"},{"path":"https://rubenfcasal.github.io/npsp/reference/mask.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Mask methods — mask","text":"x object used select method (binned data, ...). ... arguments passed methods tol.mask tolerance. mask logical; vector (array) indicating selected values (masked). window spatial window (values outside window masked), currently sp-object class extending SpatialPolygons. set.NA logical; TRUE, values corresponding masked cells set NA. warn logical; TRUE warning message generated original data masked. filter.lp logical; TRUE, masked nodes leaved local polynomial estimation.","code":""},{"path":"https://rubenfcasal.github.io/npsp/reference/mask.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Mask methods — mask","text":"mask.default returns logical vector x > tol.mask. mask.bin.den, mask.bin.data mask.locpol.bin return object class x additional component $mask optionally $window.","code":""},{"path":[]},{"path":"https://rubenfcasal.github.io/npsp/reference/mask.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Mask methods — mask","text":"","code":"mask(1:10, 5) #>  [1] FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE bin <- binning(aquifer[,1:2], aquifer$head, nbin = c(41,41), set.NA = TRUE) str(mask(bin, mask(bin$binw), warn = TRUE)) #> List of 5 #>  $ biny: num [1:41, 1:41] NA NA NA NA NA NA 3510 3510 NA NA ... #>  $ binw: num [1:41, 1:41] -1 -1 -1 -1 -1 ... #>  $ grid:List of 6 #>   ..$ nd      : int 2 #>   ..$ n       : int [1:2] 41 41 #>   ..$ min     : num [1:2] -145.24 9.41 #>   ..$ max     : num [1:2] 113 185 #>   ..$ lag     : num [1:2] 6.45 4.38 #>   ..$ dimnames: chr [1:2] \"lon\" \"lat\" #>   ..- attr(*, \"class\")= chr \"grid.par\" #>  $ data:List of 3 #>   ..$ x  : num [1:85, 1:2] 42.78 -27.4 -1.16 -18.62 96.47 ... #>   .. ..- attr(*, \"dimnames\")=List of 2 #>   .. .. ..$ : chr [1:85] \"1\" \"2\" \"3\" \"4\" ... #>   .. .. ..$ : chr [1:2] \"lon\" \"lat\" #>   ..$ y  : num [1:85] 1464 2553 2158 2455 1756 ... #>   ..$ med: num 2002 #>  $ mask: logi [1:1681] FALSE FALSE FALSE FALSE FALSE FALSE ... #>  - attr(*, \"class\")= chr [1:3] \"bin.data\" \"bin.den\" \"data.grid\" str(mask(bin, mask(bin$binw, 1))) #> List of 6 #>  $ biny  : num [1:41, 1:41] NA NA NA NA NA NA 3510 3510 NA NA ... #>  $ binw  : num [1:41, 1:41] -1 -1 -1 -1 -1 ... #>  $ grid  :List of 6 #>   ..$ nd      : int 2 #>   ..$ n       : int [1:2] 41 41 #>   ..$ min     : num [1:2] -145.24 9.41 #>   ..$ max     : num [1:2] 113 185 #>   ..$ lag     : num [1:2] 6.45 4.38 #>   ..$ dimnames: chr [1:2] \"lon\" \"lat\" #>   ..- attr(*, \"class\")= chr \"grid.par\" #>  $ data  :List of 3 #>   ..$ x  : num [1:85, 1:2] 42.78 -27.4 -1.16 -18.62 96.47 ... #>   .. ..- attr(*, \"dimnames\")=List of 2 #>   .. .. ..$ : chr [1:85] \"1\" \"2\" \"3\" \"4\" ... #>   .. .. ..$ : chr [1:2] \"lon\" \"lat\" #>   ..$ y  : num [1:85] 1464 2553 2158 2455 1756 ... #>   ..$ med: num 2002 #>  $ mask  : logi [1:1681] FALSE FALSE FALSE FALSE FALSE FALSE ... #>  $ nomask: int [1:252] 7 8 19 20 35 36 48 49 60 61 ... #>  - attr(*, \"class\")= chr [1:3] \"bin.data\" \"bin.den\" \"data.grid\""},{"path":"https://rubenfcasal.github.io/npsp/reference/np.den.html","id":null,"dir":"Reference","previous_headings":"","what":"Local polynomial density estimation — np.den","title":"Local polynomial density estimation — np.den","text":"Estimates multidimensional probability density function (first derivatives) using local polynomial kernel smoothing linearly binned data.","code":""},{"path":"https://rubenfcasal.github.io/npsp/reference/np.den.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Local polynomial density estimation — np.den","text":"","code":"np.den(x, ...)  # Default S3 method np.den(   x,   nbin = NULL,   h = NULL,   degree = 1 + as.numeric(drv),   drv = FALSE,   ncv = 0,   ... )  # S3 method for class 'bin.den' np.den(x, h = NULL, degree = 1 + as.numeric(drv), drv = FALSE, ncv = 0, ...)  # S3 method for class 'bin.data' np.den(x, h = NULL, degree = 1 + as.numeric(drv), drv = FALSE, ncv = 0, ...)  # S3 method for class 'svar.bin' np.den(x, h = NULL, degree = 1 + as.numeric(drv), drv = FALSE, ncv = 0, ...)"},{"path":"https://rubenfcasal.github.io/npsp/reference/np.den.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Local polynomial density estimation — np.den","text":"x (data) object used select method. ... arguments passed methods. nbin vector number bins dimension. h (full) bandwidth matrix (controls degree smoothing; upper triangular part h used). degree degree local polynomial used. Defaults 1 (local linear estimation). drv logical; TRUE, matrix estimated first derivatives returned. ncv integer; determines number cells leaved dimension. Defaults 0 (full data used) normally changed user setting. See \"Details\" .","code":""},{"path":"https://rubenfcasal.github.io/npsp/reference/np.den.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Local polynomial density estimation — np.den","text":"Returns S3 object class np.den (locpol den + bin den + grid par.). bin.den object additional (optional) 3 components: est vector array (dimension nbin) local polynomial density estimates. locpol list 6 components: degree degree polinomial. h bandwidth matrix. rm residual mean (escaled bin counts). rss sum squared residuals (escaled bin counts). ncv number cells ignored (dimension). deriv (requested) matrix first derivatives.","code":""},{"path":"https://rubenfcasal.github.io/npsp/reference/np.den.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Local polynomial density estimation — np.den","text":"Standard generic function default method (interface fortran routine lp_data_grid), argument x vector matrix covariates (e.g. spatial coordinates). case, data binned (calls bin.den) local fitting procedure applied scaled bin counts (calls np.den.bin.den). parameter nbim specified set rep(25, ncol(x)). multiplicative triweight kernel used compute weights. ncv > 1, estimates computed leaving cells indexes within intervals \\([x_i - ncv + 1, x_i + ncv - 1]\\), dimension , \\(x\\) denotes index estimation position.","code":""},{"path":"https://rubenfcasal.github.io/npsp/reference/np.den.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Local polynomial density estimation — np.den","text":"Wand, M.P. Jones, M.C. (1995) Kernel Smoothing. Chapman Hall, London.","code":""},{"path":[]},{"path":"https://rubenfcasal.github.io/npsp/reference/np.den.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Local polynomial density estimation — np.den","text":"","code":"bin.den <- binning(earthquakes[, c(\"lon\", \"lat\")], nbin = c(30,30)) h.den <- h.cv(bin.den)  den <- np.den(bin.den, h = h.den$h) plot(den, main = 'Estimated log(density)')"},{"path":"https://rubenfcasal.github.io/npsp/reference/np.fitgeo.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit a nonparametric geostatistical model — np.fitgeo","title":"Fit a nonparametric geostatistical model — np.fitgeo","text":"Fits nonparametric (isotropic) geostatistical model (jointly estimates trend variogram) calling locpol,  np.svariso.corr (np.svariso ) fitsvar.sb.iso iteratively. iteration, trend estimation bandwith updated call h.cv.","code":""},{"path":"https://rubenfcasal.github.io/npsp/reference/np.fitgeo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit a nonparametric geostatistical model — np.fitgeo","text":"","code":"np.fitgeo(x, ...)  # Default S3 method np.fitgeo(   x,   y,   nbin = NULL,   iter = 2,   h = NULL,   tol = 0.05,   set.NA = FALSE,   h.svar = NULL,   corr.svar = iter > 0,   maxlag = NULL,   nlags = NULL,   dk = 0,   svm.resid = FALSE,   hat.bin = corr.svar,   warn = FALSE,   plot = FALSE,   window = NULL,   ... )  # S3 method for class 'locpol.bin' np.fitgeo(   x,   svm,   iter = 1,   tol = 0.05,   h.svar = svm$esv$locpol$h,   dk = 0,   corr.svar = TRUE,   svm.resid = FALSE,   hat.bin = corr.svar,   warn = FALSE,   plot = FALSE,   ... )  # S3 method for class 'fitgeo' np.fitgeo(   x,   iter = 1,   tol = 0.05,   h.svar = x$svm$esv$locpol$h,   dk = x$svm$par$dk,   corr.svar = TRUE,   svm.resid = FALSE,   hat.bin = corr.svar,   warn = FALSE,   plot = FALSE,   ... )"},{"path":"https://rubenfcasal.github.io/npsp/reference/np.fitgeo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit a nonparametric geostatistical model — np.fitgeo","text":"x (data) object used select method. ... arguments passed h.cv (trend bandwidth selection parameters). y vector data (response variable). nbin vector number bins dimension. iter maximum number iterations (whole algorithm). h initial bandwidth matrix trend estimation (final bandwidth iter = 1). tol relative convergence tolerance (semivariogram). set.NA logical. TRUE, sets bin averages corresponding cells without data NA. h.svar bandwidth matrix variogram estimation. corr.svar logical; TRUE (default), bias-corrected semivariogram estimate computed (see np.svariso.corr). FALSE (uncorrected) residual variogram computed (traditional approach geostatistics). maxlag maximum lag. Defaults 55% largest lag. nlags number lags. Defaults 101. dk dimension Shapiro-Botha variogram model (see fitsvar.sb.iso). svm.resid logical; TRUE, fitted (uncorrected) residual semivariogram model computed returned (parameter effect corr.svar = FALSE). hat.bin logical; TRUE, hat matrix binned data returned. warn logical; sets handling warning messages bandwidth selection (h.cv). plot logical; TRUE, semivariogram estimates obtained iteration plotted. window spatial window (values outside window masked), currently sp-object class extending SpatialPolygons. svm (fitted) variogram model (object class fitsvar svarmod).","code":""},{"path":"https://rubenfcasal.github.io/npsp/reference/np.fitgeo.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit a nonparametric geostatistical model — np.fitgeo","text":"Returns object class fitgeo (extends np.geo). locpol.bin object additional (optional) 3 components: svm fitted variogram model (object class  fitsvar). svm0 (requested) fitted residual variogram model (object class  fitsvar). residuals model residuals.","code":""},{"path":"https://rubenfcasal.github.io/npsp/reference/np.fitgeo.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fit a nonparametric geostatistical model — np.fitgeo","text":"Currently, isotropic semivariogram estimation supported. parameter h specified, h.cv called default values (modified CV) set . parameter h.svar specified, set 1.5*h.cv.svar.bin()$h. Setting corr.svar = TRUE may slow (memory demanding) number data large (note also bias residual variogram decreases sample size increases).","code":""},{"path":[]},{"path":"https://rubenfcasal.github.io/npsp/reference/np.fitgeo.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit a nonparametric geostatistical model — np.fitgeo","text":"","code":"geomod <- np.fitgeo(aquifer[,1:2], aquifer$head, svm.resid = TRUE) plot(geomod)    # Uncorrected variogram estimator geomod0 <- np.fitgeo(aquifer[,1:2], aquifer$head, iter = 0, corr.svar = FALSE) plot(geomod0)   # Additional iteration with bias-corrected variogram estimator geomod1 <- np.fitgeo(geomod0, corr.svar = TRUE, svm.resid = TRUE) plot(geomod1)"},{"path":"https://rubenfcasal.github.io/npsp/reference/np.geo.html","id":null,"dir":"Reference","previous_headings":"","what":"Nonparametric geostatistical model (S3 class ","title":"Nonparametric geostatistical model (S3 class ","text":"Defines nonparametric geostatistical model (intended used regularly; see np.fitgeo). Constructor function np.geo fitgeo S3 classes.","code":""},{"path":"https://rubenfcasal.github.io/npsp/reference/np.geo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Nonparametric geostatistical model (S3 class ","text":"","code":"np.geo(lp, svm, svm0 = NULL, nbin = lp$grid$n)"},{"path":"https://rubenfcasal.github.io/npsp/reference/np.geo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Nonparametric geostatistical model (S3 class ","text":"lp local polynomial estimate trend function (object class locpol.bin). svm (fitted) variogram model (object class fitsvar svarmod). svm0 (fitted) residual variogram model (object class fitsvar svarmod). nbin number bins dimension.","code":""},{"path":"https://rubenfcasal.github.io/npsp/reference/np.geo.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Nonparametric geostatistical model (S3 class ","text":"Returns object class np.geo (extends locpol.bin), lp argument others vector residuals additional components.","code":""},{"path":[]},{"path":"https://rubenfcasal.github.io/npsp/reference/np.kriging.html","id":null,"dir":"Reference","previous_headings":"","what":"Nonparametric (residual) kriging — np.kriging","title":"Nonparametric (residual) kriging — np.kriging","text":"Compute simple kriging residual kriging predictions (also corresponding simple kriging standard errors ). Currently, global (residual) simple kriging implemented.","code":""},{"path":"https://rubenfcasal.github.io/npsp/reference/np.kriging.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Nonparametric (residual) kriging — np.kriging","text":"","code":"np.kriging(object, ...)  # Default S3 method np.kriging(   object,   svm,   lp.resid = NULL,   ngrid = object$grid$n,   intermediate = FALSE,   ... )  # S3 method for class 'np.geo' np.kriging(object, ngrid = object$grid$n, intermediate = FALSE, ...)  kriging.simple(x, y, newx, svm, intermediate = FALSE)"},{"path":"https://rubenfcasal.github.io/npsp/reference/np.kriging.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Nonparametric (residual) kriging — np.kriging","text":"object object used select method: local polynomial estimate trend (class locpol.bin) nonparametric geostatistical model (class extending np.geo). ... arguments passed methods. svm semivariogram model (class extending svarmod). lp.resid residuals (defaults residuals(object)). ngrid number grid nodes dimension. intermediate logical, determines whether intermediate computations included output (component kriging; see Value). calculations can reused, e.g. bootstrap. x vector/matrix data locations (component/row observation location). y vector data (response variable). newx vector/matrix (irregular) locations predict (component/row prediction location). object extending grid.par-class (data.grid).","code":""},{"path":"https://rubenfcasal.github.io/npsp/reference/np.kriging.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Nonparametric (residual) kriging — np.kriging","text":"np.kriging(), kriging.simple() newx defines gridded data (extends grid.par data.grid classes), returns S3 object class krig.grid (kriging results + grid par.). data.grid object additional (optional) components: kpred vector array (dimension $grid$n) kriging predictions. ksd vector array kriging standard deviations. kriging (requested) list 4 components: lambda matrix kriging weights (columns correspond predictions    rows data)). cov.est (estimated) covariance matrix data. chol Cholesky factorization cov.est. cov.pred matrix (estimated) covariances data (rows)    predictions (columns). newx matrix coordinates (row prediction location), kriging.simple() returns list previous components (kpred, ksd , requested, kriging).","code":""},{"path":[]},{"path":"https://rubenfcasal.github.io/npsp/reference/np.kriging.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Nonparametric (residual) kriging — np.kriging","text":"","code":"geomod <- np.fitgeo(aquifer[,1:2], aquifer$head) krig.grid <- np.kriging(geomod, ngrid = c(96, 96)) # 9216 locations old.par <- par(mfrow = c(1,2)) simage(krig.grid, 'kpred', main = 'Kriging predictions',         xlab = \"Longitude\", ylab = \"Latitude\", reset = FALSE ) simage(krig.grid, 'ksd', main = 'Kriging sd', xlab = \"Longitude\",         ylab = \"Latitude\" , col = hot.colors(256), reset = FALSE)  par(old.par)"},{"path":"https://rubenfcasal.github.io/npsp/reference/np.svar.html","id":null,"dir":"Reference","previous_headings":"","what":"Local polynomial estimation of the semivariogram — np.svar","title":"Local polynomial estimation of the semivariogram — np.svar","text":"Estimates multidimensional semivariogram (first derivatives) using local polynomial kernel smoothing linearly binned semivariances.","code":""},{"path":"https://rubenfcasal.github.io/npsp/reference/np.svar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Local polynomial estimation of the semivariogram — np.svar","text":"","code":"np.svar(x, ...)  # Default S3 method np.svar(   x,   y,   h = NULL,   maxlag = NULL,   nlags = NULL,   minlag = maxlag/nlags,   degree = 1,   drv = FALSE,   hat.bin = TRUE,   ncv = 0,   ... )  # S3 method for class 'svar.bin' np.svar(x, h = NULL, degree = 1, drv = FALSE, hat.bin = TRUE, ncv = 0, ...)  np.svariso(   x,   y,   h = NULL,   maxlag = NULL,   nlags = NULL,   minlag = maxlag/nlags,   degree = 1,   drv = FALSE,   hat.bin = TRUE,   ncv = 0,   ... )  np.svariso.hcv(   x,   y,   maxlag = NULL,   nlags = NULL,   minlag = maxlag/nlags,   degree = 1,   drv = FALSE,   hat.bin = TRUE,   loss = c(\"MRSE\", \"MRAE\", \"MSE\", \"MAE\"),   ncv = 1,   warn = FALSE,   ... )  np.svariso.corr(   lp,   x = lp$data$x,   h = NULL,   maxlag = NULL,   nlags = NULL,   minlag = maxlag/nlags,   degree = 1,   drv = FALSE,   hat.bin = TRUE,   tol = 0.05,   max.iter = 10,   plot = FALSE,   verbose = plot,   ylim = c(0, 2 * max(svar$biny, na.rm = TRUE)) )"},{"path":"https://rubenfcasal.github.io/npsp/reference/np.svar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Local polynomial estimation of the semivariogram — np.svar","text":"x object used select method. Usually matrix coordinates data locations (columns correspond dimensions rows data). ... arguments passed methods. y vector data (response variable). h (full) bandwidth matrix (controls degree smoothing; upper triangular part h used). maxlag maximum lag. Defaults 55% largest lag. nlags number lags. Defaults 101. minlag minimun lag. degree degree local polynomial used. Defaults 1 (local linear estimation). drv logical; TRUE, matrix estimated first derivatives returned. hat.bin logical; TRUE, hat matrix binned semivariances returned. ncv integer; determines number cells leaved dimension. Defaults 0 (full data used) normally changed user setting. See \"Details\" . loss character; CV error. See \"Details\" bellow. warn logical; sets handling warning messages (normally due lack data neighborhoods). FALSE warnings ignored. lp local polynomial estimate trend function (object class locpol.bin). tol convergence tolerance. algorithm stops average relative squared diferences less tol. Defaults 0.04. max.iter maximum number iterations. Defaults 10. plot logical; TRUE, estimates obtained iteration plotted. verbose logical; TRUE, errors (averages relative squared differences) iteration printed. ylim y-limits plot (plot == TRUE).","code":""},{"path":"https://rubenfcasal.github.io/npsp/reference/np.svar.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Local polynomial estimation of the semivariogram — np.svar","text":"Returns S3 object class np.svar (locpol svar + binned svar + grid par.),     extends svar.bin, additional (optional) 3 components: est vector array    local polynomial semivariogram estimates. locpol list 6 components: degree degree local polinomial used. h smoothing matrix. rm mean residual semivariances. rss sum squared residual semivariances. ncv number cells ignored direction. hat (requested) hat matrix binned semivariances. nrl0 (appropriate) number cells binw > 0    est == NA. deriv (requested) matrix estimated first semivariogram derivatives.","code":""},{"path":"https://rubenfcasal.github.io/npsp/reference/np.svar.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Local polynomial estimation of the semivariogram — np.svar","text":"Currently, isotropic semivariogram estimation supported. parameter nlags specified set 101. computation hat matrix binned semivariances (hat.bin = TRUE) allows computation approximated estimation variances (e.g. fitsvar.sb.iso). multiplicative triweight kernel used compute weights. np.svariso.hcv calls h.cv obtain \"optimal\" bandwith (additional arguments ... passed function). Argument ncv used bandwith selection stage (estimation done data). np.svariso.corr computes bias-corrected nonparametric semivariogram estimate using iterative algorithm similar described Fernandez-Casal Francisco-Fernandez (2014). procedure tries correct bias due direct use residuals (obtained case nonparametric estimation trend function) semivariogram estimation.","code":""},{"path":"https://rubenfcasal.github.io/npsp/reference/np.svar.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Local polynomial estimation of the semivariogram — np.svar","text":"Fernandez Casal R., Gonzalez Manteiga W.  Febrero Bande M. (2003) Space-time dependency modeling using general classes flexible stationary variogram models, J. Geophys. Res., 108, 8779, doi:10.1029/2002JD002909 . Garcia-Soidan P.H., Gonzalez-Manteiga W. Febrero-Bande M. (2003) Local linear regression estimation variogram, Stat. Prob. Lett., 64, 169-179. Fernandez-Casal R. Francisco-Fernandez M. (2014) Nonparametric bias-corrected variogram estimation non-constant trend, Stoch. Environ. Res. Ris. Assess, 28, 1247-1259.","code":""},{"path":[]},{"path":"https://rubenfcasal.github.io/npsp/reference/npsp-geoR.html","id":null,"dir":"Reference","previous_headings":"","what":"Interface to package ","title":"Interface to package ","text":"Utilities interact geoR package.","code":""},{"path":"https://rubenfcasal.github.io/npsp/reference/npsp-geoR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Interface to package ","text":"","code":"as.variogram(x, ...)  # S3 method for class 'svar.bin' as.variogram(x, ...)  # S3 method for class 'np.svar' as.variogram(x, ...)  as.variomodel(m, ...)  # S3 method for class 'svarmod' as.variomodel(m, ...)"},{"path":"https://rubenfcasal.github.io/npsp/reference/npsp-geoR.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Interface to package ","text":"x semivariogram estimate (e.g. svar.bin np.svar object). ... arguments passed methods. m variogram model (e.g. svarmod object).","code":""},{"path":"https://rubenfcasal.github.io/npsp/reference/npsp-geoR.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Interface to package ","text":".variogram() returns object (fully documented) geoR-class variogram. .variomodel() returns object geoR-class variomodel.","code":""},{"path":"https://rubenfcasal.github.io/npsp/reference/npsp-geoR.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Interface to package ","text":".variogram tries convert semivariogram estimate \\(\\hat{\\gamma}(h_i)\\) object (fully documented) geoR-class variogram (see e.g. variog). .variomodel tries convert semivariogram model \\(\\gamma(pars; h)\\) object geoR-class variomodel (see e.g. variofit).","code":""},{"path":[]},{"path":"https://rubenfcasal.github.io/npsp/reference/npsp-gstat.html","id":null,"dir":"Reference","previous_headings":"","what":"Interface to package ","title":"Interface to package ","text":"Utilities interact gstat package.","code":""},{"path":"https://rubenfcasal.github.io/npsp/reference/npsp-gstat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Interface to package ","text":"","code":"as.vgm(x, ...)  # S3 method for class 'variomodel' as.vgm(x, ...)  # S3 method for class 'svarmod' as.vgm(x, ...)  vgm.tab.svarmod(x, h = seq(0, x$range, length = 1000), sill = x$sill, ...)  # S3 method for class 'sb.iso' as.vgm(x, h = seq(0, x$range, length = 1000), sill = x$sill, ...)"},{"path":"https://rubenfcasal.github.io/npsp/reference/npsp-gstat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Interface to package ","text":"x variogram model object (used select method). ... arguments passed methods. h vector lags covariogram evaluated. sill sill covariogram (pseudo-sill).","code":""},{"path":"https://rubenfcasal.github.io/npsp/reference/npsp-gstat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Interface to package ","text":"variogramModel-class object gstat package.","code":""},{"path":"https://rubenfcasal.github.io/npsp/reference/npsp-gstat.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Interface to package ","text":"Tries convert variogram object vgm (variogramModel-class gstat package). S3 generic function. .vgm.variomodel tries convert object class variomodel defined geoR (interface .vgm.variomodel defined gstat). vgm.tab.svarmod converts svarmod object variogramModel-class object type \"Tab\" (one-dimensional covariance table). .vgm.sb.iso alias vgm.tab.svarmod.","code":""},{"path":[]},{"path":"https://rubenfcasal.github.io/npsp/reference/npsp-internals.html","id":null,"dir":"Reference","previous_headings":"","what":"npsp internal and secondary functions — .cpu.time.ini","title":"npsp internal and secondary functions — .cpu.time.ini","text":"Listed supporting functions major methods npsp.","code":""},{"path":"https://rubenfcasal.github.io/npsp/reference/npsp-internals.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"npsp internal and secondary functions — .cpu.time.ini","text":"","code":".cpu.time.ini()  revdim(a, d)  .compute.masked(bin, cov.bin = NULL, tol.mask = npsp.tolerance(2))  .wloss(est, teor, w, loss = c(\"MSE\", \"MRSE\", \"MAE\", \"MRAE\"))  # S3 method for class 'locpol.bin' residuals(object, ...)  .kriging.simple.solve(x, newx, svm)  # S3 method for class 'np.geo' residuals(object, ...)  # S3 method for class 'grid.par' print(x, ...)  # S3 method for class 'grid.par' dim(x)  # S3 method for class 'grid.par' dimnames(x)  # S3 method for class 'grid.par' as.data.frame(x, row.names = dimnames(x), optional = FALSE, ...)  is.data.grid(x)  # S3 method for class 'data.grid' dim(x)  # S3 method for class 'data.grid' dimnames(x)  .rice.rule(x, a = 2, b = 3, ...)  splot.plt(   horizontal = FALSE,   legend.shrink = 0.9,   legend.width = 1,   legend.mar = ifelse(horizontal, 3.1, 5.1),   bigplot = NULL,   smallplot = NULL )  .rev.colorRampPalette(colors, interpolate = \"spline\", ...)"},{"path":"https://rubenfcasal.github.io/npsp/reference/npsp-internals.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"npsp internal and secondary functions — .cpu.time.ini","text":"scale values. cov.bin (optional) covariance matrix binned data semivariogram model (svarmod-class) (unbinned) data. object object used select method: local polynomial estimate trend (class locpol.bin) nonparametric geostatistical model (class extending np.geo). ... arguments passed methods. x vector/matrix data locations (component/row observation location). newx vector/matrix (irregular) locations predict (component/row prediction location). object extending grid.par-class (data.grid). svm semivariogram model (class extending svarmod). b exponent values.","code":""},{"path":"https://rubenfcasal.github.io/npsp/reference/npsp-internals.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"npsp internal and secondary functions — .cpu.time.ini","text":".compute.masked returns list components: mask logical vector bin$binw > tol.mask. w x$binw[mask]. sw sum(w). hat (optional) bin$locpol$hat[mask, mask]. cov.bin (optional) masked (aproximated) covariance matrix binned data.","code":""},{"path":"https://rubenfcasal.github.io/npsp/reference/npsp-package.html","id":null,"dir":"Reference","previous_headings":"","what":"npsp: Nonparametric spatial (geo)statistics — npsp-package","title":"npsp: Nonparametric spatial (geo)statistics — npsp-package","text":"package implements nonparametric methods inference multidimensional spatial (spatio-temporal) processes, may (especially) useful (automatic) geostatistical modeling interpolation.","code":""},{"path":"https://rubenfcasal.github.io/npsp/reference/npsp-package.html","id":"main-functions","dir":"Reference","previous_headings":"","what":"Main functions","title":"npsp: Nonparametric spatial (geo)statistics — npsp-package","text":"Nonparametric methods inference spatial trend variogram functions: np.fitgeo (automatically) fits isotropic nonparametric geostatistical model estimating trend variogram (using bias-corrected estimator) iteratively (calling h.cv, locpol, np.svariso.corr fitsvar.sb.iso iteration). locpol, np.den np.svar use local polynomial kernel methods compute nonparametric estimates multidimensional regression function, probability density function semivariogram (first derivatives), respectively. Estimates functions can constructed dimension (amount available memory limitation). speed computations, linear binning used discretize data. full bandwidth matrix multiplicative triweight kernel used compute weights. Main calculations performed FORTRAN using LAPACK library. np.svariso.corr computes bias-corrected nonparametric semivariogram estimate using iterative algorithm similar described Fernandez-Casal Francisco-Fernandez (2014). procedure tries correct bias due direct use residuals, obtained nonparametric estimation trend function, semivariogram estimation. fitsvar.sb.iso fits `nonparametric' isotropic Shapiro-Botha variogram model WLS. Currently, isotropic semivariogram estimation supported. Nonparametric residual kriging (sometimes called external drift kriging): np.kriging computes residual kriging predictions (corresponding simple kriging standard errors). kriging.simple computes simple kriging predictions, standard errors Currently, global simple kriging implemented package. Users encouraged use krige (krige.cv) utilities gstat package together .vgm local kriging.","code":""},{"path":"https://rubenfcasal.github.io/npsp/reference/npsp-package.html","id":"other-functions","dir":"Reference","previous_headings":"","what":"Other functions","title":"npsp: Nonparametric spatial (geo)statistics — npsp-package","text":"Among functions intended direct access user, following (methods multidimensional linear binning, local polynomial kernel regression, density variogram estimation) emphasized: binning, bin.den, svar.bin, h.cv interp. functions plotting data joint legend representing continuous color scale. splot allows combine standard R plot legend. spoints, simage spersp draw corresponding high-level plot legend strip color scale. functions based image.plot package fields. also functions can used interact packages. instance, .variogram (geoR) .vgm (gstat).","code":""},{"path":"https://rubenfcasal.github.io/npsp/reference/npsp-package.html","id":"acknowledgments","dir":"Reference","previous_headings":"","what":"Acknowledgments","title":"npsp: Nonparametric spatial (geo)statistics — npsp-package","text":"Important suggestions contributions techniques included made Sergio Castillo-Paez (Universidad de las Fuerzas Armadas ESPE, Ecuador) Tomas Cotos-Yañez (Dep. Statistics, University Vigo, Spain).","code":""},{"path":"https://rubenfcasal.github.io/npsp/reference/npsp-package.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"npsp: Nonparametric spatial (geo)statistics — npsp-package","text":"Castillo-Páez S., Fernández-Casal R. García-Soidán P. (2019) nonparametric bootstrap method spatial data, 137, Comput. Stat. Data Anal., 1-15, doi:10.1016/j.csda.2019.01.017 . Fernandez-Casal R., Castillo-Paez S. Francisco-Fernandez M. (2018) Nonparametric geostatistical risk mapping, Stoch. Environ. Res. Ris. Assess., 32, 675-684, doi:10.1007/s00477-017-1407-y . Fernandez-Casal R., Castillo-Paez S. Garcia-Soidan P. (2017) Nonparametric estimation small-scale variability heteroscedastic spatial processes, Spa. Sta., 22, 358-370, doi:10.1016/j.spasta.2017.04.001 . Fernandez-Casal R. Francisco-Fernandez M. (2014) Nonparametric bias-corrected variogram estimation non-constant trend, Stoch. Environ. Res. Ris. Assess., 28, 1247-1259, doi:10.1007/s00477-013-0817-8 . Fernandez-Casal R., Gonzalez-Manteiga W.  Febrero-Bande M. (2003) Flexible Spatio-Temporal Stationary Variogram Models, Statistics Computing, 13, 127-136, doi:10.1023/:1023204525046 . Rupert D. Wand M.P. (1994) Multivariate locally weighted least squares regression.   Annals Statistics, 22, 1346-1370. Shapiro . Botha J.D. (1991) Variogram fitting general class   conditionally non-negative definite functions. Computational Statistics   Data Analysis, 11, 87-96. Wand M.P. (1994) Fast Computation Multivariate Kernel Estimators.   Journal Computational Graphical Statistics, 3, 433-445. Wand M.P. Jones M.C. (1995) Kernel Smoothing. Chapman Hall, London.","code":""},{"path":[]},{"path":"https://rubenfcasal.github.io/npsp/reference/npsp-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"npsp: Nonparametric spatial (geo)statistics — npsp-package","text":"Ruben Fernandez-Casal (Dep. Mathematics, University Coruña, Spain). Please send comments, error reports suggestions rubenfcasal@gmail.com.","code":""},{"path":"https://rubenfcasal.github.io/npsp/reference/npsp.tolerance.html","id":null,"dir":"Reference","previous_headings":"","what":"npsp Tolerances — npsp.tolerance","title":"npsp Tolerances — npsp.tolerance","text":"Returns (convergence, taper, approximation,...) tolerance. Defaults .Machine$double.eps^(1/level), typically 1e-8.","code":""},{"path":"https://rubenfcasal.github.io/npsp/reference/npsp.tolerance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"npsp Tolerances — npsp.tolerance","text":"","code":"npsp.tolerance(level = 2, warn = TRUE)"},{"path":"https://rubenfcasal.github.io/npsp/reference/npsp.tolerance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"npsp Tolerances — npsp.tolerance","text":"level numerical, warn logical; TRUE (default) warning message issued level < 1.","code":""},{"path":"https://rubenfcasal.github.io/npsp/reference/npsp.tolerance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"npsp Tolerances — npsp.tolerance","text":"Returns .Machine$double.eps^(1/level) level >= 1, case 1 - .Machine$double.eps.","code":""},{"path":[]},{"path":"https://rubenfcasal.github.io/npsp/reference/npsp.tolerance.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"npsp Tolerances — npsp.tolerance","text":"","code":"curve(npsp.tolerance, 1, 1000) abline(h = npsp.tolerance(0, FALSE), lty = 2)"},{"path":"https://rubenfcasal.github.io/npsp/reference/plot.fitgeo.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot a nonparametric geostatistical model — plot.fitgeo","title":"Plot a nonparametric geostatistical model — plot.fitgeo","text":"Plots trend estimates fitted variogram model.","code":""},{"path":"https://rubenfcasal.github.io/npsp/reference/plot.fitgeo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot a nonparametric geostatistical model — plot.fitgeo","text":"","code":"# S3 method for class 'fitgeo' plot(x, y = NULL, main.trend = \"Trend estimates\", main.svar = NULL, ...)"},{"path":"https://rubenfcasal.github.io/npsp/reference/plot.fitgeo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot a nonparametric geostatistical model — plot.fitgeo","text":"x nonparametric geostatistical model object. Typically output np.fitgeo. y ignored argument. main.trend title trend plot. main.svar title semivariogram plot. ... additional graphical parameters (passed simage trend plotting).","code":""},{"path":"https://rubenfcasal.github.io/npsp/reference/plot.fitgeo.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot a nonparametric geostatistical model — plot.fitgeo","text":"return value, called side effects (generate plot).","code":""},{"path":[]},{"path":"https://rubenfcasal.github.io/npsp/reference/plot.fitgeo.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot a nonparametric geostatistical model — plot.fitgeo","text":"","code":"geomod <- np.fitgeo(aquifer[,1:2], aquifer$head) plot(geomod)"},{"path":"https://rubenfcasal.github.io/npsp/reference/precipitation.html","id":null,"dir":"Reference","previous_headings":"","what":"Precipitation data — precipitation","title":"Precipitation data — precipitation","text":"data set consists total precipitations March 2016 recorded 1053 locations continental part USA.","code":""},{"path":"https://rubenfcasal.github.io/npsp/reference/precipitation.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Precipitation data — precipitation","text":"SpatialPointsDataFrame 1053 observations following 6 variables: y total precipitations (square-root rainfall inches), WBAN five-digit Weather station identifier, state factor containing U.S. state, following attributes: labels list data variable labels, border SpatialPolygons boundary   continental part USA, interior SpatialPolygons U.S. state boundaries.","code":""},{"path":"https://rubenfcasal.github.io/npsp/reference/precipitation.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Precipitation data — precipitation","text":"National Climatic Data Center: https://www.ncdc.noaa.gov/cdo-web/datasets.","code":""},{"path":"https://rubenfcasal.github.io/npsp/reference/precipitation.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Precipitation data — precipitation","text":"Fernandez-Casal R., Castillo-Paez S. Francisco-Fernandez M. (2017) Nonparametric geostatistical risk mapping, Stoch. Environ. Res. Ris. Assess., doi:10.1007/s00477-017-1407-y . Fernandez-Casal R., Castillo-Paez S. Garcia-Soidan P. (2017) Nonparametric estimation small-scale variability heteroscedastic spatial processes, Spa. Sta., doi:10.1016/j.spasta.2017.04.001 .","code":""},{"path":"https://rubenfcasal.github.io/npsp/reference/precipitation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Precipitation data — precipitation","text":"","code":"summary(precipitation) #>                 Length                  Class                   Mode  #>                   1053 SpatialPointsDataFrame                     S4  scattersplot(precipitation)"},{"path":"https://rubenfcasal.github.io/npsp/reference/rgraphics.html","id":null,"dir":"Reference","previous_headings":"","what":"R Graphics for gridded data — rgraphics","title":"R Graphics for gridded data — rgraphics","text":"Draw image, perspective, contour filled contour plot data bidimensional regular grid (S3 methods class \"data.grid\").","code":""},{"path":"https://rubenfcasal.github.io/npsp/reference/rgraphics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"R Graphics for gridded data — rgraphics","text":"","code":"# S3 method for class 'data.grid' image(   x,   data.ind = 1,   xlab = NULL,   ylab = NULL,   useRaster = all(dim(x) > dev.size(\"px\")),   ... )  # S3 method for class 'data.grid' persp(x, data.ind = 1, xlab = NULL, ylab = NULL, zlab = NULL, ...)  # S3 method for class 'data.grid' contour(x, data.ind = 1, filled = FALSE, xlab = NULL, ylab = NULL, ...)"},{"path":"https://rubenfcasal.github.io/npsp/reference/rgraphics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"R Graphics for gridded data — rgraphics","text":"x \"data.grid\"-class object. data.ind integer (character) index (name) component containing values used coloring rectangles. xlab label x axis, defaults dimnames(x)[1]. ylab label y axis, defaults dimnames(x)[2]. useRaster logical; TRUE bitmap raster used plot image instead polygons. ... additional graphical parameters (passed main plot function). zlab label z axis, defaults names(x)[data.ind]. filled logical; FALSE (default), function contour called, otherwise filled.contour.","code":""},{"path":"https://rubenfcasal.github.io/npsp/reference/rgraphics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"R Graphics for gridded data — rgraphics","text":"image() contour() return value, call secondary effects (generate corresponding plot). persp() invisibly returns viewing transformation matrix (see persp details), 4 x 4 matrix can used superimpose additional graphical elements using function trans3d.","code":""},{"path":[]},{"path":"https://rubenfcasal.github.io/npsp/reference/rgraphics.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"R Graphics for gridded data — rgraphics","text":"","code":"# Regularly spaced 2D data grid <- grid.par(n = c(50, 50), min = c(-1, -1), max = c(1, 1)) f2d <- function(x) x[1]^2 - x[2]^2 trend <- apply(coords(grid), 1, f2d) set.seed(1) y <- trend + rnorm(prod(dim(grid)), 0, 0.1) gdata <- data.grid(trend = trend, y = y, grid = grid) # perspective plot persp(gdata, main = 'Trend', theta = 40, phi = 20, ticktype = \"detailed\")  # filled contour plot contour(gdata, main = 'Trend', filled = TRUE, color.palette = jet.colors)  # Multiple plots with a common legend: scale.range <- c(-1.2, 1.2) scale.color <- jet.colors(64) # 1x2 plot with some room for the legend... old.par <- par(mfrow = c(1,2), omd = c(0.05, 0.85, 0.05, 0.95)) image(gdata, zlim = scale.range, main = 'Trend', col = scale.color) contour(gdata, add = TRUE) image(gdata, 'y', zlim = scale.range, main = 'Data', col = scale.color) contour(gdata, 'y', add = TRUE) par(old.par) # the legend can be added to any plot... splot(slim = scale.range, col = scale.color, add = TRUE)"},{"path":"https://rubenfcasal.github.io/npsp/reference/rule.html","id":null,"dir":"Reference","previous_headings":"","what":"npsp Rules — rule","title":"npsp Rules — rule","text":"Compute number classes histogram, number nodes binning grid, etc.","code":""},{"path":"https://rubenfcasal.github.io/npsp/reference/rule.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"npsp Rules — rule","text":"","code":"rule(x, d = 1, rule = c(\"Rice\", \"Sturges\", \"scott\", \"FD\"), ...)  rule.binning(x, ...)  # Default S3 method rule.binning(x, d = ncol(x), a = 2, b = d + 1, ...)  rule.svar(x, ...)  # Default S3 method rule.svar(x, d = ncol(x), a = 2, b = d + 1, ...)  # S3 method for class 'bin.den' rule.svar(x, ...)"},{"path":"https://rubenfcasal.github.io/npsp/reference/rule.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"npsp Rules — rule","text":"x data vector object used select method. d (spatial) dimension. rule character; rule used. ... arguments passed methods. scale values. b exponent values.","code":""},{"path":"https://rubenfcasal.github.io/npsp/reference/rule.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"npsp Rules — rule","text":"rule values (vector scalar). rule.binning returns vector suggested number bins dimension. rule.binning.default returns rep(ceiling(* nrow(x) ^ (1 / b)), d). rule.svar returns suggested number bins variogram estimation. rule.svar.default returns ceiling(* (nrow(x)^2 / 4) ^ (1 / b)).","code":""},{"path":"https://rubenfcasal.github.io/npsp/reference/rule.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"npsp Rules — rule","text":"Rice Rule, \\(m = \\lceil 2 n^{1/3} \\rceil,\\) simple alternative Sturges's rule (nclass.Sturges).","code":""},{"path":[]},{"path":"https://rubenfcasal.github.io/npsp/reference/scattersplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Exploratory scatter plots — scattersplot","title":"Exploratory scatter plots — scattersplot","text":"Draws (2 2 layout) following plots: scatter plot color scale, scatter plots response (first two) coordinates histogram response values.","code":""},{"path":"https://rubenfcasal.github.io/npsp/reference/scattersplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Exploratory scatter plots — scattersplot","text":"","code":"scattersplot(x, ...)  # Default S3 method scattersplot(   x,   z,   main,   xlab,   ylab,   zlab,   col = hot.colors(128),   lowess = TRUE,   density = FALSE,   omd = c(0.05, 0.95, 0.01, 0.95),   ... )  # S3 method for class 'SpatialPointsDataFrame' scattersplot(   x,   data.ind = 1,   main,   xlab,   ylab,   zlab,   col = hot.colors(128),   lowess = TRUE,   density = FALSE,   omd = c(0.05, 0.95, 0.01, 0.95),   ... )"},{"path":"https://rubenfcasal.github.io/npsp/reference/scattersplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Exploratory scatter plots — scattersplot","text":"x object used select method. ... additional graphical parameters (passed spoints). z vector data (response variable). main overall title plot. xlab title axis corresponding first coordinate. ylab title axis corresponding second coordinate. zlab title axis corresponding response. col color table used set color scale (see spoints). lowess logical. TRUE, lowess smooth added plots response coordinates. density logical. TRUE, kernel density estimate added histogram. omd vector form c(x1, x2, y1, y2) giving region inside outer margins normalized device coordinates (.e. fractions device region). data.ind integer (character) index (name) data component.","code":""},{"path":"https://rubenfcasal.github.io/npsp/reference/scattersplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Exploratory scatter plots — scattersplot","text":"return value, called side effects (generate plot).","code":""},{"path":"https://rubenfcasal.github.io/npsp/reference/scattersplot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Exploratory scatter plots — scattersplot","text":"Standard generic function default method, argument x matrix spatial coordinates (row point). scattersplot.SpatialPointsDataFrame sets default values arguments attributes object x (present; see e.g. precipitation).","code":""},{"path":[]},{"path":"https://rubenfcasal.github.io/npsp/reference/simage.html","id":null,"dir":"Reference","previous_headings":"","what":"Image plot with a color scale — simage","title":"Image plot with a color scale — simage","text":"simage (generic function) draws image (grid colored rectangles) (optionally) adds legend strip color scale (calls splot image). plot.np.den calls simage.data.grid (contour points also default).","code":""},{"path":"https://rubenfcasal.github.io/npsp/reference/simage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Image plot with a color scale — simage","text":"","code":"simage(x, ...)  # Default S3 method simage(   x = seq(0, 1, len = nrow(s)),   y = seq(0, 1, len = ncol(s)),   s,   slim = range(s, finite = TRUE),   col = jet.colors(128),   breaks = NULL,   legend = TRUE,   horizontal = FALSE,   legend.shrink = 1,   legend.width = 1.2,   legend.mar = ifelse(horizontal, 3.1, 5.1),   legend.lab = NULL,   bigplot = NULL,   smallplot = NULL,   lab.breaks = NULL,   axis.args = NULL,   legend.args = NULL,   reset = TRUE,   xlab = NULL,   ylab = NULL,   asp = NA,   ... )  # S3 method for class 'data.grid' simage(x, data.ind = 1, xlab = NULL, ylab = NULL, ...)  # S3 method for class 'np.den' plot(   x,   y = NULL,   log = TRUE,   contour = TRUE,   points = TRUE,   col = hot.colors(128),   tolerance = npsp.tolerance(),   reset = TRUE,   ... )"},{"path":"https://rubenfcasal.github.io/npsp/reference/simage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Image plot with a color scale — simage","text":"x grid values x coordinate. x list, components x$x x$y used x y, respectively. compatibility image, list component z used s. ... additional graphical parameters (passed image simage.default; e.g. xlim, ylim, ...). NOTE: graphical arguments passed impact main plot. change graphical defaults legend use par function beforehand (e.g. par(cex.lab = 2) increase colorbar labels). y grid values y coordinate. s matrix containing values used coloring rectangles (NAs allowed). Note x can used instead s convenience. slim limits used set color scale. col color table used set color scale (see image details). breaks (optional) numeric vector breakpoints color scale: must one breakpoint col increasing order. legend logical; TRUE (default), plotting region splitted two parts, drawing image plot one legend color scale . FALSE image plot drawn arguments related legend ignored (splot called). horizontal logical; FALSE (default) legend vertical strip right side. TRUE legend strip along bottom. legend.shrink amount shrink size legend relative full height width plot. legend.width width characters legend strip. Default 1.2, little bigger width character. legend.mar width characters legend margin axis. Default 5.1 vertical legend 3.1 horizontal legend. legend.lab label axis color legend. Default label usual evident plot title. bigplot plot coordinates main plot. passed determined within function. smallplot plot coordinates legend strip. passed determined within function. lab.breaks breaks supplied text string labels put break value. intended label axis transformed scale logs. axis.args additional arguments axis function used create legend axis (see image.plot details). legend.args arguments complete specification legend label. form list just passed mtext function. Usually needed (see image.plot details). reset logical; FALSE plotting region (par(\"plt\")) reset make possible add features plot (e.g. using functions points lines). TRUE (default) plot parameters reset values entering function. xlab label x axis, defaults description x. ylab label y axis, defaults description y. asp y/x aspect ratio, see plot.window. data.ind integer (character) index (name) component containing values used coloring rectangles. log logical; TRUE (default), log(x$est) ploted. contour logical; TRUE (default), contour lines added. points logical; TRUE (default), points x$data$x drawn. tolerance tolerance value (lower values masked).","code":""},{"path":"https://rubenfcasal.github.io/npsp/reference/simage.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Image plot with a color scale — simage","text":"Invisibly returns list following 3 components: bigplot plot coordinates main plot. values may useful drawing plot without legend size plots legends. smallplot plot coordinates secondary plot (legend strip). old.par previous graphical parameters (par(old.par) reset plot parameters values entering function).","code":""},{"path":"https://rubenfcasal.github.io/npsp/reference/simage.html","id":"side-effects","dir":"Reference","previous_headings":"","what":"Side Effects","title":"Image plot with a color scale — simage","text":"exiting, plotting region may changed (par(\"plt\")) make possible add features plot (set reset = FALSE avoid ).","code":""},{"path":[]},{"path":"https://rubenfcasal.github.io/npsp/reference/simage.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Image plot with a color scale — simage","text":"Based image.plot function package fields: fields, Tools spatial data. Copyright 2004-2013, Institute Mathematics Applied Geosciences. University Corporation Atmospheric Research. Modified Ruben Fernandez-Casal <rubenfcasal@gmail.com>.","code":""},{"path":"https://rubenfcasal.github.io/npsp/reference/simage.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Image plot with a color scale — simage","text":"","code":"# Regularly spaced 2D data nx <- c(40, 40) # ndata =  prod(nx) x1 <- seq(-1, 1, length.out = nx[1]) x2 <- seq(-1, 1, length.out = nx[2]) trend <- outer(x1, x2, function(x,y) x^2 - y^2)  simage( x1, x2, trend, main = 'Trend')  # Multiple plots  set.seed(1) y <- trend + rnorm(prod(nx), 0, 0.1) x <- as.matrix(expand.grid(x1 = x1, x2 = x2)) # two-dimensional grid # local polynomial kernel regression lp <- locpol(x, y, nbin = nx, h =  diag(c(0.3, 0.3))) # 1x2 plot old.par <- par(mfrow = c(1,2)) simage( x1, x2, y, main = 'Data', reset = FALSE) simage(lp, main = 'Estimated trend', reset = FALSE)  par(old.par)"},{"path":"https://rubenfcasal.github.io/npsp/reference/spersp.html","id":null,"dir":"Reference","previous_headings":"","what":"Perspective plot with a color scale — spersp","title":"Perspective plot with a color scale — spersp","text":"spersp (generic function) draws perspective plot surface x-y plane facets filled different colors (optionally) adds legend strip color scale (calls splot persp).","code":""},{"path":"https://rubenfcasal.github.io/npsp/reference/spersp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perspective plot with a color scale — spersp","text":"","code":"spersp(x, ...)  # Default S3 method spersp(   x = seq(0, 1, len = nrow(z)),   y = seq(0, 1, len = ncol(z)),   z,   s = z,   slim = range(s, finite = TRUE),   col = jet.colors(128),   breaks = NULL,   legend = TRUE,   horizontal = FALSE,   legend.shrink = 0.8,   legend.width = 1.2,   legend.mar = ifelse(horizontal, 3.1, 5.1),   legend.lab = NULL,   bigplot = NULL,   smallplot = NULL,   lab.breaks = NULL,   axis.args = NULL,   legend.args = NULL,   reset = TRUE,   xlab = NULL,   ylab = NULL,   zlab = NULL,   theta = 40,   phi = 20,   ticktype = \"detailed\",   cex.axis = 0.75,   ... )  # S3 method for class 'data.grid' spersp(   x,   data.ind = 1,   s = x[[data.ind]],   xlab = NULL,   ylab = NULL,   zlab = NULL,   ... )"},{"path":"https://rubenfcasal.github.io/npsp/reference/spersp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perspective plot with a color scale — spersp","text":"x grid values x coordinate. x list, components x$x x$y used x y, respectively. list component z used z. ... additional graphical parameters (passed persp spersp.default; e.g. xlim, ylim, zlim, ...). NOTE: graphical arguments passed impact main plot. change graphical defaults legend use par function beforehand (e.g. par(cex.lab = 2) increase colorbar labels). y grid values y coordinate. z matrix containing values plotted (NAs allowed). Note x can used instead z convenience. s matrix containing values used coloring facets. slim limits used set color scale. col color table used set color scale (see image details). breaks (optional) numeric vector breakpoints color scale: must one breakpoint col increasing order. legend logical; TRUE (default), plotting region splitted two parts, drawing perspective plot one legend color scale . FALSE (coloured) perspective plot drawn arguments related legend ignored (splot called). horizontal logical; FALSE (default) legend vertical strip right side. TRUE legend strip along bottom. legend.shrink amount shrink size legend relative full height width plot. legend.width width characters legend strip. Default 1.2, little bigger width character. legend.mar width characters legend margin axis. Default 5.1 vertical legend 3.1 horizontal legend. legend.lab label axis color legend. Default label usual evident plot title. bigplot plot coordinates main plot. passed determined within function. smallplot plot coordinates legend strip. passed determined within function. lab.breaks breaks supplied text string labels put break value. intended label axis transformed scale logs. axis.args additional arguments axis function used create legend axis (see image.plot details). legend.args arguments complete specification legend label. form list just passed mtext function. Usually needed (see image.plot details). reset logical; FALSE plotting region (par(\"plt\")) reset make possible add features plot (e.g. using functions points lines). TRUE (default) plot parameters reset values entering function. xlab label x axis, defaults description x. ylab label y axis, defaults description y. zlab label z axis, defaults description z. theta x-y rotation angle perspective (azimuthal direction). phi z-angle perspective (colatitude). ticktype character; \"simple\" draws just arrow parallel axis indicate direction increase; \"detailed\" draws normal ticks per 2D plots. cex.axis magnification used axis annotation (relative current setting par(\"cex\")). data.ind integer (character) index (name) component containing z values plotted.","code":""},{"path":"https://rubenfcasal.github.io/npsp/reference/spersp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perspective plot with a color scale — spersp","text":"Invisibly returns list following 4 components: pm viewing transformation matrix (see persp details), 4 x 4 matrix can used superimpose additional graphical elements using function trans3d. bigplot plot coordinates main plot. values may useful drawing plot without legend size plots legends. smallplot plot coordinates secondary plot (legend strip). old.par previous graphical parameters (par(old.par) reset plot parameters values entering function).","code":""},{"path":"https://rubenfcasal.github.io/npsp/reference/spersp.html","id":"side-effects","dir":"Reference","previous_headings":"","what":"Side Effects","title":"Perspective plot with a color scale — spersp","text":"exiting, plotting region may changed (par(\"plt\")) make possible add features plot (set reset = FALSE avoid ).","code":""},{"path":[]},{"path":"https://rubenfcasal.github.io/npsp/reference/spersp.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Perspective plot with a color scale — spersp","text":"Based image.plot function package fields: fields, Tools spatial data. Copyright 2004-2013, Institute Mathematics Applied Geosciences. University Corporation Atmospheric Research. Modified Ruben Fernandez-Casal <rubenfcasal@gmail.com>.","code":""},{"path":"https://rubenfcasal.github.io/npsp/reference/spersp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perspective plot with a color scale — spersp","text":"","code":"# Regularly spaced 2D data nx <- c(40, 40) # ndata =  prod(nx) x1 <- seq(-1, 1, length.out = nx[1]) x2 <- seq(-1, 1, length.out = nx[2]) trend <- outer(x1, x2, function(x,y) x^2 - y^2)  spersp( x1, x2, trend, main = 'Trend', zlab = 'y')  # Multiple plots  set.seed(1) y <- trend + rnorm(prod(nx), 0, 0.1) x <- as.matrix(expand.grid(x1 = x1, x2 = x2)) # two-dimensional grid # local polynomial kernel regression lp <- locpol(x, y, nbin = nx, h =  diag(c(0.3, 0.3))) # 1x2 plot old.par <- par(mfrow = c(1,2)) spersp( x1, x2, y, main = 'Data', reset = FALSE) spersp(lp, main = 'Estimated trend', zlab = 'y', reset = FALSE)  par(old.par)"},{"path":"https://rubenfcasal.github.io/npsp/reference/splot.html","id":null,"dir":"Reference","previous_headings":"","what":"Utilities for plotting with a color scale — splot","title":"Utilities for plotting with a color scale — splot","text":"splot designed combine standard R plot legend representing (continuous) color scale. done splitting plotting region two parts. Keeping one main chart putting legend . instance, sxxxx functions (spoints, simage spersp) draw corresponding high-level plot (xxxx), calling splot, include legend strip color scale. functions based function image.plot package fields, see documentation additional information. jet.colors hot.colors create color table useful contiguous color scales scolor assigns colors numerical vector.","code":""},{"path":"https://rubenfcasal.github.io/npsp/reference/splot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Utilities for plotting with a color scale — splot","text":"","code":"splot(   slim = c(0, 1),   col = jet.colors(128),   breaks = NULL,   horizontal = FALSE,   legend.shrink = 0.9,   legend.width = 1.2,   legend.mar = ifelse(horizontal, 3.1, 5.1),   legend.lab = NULL,   bigplot = NULL,   smallplot = NULL,   lab.breaks = NULL,   axis.args = NULL,   legend.args = NULL,   add = FALSE )  scolor(s, col = jet.colors(128), slim = range(s, finite = TRUE))  jet.colors(n)  hot.colors(n, rev = TRUE)"},{"path":"https://rubenfcasal.github.io/npsp/reference/splot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Utilities for plotting with a color scale — splot","text":"slim limits used set color scale. col color table used set color scale (see image details). breaks (optional) numeric vector breakpoints color scale: must one breakpoint col increasing order. horizontal logical; FALSE (default) legend vertical strip right side. TRUE legend strip along bottom. legend.shrink amount shrink size legend relative full height width plot. legend.width width characters legend strip. Default 1.2, little bigger width character. legend.mar width characters legend margin axis. Default 5.1 vertical legend 3.1 horizontal legend. legend.lab label axis color legend. Default label usual evident plot title. bigplot plot coordinates main plot. passed determined within function. smallplot plot coordinates legend strip. passed determined within function. lab.breaks breaks supplied text string labels put break value. intended label axis transformed scale logs. axis.args additional arguments axis function used create legend axis (see image.plot details). legend.args arguments complete specification legend label. form list just passed mtext function. Usually needed (see image.plot details). add logical; TRUE legend strip just added existing plot (graphical parameters changed). s values converted color scale. n number colors (>= 1) palette. rev logical; TRUE, palette reversed (decreasing overall luminosity).","code":""},{"path":"https://rubenfcasal.github.io/npsp/reference/splot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Utilities for plotting with a color scale — splot","text":"splot invisibly returns list following 3 components: bigplot plot coordinates main plot. values may useful drawing plot without legend size plots legends. smallplot plot coordinates secondary plot (legend strip). old.par previous graphical parameters (par(old.par) reset plot parameters values entering function). jet.colors hot.colors return character vector colors (similar heat.colors terrain.colors; see rgb).","code":""},{"path":"https://rubenfcasal.github.io/npsp/reference/splot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Utilities for plotting with a color scale — splot","text":"scolor converts real valued vector color scale. range slim divided length(col) + 1 pieces equal length. Values fall outside range scale coded NA. jet.colors generates rainbow style color table similar MATLAB (TM) jet color scheme. may appropriate distinguish values central value (e.g. positive negative values). hot.colors generates color table similar MATLAB (TM) hot color scheme (reversed default). may appropriate represent values ranging 0 maximum level (e.g. density estimation). default value rev = TRUE may adecuate grayscale convertion.","code":""},{"path":"https://rubenfcasal.github.io/npsp/reference/splot.html","id":"side-effects","dir":"Reference","previous_headings":"","what":"Side Effects","title":"Utilities for plotting with a color scale — splot","text":"exiting splot, plotting region may changed (par(\"plt\")) make possible add features plot.","code":""},{"path":[]},{"path":"https://rubenfcasal.github.io/npsp/reference/splot.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Utilities for plotting with a color scale — splot","text":"Based image.plot function package fields: fields, Tools spatial data. Copyright 2004-2013, Institute Mathematics Applied Geosciences. University Corporation Atmospheric Research. Modified Ruben Fernandez-Casal <rubenfcasal@gmail.com>.","code":""},{"path":"https://rubenfcasal.github.io/npsp/reference/splot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Utilities for plotting with a color scale — splot","text":"","code":"# Plot equivalent to spoints(): scale.range <- range(aquifer$head) res <- splot(slim = scale.range) with( aquifer, plot(lon, lat, col = scolor(head, slim = scale.range),         pch = 16, cex = 1.5, main = \"Wolfcamp aquifer data\"))  par(res$old.par) # restore graphical parameters        # Multiple plots with a common legend: # regularly spaced 2D data... set.seed(1) nx <- c(40, 40) # ndata =  prod(nx) x1 <- seq(-1, 1, length.out = nx[1]) x2 <- seq(-1, 1, length.out = nx[2]) trend <- outer(x1, x2, function(x,y) x^2 - y^2) y <- trend + rnorm(prod(nx), 0, 0.1) scale.range <- c(-1.2, 1.2) scale.color <- heat.colors(64) # 1x2 plot with some room for the legend... old.par <- par(mfrow = c(1,2), omd = c(0.05, 0.85, 0.05, 0.95)) image( x1, x2, trend, zlim = scale.range, main = 'Trend', col = scale.color) image( x1, x2, y, zlim = scale.range, main = 'Data', col = scale.color) par(old.par) # the legend can be added to any plot... splot(slim = scale.range, col = scale.color, add = TRUE)  ## note that argument 'zlim' in 'image' corresponds with 'slim' in 'sxxxx' functions."},{"path":"https://rubenfcasal.github.io/npsp/reference/spoints.html","id":null,"dir":"Reference","previous_headings":"","what":"Scatter plot with a color scale — spoints","title":"Scatter plot with a color scale — spoints","text":"spoints (generic function) draws scatter plot points filled different colors (optionally) adds legend strip color scale (calls splot plot.default).","code":""},{"path":"https://rubenfcasal.github.io/npsp/reference/spoints.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scatter plot with a color scale — spoints","text":"","code":"spoints(x, ...)  # Default S3 method spoints(   x,   y = NULL,   s,   slim = range(s, finite = TRUE),   col = jet.colors(128),   breaks = NULL,   legend = TRUE,   horizontal = FALSE,   legend.shrink = 1,   legend.width = 1.2,   legend.mar = ifelse(horizontal, 3.1, 5.1),   legend.lab = NULL,   bigplot = NULL,   smallplot = NULL,   lab.breaks = NULL,   axis.args = NULL,   legend.args = NULL,   add = FALSE,   reset = TRUE,   pch = 16,   cex = 1.5,   xlab = NULL,   ylab = NULL,   asp = NA,   ... )  # S3 method for class 'data.grid' spoints(x, s = x[[1]], xlab = NULL, ylab = NULL, ...)  # S3 method for class 'SpatialPointsDataFrame' spoints(x, data.ind = 1, main, xlab, ylab, legend.lab, ...)"},{"path":"https://rubenfcasal.github.io/npsp/reference/spoints.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Scatter plot with a color scale — spoints","text":"x object used select method. default method, provides x coordinates plot (optionally y coordinates; reasonable way defining coordinates acceptable, see function xy.coords details). ... additional graphical parameters (passed main plot function sxxxx.default; e.g. xlim, ylim, ...). NOTE: graphical arguments passed impact main plot. change graphical defaults legend use par function beforehand (e.g. par(cex.lab = 2) increase colorbar labels). y y coordinates. Alternatively, single argument x can provided. s numerical vector containing values used coloring points. slim limits used set color scale. col color table used set color scale (see image details). breaks (optional) numeric vector breakpoints color scale: must one breakpoint col increasing order. legend logical; TRUE (default), plotting region splitted two parts, drawing main plot one legend color scale . FALSE (coloured) main plot drawn arguments related legend ignored (splot called). horizontal logical; FALSE (default) legend vertical strip right side. TRUE legend strip along bottom. legend.shrink amount shrink size legend relative full height width plot. legend.width width characters legend strip. Default 1.2, little bigger width character. legend.mar width characters legend margin axis. Default 5.1 vertical legend 3.1 horizontal legend. legend.lab label axis color legend. Default label usual evident plot title. bigplot plot coordinates main plot. passed, legend TRUE, determined within function. smallplot plot coordinates legend strip. passed, legend TRUE, determined within function. lab.breaks breaks supplied text string labels put break value. intended label axis transformed scale logs. axis.args additional arguments axis function used create legend axis (see image.plot details). legend.args arguments complete specification legend label. form list just passed mtext function. Usually needed (see image.plot details). add logical; TRUE scatter plot just added existing plot. reset logical; FALSE plotting region (par(\"plt\")) reset make possible add features plot (e.g. using functions points lines). TRUE (default) plot parameters reset values entering function. pch vector plotting characters symbols: see points. cex numerical vector giving amount plotting characters symbols scaled relative default. works multiple par(\"cex\"). xlab label x axis, defaults description x. ylab label y axis, defaults description y. asp y/x aspect ratio, see plot.window. data.ind integer (character) index (name) data component. main overall title plot.","code":""},{"path":"https://rubenfcasal.github.io/npsp/reference/spoints.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Scatter plot with a color scale — spoints","text":"Invisibly returns list following 3 components: bigplot plot coordinates main plot. values may useful drawing plot without legend size plots legends. smallplot plot coordinates secondary plot (legend strip). old.par previous graphical parameters (par(old.par) reset plot parameters values entering function).","code":""},{"path":"https://rubenfcasal.github.io/npsp/reference/spoints.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Scatter plot with a color scale — spoints","text":"spoints.SpatialPointsDataFrame sets default values arguments attributes object x (present; see e.g. precipitation).","code":""},{"path":"https://rubenfcasal.github.io/npsp/reference/spoints.html","id":"side-effects","dir":"Reference","previous_headings":"","what":"Side Effects","title":"Scatter plot with a color scale — spoints","text":"exiting, plotting region may changed (par(\"plt\")) make possible add features plot (set reset = FALSE avoid ).","code":""},{"path":[]},{"path":"https://rubenfcasal.github.io/npsp/reference/spoints.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Scatter plot with a color scale — spoints","text":"Based image.plot function package fields: fields, Tools spatial data. Copyright 2004-2013, Institute Mathematics Applied Geosciences. University Corporation Atmospheric Research. Modified Ruben Fernandez-Casal <rubenfcasal@gmail.com>.","code":""},{"path":"https://rubenfcasal.github.io/npsp/reference/spoints.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Scatter plot with a color scale — spoints","text":"","code":"with( aquifer, spoints(lon, lat, head, main = \"Wolfcamp aquifer data\"))"},{"path":"https://rubenfcasal.github.io/npsp/reference/sv.html","id":null,"dir":"Reference","previous_headings":"","what":"Evaluate a semivariogram model — sv","title":"Evaluate a semivariogram model — sv","text":"Evaluates svarmod object x lags h (S3 generic function).","code":""},{"path":"https://rubenfcasal.github.io/npsp/reference/sv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Evaluate a semivariogram model — sv","text":"","code":"sv(x, h, ...)  # Default S3 method sv(x, h, ...)  # S3 method for class 'svarmod' sv(x, h, ...)  # S3 method for class 'svar.grid' sv(x, h, ...)  # S3 method for class 'sb.iso' sv(x, h, discretize = FALSE, ...)"},{"path":"https://rubenfcasal.github.io/npsp/reference/sv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Evaluate a semivariogram model — sv","text":"x variogram model (svarmod object). h vector (isotropic case) matrix lag values. ... arguments passed methods. discretize logical. TRUE variogram previously discretized.","code":""},{"path":"https://rubenfcasal.github.io/npsp/reference/sv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Evaluate a semivariogram model — sv","text":"vector semivariance values \\(\\gamma(h_i)\\).","code":""},{"path":[]},{"path":"https://rubenfcasal.github.io/npsp/reference/svar.bin.html","id":null,"dir":"Reference","previous_headings":"","what":"Linear binning of semivariances — svar.bin","title":"Linear binning of semivariances — svar.bin","text":"Creates svar.bin (binned semivar. + grid parameters) object linearly binned semivariances (.e. computes binned sample variogram).","code":""},{"path":"https://rubenfcasal.github.io/npsp/reference/svar.bin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Linear binning of semivariances — svar.bin","text":"","code":"svar.bin(x, ...)  # Default S3 method svar.bin(   x,   y,   maxlag = NULL,   nlags = NULL,   minlag = maxlag/nlags,   estimator = c(\"classical\", \"modulus\"),   ... )  svariso(   x,   y,   maxlag = NULL,   nlags = NULL,   minlag = maxlag/nlags,   estimator = c(\"classical\", \"modulus\"),   ... )"},{"path":"https://rubenfcasal.github.io/npsp/reference/svar.bin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Linear binning of semivariances — svar.bin","text":"x object used select method. Usually matrix coordinates data locations (columns correspond dimensions rows data). ... arguments passed methods. y vector data (response variable). maxlag maximum lag. Defaults 55% largest lag. nlags number lags. Defaults max(12, rule.svar(x)). minlag minimun lag. estimator character, estimator name (e.g. \"classical\"). See \"Details\" .","code":""},{"path":"https://rubenfcasal.github.io/npsp/reference/svar.bin.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Linear binning of semivariances — svar.bin","text":"Returns S3 object class svar.bin (extends bin.data),    data.grid object following 4 components: biny array (dimension nlags) binned semivariances. binw array (dimension nlags) bin counts (weights). grid grid.par-class object grid parameters. data list 3 components: x argument x. y argument y. med (weighted) mean (binned) semivariances. svar list 2 components: type character, type estimation (e.g. \"isotropic\"). estimator character, estimator name (e.g. \"classical\").","code":""},{"path":"https://rubenfcasal.github.io/npsp/reference/svar.bin.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Linear binning of semivariances — svar.bin","text":"Currently, isotropic semivariogram estimation supported. parameter nlags specified set max(12, rule.svar(x)).","code":""},{"path":[]},{"path":"https://rubenfcasal.github.io/npsp/reference/svar.grid.html","id":null,"dir":"Reference","previous_headings":"","what":"Discretize a (semi)variogram model — svar.grid","title":"Discretize a (semi)variogram model — svar.grid","text":"Discretizes variogram model (speed variogram evaluation). Constructor function svar.grid-class.","code":""},{"path":"https://rubenfcasal.github.io/npsp/reference/svar.grid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Discretize a (semi)variogram model — svar.grid","text":"","code":"svar.grid(svar, log = TRUE, ...)  # S3 method for class 'svarmod' svar.grid(   svar,   log = TRUE,   n = 256,   min = 10 * .Machine$double.eps,   max = 1.1 * svar$range,   ... )"},{"path":"https://rubenfcasal.github.io/npsp/reference/svar.grid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Discretize a (semi)variogram model — svar.grid","text":"svar (fitted) variogram model (svarmod fitsvar object). log logical. TRUE, variogram discretized  (base 2) logarithmic scale. ... arguments passed methods. n number lags. Defaults 256. min minimun lag. Defaults 10*.Machine$double.eps. max maximum lag. Defaults 1.1*svar$range.","code":""},{"path":"https://rubenfcasal.github.io/npsp/reference/svar.grid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Discretize a (semi)variogram model — svar.grid","text":"svar.grid-class object extending svarmod, bin.den data.grid classes.","code":""},{"path":[]},{"path":"https://rubenfcasal.github.io/npsp/reference/svar.plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot a semivariogram object — svar.plot","title":"Plot a semivariogram object — svar.plot","text":"Utilities plotting pilot semivariograms fitted models. plot.fitsvar plots fitted variogram model. plot.svar.bin plots binned semivariances. plot.np.svar plots local polynomial estimate semivariogram.","code":""},{"path":"https://rubenfcasal.github.io/npsp/reference/svar.plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot a semivariogram object — svar.plot","text":"","code":"# S3 method for class 'fitsvar' plot(   x,   y = NULL,   legend = TRUE,   xlab = \"distance\",   ylab = \"semivariance\",   xlim = NULL,   ylim = c(0, 1.25 * max(x$fit$sv, na.rm = TRUE)),   lwd = c(1, 2),   add = FALSE,   ... )  # S3 method for class 'svar.bin' plot(   x,   y = NULL,   xlab = \"distance\",   ylab = \"semivariance\",   xlim = NULL,   ylim = c(0, max(x$biny, na.rm = TRUE)),   add = FALSE,   ... )  # S3 method for class 'np.svar' plot(   x,   y = NULL,   xlab = \"distance\",   ylab = \"semivariance\",   xlim = NULL,   ylim = c(0, max(x$biny, na.rm = TRUE)),   add = FALSE,   ... )"},{"path":"https://rubenfcasal.github.io/npsp/reference/svar.plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot a semivariogram object — svar.plot","text":"x variogram object. Typically output functions np.svariso fitsvar.sb.iso. y ignored argument. legend logical; TRUE (default), legend added plot. xlab label x axis (defaults \"distance\"). ylab label y axis (defaults \"semivariance\"). xlim x-limits. ylim y-limits. lwd line widths points (estimates) lines (fitted model) respectively. add logical; TRUE semivariogram plot just added existing plot. ... additional graphical parameters (see par).","code":""},{"path":"https://rubenfcasal.github.io/npsp/reference/svar.plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot a semivariogram object — svar.plot","text":"return value, called side effects (generate plot).","code":""},{"path":[]},{"path":"https://rubenfcasal.github.io/npsp/reference/svarmod.html","id":null,"dir":"Reference","previous_headings":"","what":"Define a (semi)variogram model — svarmod","title":"Define a (semi)variogram model — svarmod","text":"Defines variogram model specifying parameter values. Constructor function svarmod-class.","code":""},{"path":"https://rubenfcasal.github.io/npsp/reference/svarmod.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Define a (semi)variogram model — svarmod","text":"","code":"svarmod(   model,   type = \"isotropic\",   par,   nugget = NULL,   sill = NULL,   range = NULL )  svarmod.sb.iso(dk, x, z, nu, range, sill = nu)  svarmodels(type = \"isotropic\")"},{"path":"https://rubenfcasal.github.io/npsp/reference/svarmod.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Define a (semi)variogram model — svarmod","text":"model string indicating variogram family (see Details ). type string indicating type variogram, e.g. \"isotropic\". par vector variogram parameters. nugget nugget value \\(c_0\\). sill variance \\(\\sigma^2\\) sill variogram (NA unbounded variograms). range range (practical range scale parameter) variogram (NA unbounded variograms; maybe vector anisotropic variograms). dk dimension kappa function. x discretization nodes. z jumps (spectral distibution) discretization nodes. nu parameter \\(\\nu_0\\) (can thought sill).","code":""},{"path":"https://rubenfcasal.github.io/npsp/reference/svarmod.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Define a (semi)variogram model — svarmod","text":"svarmod returns svarmod-class object, list function arguments components. svarmod.sb.iso returns S3 object class sb.iso (extends svarmod) corresponding `nonparametric' isotropic Shapiro-Botha model. svarmodels returns named character vector available models corresponding type (appropriate, component values used cov.model argument geoR routines  component names model argument gstat routines).","code":""},{"path":"https://rubenfcasal.github.io/npsp/reference/svarmod.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Define a (semi)variogram model — svarmod","text":"svarmod check consistency parameter values.","code":""},{"path":"https://rubenfcasal.github.io/npsp/reference/svarmod.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Define a (semi)variogram model — svarmod","text":"Shapiro, . Botha, J.D. (1991) Variogram fitting general class   conditionally non-negative definite functions. Computational Statistics   Data Analysis, 11, 87-96.","code":""},{"path":[]},{"path":"https://rubenfcasal.github.io/npsp/reference/varcov.html","id":null,"dir":"Reference","previous_headings":"","what":"Covariance matrix — varcov","title":"Covariance matrix — varcov","text":"Computes covariance matrix corresponding set spatial locations given variogram model semivariogram estimate.","code":""},{"path":"https://rubenfcasal.github.io/npsp/reference/varcov.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Covariance matrix — varcov","text":"","code":"varcov(x, coords, ...)  # S3 method for class 'isotropic' varcov(   x,   coords,   sill = x$sill,   range.taper,   discretize = nrow(coords) > 256,   ... )  # S3 method for class 'np.svar' varcov(x, coords, sill = max(x$est), range.taper = x$grid$max, ...)"},{"path":"https://rubenfcasal.github.io/npsp/reference/varcov.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Covariance matrix — varcov","text":"x variogram model (svarmod object) semivariogram estimate. coords matrix coordinates (columns correspond dimensions rows data). ... arguments passed methods. sill (theoretical estimated) variance \\(C(0) = \\sigma^2\\) pseudo-sill (unbounded variograms). range.taper (optional) provided, covariances corresponding distances larger value set 0. discretize logical. TRUE (default), variogram (previously) discretized.","code":""},{"path":"https://rubenfcasal.github.io/npsp/reference/varcov.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Covariance matrix — varcov","text":"covariance matrix data.","code":""},{"path":[]},{"path":"https://rubenfcasal.github.io/npsp/news/index.html","id":"npsp-07-14-2024-07-09","dir":"Changelog","previous_headings":"","what":"npsp 0.7-14 (2024-07-09)","title":"npsp 0.7-14 (2024-07-09)","text":"Added type argument bin.den() allows computation simple binning weights. Added type argument binning() locpol.default()`, allows computation simple binning weights averages.","code":""},{"path":"https://rubenfcasal.github.io/npsp/news/index.html","id":"npsp-07-13-2024-02-17","dir":"Changelog","previous_headings":"","what":"npsp 0.7-13 (2024-02-17)","title":"npsp 0.7-13 (2024-02-17)","text":"Added useRaster = (dim(x) > dev.size(\"px\")) argument image() (simage()) methods gridded data. Small changes scr/tql2.f90 (preliminary translation Fortran 90 former scr/tql2.f).","code":""},{"path":"https://rubenfcasal.github.io/npsp/news/index.html","id":"npsp-07-12-2023-06-20","dir":"Changelog","previous_headings":"","what":"npsp 0.7-12 (2023-06-20)","title":"npsp 0.7-12 (2023-06-20)","text":"Minor changes locpol() S3 methods (bin.data, bin.den svar.bin classes) result extends class main argument (previously assumed fixed). Small changes FORTRAN routine besselzeros() (DFLOAT replaced standard DBLE; CRAN requirement).","code":""},{"path":"https://rubenfcasal.github.io/npsp/news/index.html","id":"npsp-07-11-2023-05-01","dir":"Changelog","previous_headings":"","what":"npsp 0.7-11 (2023-05-01)","title":"npsp 0.7-11 (2023-05-01)","text":"Added intermediate argument np.svariso.corr() allows return intermediate computations $kriging output component (calculations can reused, e.g. bootstrap). Added verbose argument np.svariso.corr() avoid writing info messages console (can disabled even plot = TRUE). Improved documentation splot().","code":""},{"path":"https://rubenfcasal.github.io/npsp/news/index.html","id":"npsp-07-10-2023-04-22","dir":"Changelog","previous_headings":"","what":"npsp 0.7-10 (2023-04-22)","title":"npsp 0.7-10 (2023-04-22)","text":"Changes h.cv.bin.data() objective == \"GCV\" adapt heteroscedastic case. Warning: may differences selected bandwidths older versions. Changes simage(), spersp() spoints(): former argument graphics.reset renamed reset, changed default value TRUE (restore user’s graphical options).","code":""},{"path":"https://rubenfcasal.github.io/npsp/news/index.html","id":"npsp-07-9-2021-05-17","dir":"Changelog","previous_headings":"","what":"npsp 0.7-9 (2021-05-17)","title":"npsp 0.7-9 (2021-05-17)","text":"Added references description field ‘DESCRIPTION’ file. Avoided use options(warn=-1) h.cv() methods (CRAN requirement). Added .exit(par(old.par)) plot.fitgeo() scattersplot.default() make sure user’s options changed (CRAN suggestion). Improvements documentation (added return values, added examples npden(), removed \\dontrun{} use commented code lines examples…).","code":""},{"path":"https://rubenfcasal.github.io/npsp/news/index.html","id":"npsp-07-8-2021-05-10","dir":"Changelog","previous_headings":"","what":"npsp 0.7-8 (2021-05-10)","title":"npsp 0.7-8 (2021-05-10)","text":"Renamed admissible values lost parameter h.cv.svar.bin() np.svariso.hcv(). Changed ‘NEWS.md’ formatting suppressed default addition CRAN release dates (pkgdown). Updated ‘npsp.Rmd’ vignette.","code":""},{"path":"https://rubenfcasal.github.io/npsp/news/index.html","id":"npsp-07-7-2020-12-12","dir":"Changelog","previous_headings":"","what":"npsp 0.7-7 (2020-12-12)","title":"npsp 0.7-7 (2020-12-12)","text":"Added mask.window component data.grid class. Added new window parameter data.grid(), bining(), np.fitgeo.default() mask() methods. Minor changes FORTRAN code (avoid rank mismatch ‘dsytrfi.f90’, flagged error gfortran 10; CRAN policy requirement).","code":""},{"path":"https://rubenfcasal.github.io/npsp/news/index.html","id":"npsp-07-6-2019-07-10","dir":"Changelog","previous_headings":"","what":"npsp 0.7-6 (2019-07-10)","title":"npsp 0.7-6 (2019-07-10)","text":"Added parameter xlim = NULL variogram plot methods (plot.fitsvar(), plot.svar.bin() plot.np.svar()). np.kriging() methods now recompute residuals (ngrid != object$grid$n)).","code":""},{"path":"https://rubenfcasal.github.io/npsp/news/index.html","id":"npsp-07-5-2019-06-29","dir":"Changelog","previous_headings":"","what":"npsp 0.7-5 (2019-06-29)","title":"npsp 0.7-5 (2019-06-29)","text":"Updated np.fitgeo() S3 methods. Changes ‘Makevars’ remove module files created Fortran compilation. Fixed bug h.cv.bin.data() (match.arg(objective)). ‘README.md’ now generated ‘README.Rmd’. Updated roxygen documentation avoid warnings.","code":""},{"path":"https://rubenfcasal.github.io/npsp/news/index.html","id":"npsp-07-4-2019-06-15","dir":"Changelog","previous_headings":"","what":"npsp 0.7-4 (2019-06-15)","title":"npsp 0.7-4 (2019-06-15)","text":"kriging.np() methods renamed np.kriging() (consistency). Minor changes FORTRAN code (related error(, label) function, avoid LTO warnings gcc9, detect Fortran optional arguments). Changes pkgdown documentation (‘NEWS.Rmd’, ‘README.Rmd’…). Changes ‘npsp.Rmd’ vignette.","code":""},{"path":"https://rubenfcasal.github.io/npsp/news/index.html","id":"npsp-07-3-2018-11-10","dir":"Changelog","previous_headings":"","what":"npsp 0.7-3 (2018-11-10)","title":"npsp 0.7-3 (2018-11-10)","text":"Added .data.grid() S3 generic .data.grid.SpatialGridDataFrame() method. Added .bin.data.SpatialGridDataFrame() S3 method. Added parameter corr.svar np.fitgeo() S3 methods. Added parameter asp = NA spoints() simage() methods.","code":""},{"path":"https://rubenfcasal.github.io/npsp/news/index.html","id":"npsp-07-2-2018-02-15","dir":"Changelog","previous_headings":"","what":"npsp 0.7-2 (2018-02-15)","title":"npsp 0.7-2 (2018-02-15)","text":"Changed default value discretize = nrow(coords) > 256 varcov.isotropic(). Added parameter optional .data.frame.data.grid() (S3 compatibility). Changes svar.grid() S3-methods: Removed S3-method svar.grid.fitsvar(). Changed default value n = 256 svar.grid.svarmod(). Changes sv() S3-methods: sv.svarmod() sv.sb.iso(). Updated roxygen2 documentation “data.grid.R”, “np.svar.R” “svar.grid”.","code":""},{"path":"https://rubenfcasal.github.io/npsp/news/index.html","id":"npsp-07-1-2018-02-15","dir":"Changelog","previous_headings":"","what":"npsp 0.7-1 (2018-02-15)","title":"npsp 0.7-1 (2018-02-15)","text":"Changes kriging.np: S3 generic function. kriging.np renamed kriging.np.default. Added kriging.np.np.geo S3 method. Added ngrid parameter. Added residuals.np.geo() plot.fitgeo() S3 methods. Changes np.fitgeo() S3 methods. Updated (roxygen2) documentation “npsp-package.R”. “npsp-plot.R” renamed “svar.plot.R”.","code":""},{"path":"https://rubenfcasal.github.io/npsp/news/index.html","id":"npsp-07-0-2018-02-10","dir":"Changelog","previous_headings":"","what":"npsp 0.7-0 (2018-02-10)","title":"npsp 0.7-0 (2018-02-10)","text":"Added np.geo S3 class (nonparametric geostatistical model), constructor function methods. Added plot() S3 method np.geo class. Added residuals() S3 method np.geo class. Added np.fitgeo() S3 generic function methods (np.fitgeo.default, np.fitgeo.locpol.bin np.fitgeo.np.geo). Fixed bug np.svariso.hcv() (calls h.cv.svar.bin() instead h.cv.bin.data(); thanks Tomas Cotos-Yañez).","code":""},{"path":"https://rubenfcasal.github.io/npsp/news/index.html","id":"npsp-06-2-2017-09-24","dir":"Changelog","previous_headings":"","what":"npsp 0.6-2 (2017-09-24)","title":"npsp 0.6-2 (2017-09-24)","text":"Added website package (pkgdown). Added ‘NEWS.md’ ’_pkgdown.yml’. Added vignettes (pkgdown articles): “npsp.Rmd”, “precipitation.Rmd”, “krigstat.Rmd”, “docs/aquifer.Rmd”, “docs/Introduccion.Rmd”.","code":""},{"path":"https://rubenfcasal.github.io/npsp/news/index.html","id":"npsp-06-1-2017-06-16","dir":"Changelog","previous_headings":"","what":"npsp 0.6-1 (2017-06-16)","title":"npsp 0.6-1 (2017-06-16)","text":"Added scattersplot() S3 generic function (methods). Added () support sp classes. Added spoints() scattersplot() methods objects class SpatialPointsDataFrame. Added .sp() generic function. Added .sp.grid.par() .sp.data.grid() methods. Added precipitation data set. Added .data.frame.data.grid() S3 method.","code":""},{"path":"https://rubenfcasal.github.io/npsp/news/index.html","id":"npsp-06-0-2017-05-29","dir":"Changelog","previous_headings":"","what":"npsp 0.6-0 (2017-05-29)","title":"npsp 0.6-0 (2017-05-29)","text":"Added kriging.np() kriging.simple() functions. Added kriging.simple.solve() internal function. Methods .spam(), chol.spam() solve.spam() imported package spam. Added .DPOSV_R() interface LAPACK routine DPOSV. Minor changes plot.fitsvar() (lwd parameter passed lines() add = TRUE). Added registration ‘native routines’ (.Fortran calls). Added ‘src/init.c’ @useDynLib npsp, .registration = TRUE. Fortran routine binning renamed binning_r. Updated ‘README.md’.","code":""},{"path":"https://rubenfcasal.github.io/npsp/news/index.html","id":"npsp-05-5-2017-05-21","dir":"Changelog","previous_headings":"","what":"npsp 0.5-5 (2017-05-21)","title":"npsp 0.5-5 (2017-05-21)","text":"Added svar.grid() S3 class (discretized semivariogram), generic function (constructor) methods. Added svar.grid.fitsvar() svar.grid.svarmod() methods. Added sv() plot() S3 methods svar.grid class. Major changes varcov.isotropic(). Returns 0 h < .Machine$double.eps. Added discretize parameter (TRUE, default value, variogram previously discretized). Minor changes covar.svarmod(). Added discretize parameter (TRUE variogram discretized first step). Added plot() S3 method svarmod class.","code":""},{"path":"https://rubenfcasal.github.io/npsp/news/index.html","id":"npsp-05-4-2017-05-19","dir":"Changelog","previous_headings":"","what":"npsp 0.5-4 (2017-05-19)","title":"npsp 0.5-4 (2017-05-19)","text":"Minor changes covar.svarmod() (argument ... passed sv()). fitsvar.sb.iso returns additional components ($fit$w $esv). Added .DNRM2_R() internal function (interface BLAS routine DNRM2). Minor changes FORTRAN code (avoid warnings obsolescent features: tql2.f, lp_module.f90). Fixed bug mask.bin.data() mask.locpol.bin() (warn = FALSE, now changed filter.lp). Fixed bug FORTRAN function KTW(u) (normalizing constant; thanks Tomas Cotos-Yañez).","code":""},{"path":"https://rubenfcasal.github.io/npsp/news/index.html","id":"npsp-05-3-2016-09-28","dir":"Changelog","previous_headings":"","what":"npsp 0.5-3 (2016-09-28)","title":"npsp 0.5-3 (2016-09-28)","text":"Added ‘README.md’ Changes FORTRAN code avoid warnings compiling -Wall -pedantic Changed default value legend.shrink 1.0 simage.default() spoints.default. Fixed bug spoints.default (add = TRUE).","code":""},{"path":"https://rubenfcasal.github.io/npsp/news/index.html","id":"npsp-05-2-2016-07-01","dir":"Changelog","previous_headings":"","what":"npsp 0.5-2 (2016-07-01)","title":"npsp 0.5-2 (2016-07-01)","text":"Minor changes .bin.data.data.grid(). Added .bin.data.bin.data(), .bin.den.bin.den() .bin.den.data.grid() methods. Removed .bin.den.bin.data() (bin.den method now used).","code":""},{"path":"https://rubenfcasal.github.io/npsp/news/index.html","id":"npsp-05-1-2016-02-12","dir":"Changelog","previous_headings":"","what":"npsp 0.5-1 (2016-02-12)","title":"npsp 0.5-1 (2016-02-12)","text":"Added h.cv.svar.bin() (.wloss() internal function). Minor changes h.cv.bin.den(). Minor changes h.cv.bin.data() hcv.data() related warning handling (default value warn parameter also changed TRUE). Changed default value ncv parameter h.cv.bin.data() h.cv.bin.den() (ncv = 2 objective ==CV``). Fixed bug np.svariso.corr (due extrapolations approx()). Changes conform new CRAN policy (IMPORTS).","code":""},{"path":"https://rubenfcasal.github.io/npsp/news/index.html","id":"npsp-05-0-2015-12-01","dir":"Changelog","previous_headings":"","what":"npsp 0.5-0 (2015-12-01)","title":"npsp 0.5-0 (2015-12-01)","text":"Major changes h.cv.bin.data(). Improved binning approximations auxiliary quantities. Argument cov.bin also admits semivariogram model Approximate computation covariance matrix binned data (added .compute.masked() internal function). Changes hcv.data(). Argument cov renamed cov.dat, also admits semivariogram model. Improved computations objective = 'MASE'. Minor changes fortran code (routine lp lp_module.f90 masks binning nodes bin%w() < 0). File ‘inst/CHANGES’ renamed ‘ChangeLog’.","code":""},{"path":"https://rubenfcasal.github.io/npsp/news/index.html","id":"npsp-04-1-2015-07-08","dir":"Changelog","previous_headings":"","what":"npsp 0.4-1 (2015-07-08)","title":"npsp 0.4-1 (2015-07-08)","text":"Added npsp.tolerance(). Added mask() S3 generic function methods (mask.default, mask.bin.den, mask.bin.data mask.locpol.bin). Minor changes coords.data.grid() (new parameter masked, defaults FALSE). Minor changes predict.locpol.bin() (!.null(object$mask) …). Added predict.np.den().","code":""},{"path":"https://rubenfcasal.github.io/npsp/news/index.html","id":"npsp-04-0-2015-03-24","dir":"Changelog","previous_headings":"","what":"npsp 0.4-0 (2015-03-24)","title":"npsp 0.4-0 (2015-03-24)","text":"Changes fitsvar.sb.iso() solve non-strictly convex quadratic programs (avoid rounding errors solve.QP, constraints might hold exactly…). Minor changes disc.sb() (computation discretization nodes dk = 0). Added rule() rule.binning() default S3 method (.rice.rule()). Changed default value nbin parameter binning(), bin.den() locpol.default(). Added rule.svar() S3 methods. Changed default value nlags parameter svar.bin.","code":""},{"path":"https://rubenfcasal.github.io/npsp/news/index.html","id":"npsp-03-7-2014-11-28","dir":"Changelog","previous_headings":"","what":"npsp 0.3-7 (2014-11-28)","title":"npsp 0.3-7 (2014-11-28)","text":"Minor changes h.cv.bin.data hcv.data (improved computations). Minor changes spoints.default (xlab ylab default values). Minor changes spersp.default (allow non matrix argument s appropriate length). Changes .variogram.np.svar (equivalent number contributions).","code":""},{"path":"https://rubenfcasal.github.io/npsp/news/index.html","id":"npsp-03-6-2014-10-16","dir":"Changelog","previous_headings":"","what":"npsp 0.3-6 (2014-10-16)","title":"npsp 0.3-6 (2014-10-16)","text":"Changes h.cv.bin.data hcv.data (improved computations, warn parameter added, …). Changed default value hat.bin argument TRUE locpol.svar.bin, np.svar, np.svariso np.svariso.corr (allow computation approximated estimation variances - fitsvar.sb.iso). Changes fitsvar.sb.iso() (min.contrib, gstat -> linear method, …).","code":""},{"path":"https://rubenfcasal.github.io/npsp/news/index.html","id":"npsp-03-5-2014-08-10","dir":"Changelog","previous_headings":"","what":"npsp 0.3-5 (2014-08-10)","title":"npsp 0.3-5 (2014-08-10)","text":"Added plot() S3 methods svar.bin np.svar classes. Updated demos aquifer variogram. simage.default() calls box() avoid overplotting axis lines. Minor changes FORTRAN routines set_bin_den, set_grid_bin (‘grid_module.f90’) lp (‘lp_module.f90’) avoid problems large covariate/coordinate values. Warning: may differences estimates computed older versions. Minor changes FORTRAN routine predict_locpol_bin (‘lp_module.f90’) allow extrapolations (e.g. near grid border).","code":""},{"path":"https://rubenfcasal.github.io/npsp/news/index.html","id":"npsp-03-4-2014-05-05","dir":"Changelog","previous_headings":"","what":"npsp 0.3-4 (2014-05-05)","title":"npsp 0.3-4 (2014-05-05)","text":"Minor changes fitsvar.sb.iso, now returns object class fitsvar (inherits sb.iso). Added plot() S3 methods np.den fitsvar classes. Added hot.colors() (.rev.colorRampPalette()). Added cpu.time() .cpu.time.ini() (npsp-internals). Updated demo aquifer.","code":""},{"path":"https://rubenfcasal.github.io/npsp/news/index.html","id":"npsp-03-3-2014-04-04","dir":"Changelog","previous_headings":"","what":"npsp 0.3-3 (2014-04-04)","title":"npsp 0.3-3 (2014-04-04)","text":"Added .bin.data generic function. Minor changes spersp.default simage.default allow non matrix arguments (appropriate length) z s respectively. Minor changes FORTRAN routine lp (‘lp_module.f90’) avoid potential problems memory allocation case error (“enough data neighborhoods”).","code":""},{"path":"https://rubenfcasal.github.io/npsp/news/index.html","id":"npsp-03-2-2014-03-24","dir":"Changelog","previous_headings":"","what":"npsp 0.3-2 (2014-03-24)","title":"npsp 0.3-2 (2014-03-24)","text":"Updated demo aquifer (illustrating use np.svariso.corr()). Minor changes bin.data, locpol.bin, svar.bin np.svar allow dim attribute argument y. Minor changes disc.sb() (computation discretization nodes dk = 0). Fixed bug (degree = 0) fortran subroutine lp (lp_module.f90).","code":""},{"path":"https://rubenfcasal.github.io/npsp/news/index.html","id":"npsp-03-1-2014-03-16","dir":"Changelog","previous_headings":"","what":"npsp 0.3-1 (2014-03-16)","title":"npsp 0.3-1 (2014-03-16)","text":"Added splot(), scolor() jet.colors() (utilities plotting color scale). Added spoints(), spersp() simage() S3 generic functions (methods). Added persp() image() S3 methods class data.grid. Changes package demos (depend package fields graphic display). Updated documentation (aquifer, earthquakes, locpol, binning, h.cv, …).","code":""},{"path":"https://rubenfcasal.github.io/npsp/news/index.html","id":"npsp-03-0-2014-03-03","dir":"Changelog","previous_headings":"","what":"npsp 0.3-0 (2014-03-03)","title":"npsp 0.3-0 (2014-03-03)","text":"Added np.svariso.corr() function (nonparametric bias-corrected variogram estimation non-constant trend). Renamed svarisonp() svarisohcv() np.svariso() np.svariso.hcv() respectively. Minor changes np.svariso.hcv(). Improvements computation optimal bandwidth GCV criterion dependent data (h.cv() hcv.data() functions). Updated documentation np.svar, locpol binning.","code":""},{"path":"https://rubenfcasal.github.io/npsp/news/index.html","id":"npsp-02-5-2014-01-20","dir":"Changelog","previous_headings":"","what":"npsp 0.2-5 (2014-01-20)","title":"npsp 0.2-5 (2014-01-20)","text":"Added varcov() S3 generic function (methods). Changes covar() (now S3 generic function). Changes svarmod() svarmod.sb.iso() (type specifies subclass svarmod). Minor bug fixes h.cv() hcv.data() (ensure binning/data hat matrix computation needed).","code":""},{"path":"https://rubenfcasal.github.io/npsp/news/index.html","id":"npsp-02-4-2013-11-01","dir":"Changelog","previous_headings":"","what":"npsp 0.2-4 (2013-11-01)","title":"npsp 0.2-4 (2013-11-01)","text":"Added aquifer package demo. NAMESPACE file now automatically generated roxygen2. Changed dependency package quadprog Depends Imports. Changes Fortran code conform Fortran 90/95 standard (CRAN policy requirement). implementation additional grid types postponed Fortran compilers used CRAN (specially case Mac OS X) support required Fortran 2003 features (mainly type-bound procedures). Added explicit dependencies src/Makevars allow parallel make.","code":""},{"path":"https://rubenfcasal.github.io/npsp/news/index.html","id":"npsp-02-3-2013-10-19","dir":"Changelog","previous_headings":"","what":"npsp 0.2-3 (2013-10-19)","title":"npsp 0.2-3 (2013-10-19)","text":"Changed default value hat.bin argument FALSE locpol predict.locpol.bin. Added default value maxlag argument svar.bin, svariso, np.svar, svarisonp svarisohcv. Changed default value nx argument fitsvar.sb.iso avoid “Error solve.QP(Dmat, dvec, Amat, bvec) : matrix D quadratic function positive definite!”. Updated documentation.","code":""},{"path":"https://rubenfcasal.github.io/npsp/news/index.html","id":"npsp-02-2-2013-10-15","dir":"Changelog","previous_headings":"","what":"npsp 0.2-2 (2013-10-15)","title":"npsp 0.2-2 (2013-10-15)","text":"Added bin.den S3 class methods .bin.den generic function. Added np.den S3 class generic function. Added locpol.bin.den (alias np.den.bin.den) h.cv.bin.den methods. Added earthquakes aquifer data sets. Added dimnames argument grid.par function (constructor class name). Minor changes binning() interp.data.grid().","code":""},{"path":"https://rubenfcasal.github.io/npsp/news/index.html","id":"npsp-02-1-2013-09-12","dir":"Changelog","previous_headings":"","what":"npsp 0.2-1 (2013-09-12)","title":"npsp 0.2-1 (2013-09-12)","text":"Completed package documentation (using roxygen2). Changes svarmod, added svarmodels (svarmod.R). Changes .variomodel .vgm (npsp-geoR.R npsp-gstat.R, interoperability geoR gstat, respectively). minor changes pass (first time) R CMD check without notes warnings (.onLoad -> .onAttach, …).","code":""},{"path":"https://rubenfcasal.github.io/npsp/news/index.html","id":"npsp-02-0-2013-06-25","dir":"Changelog","previous_headings":"","what":"npsp 0.2-0 (2013-06-25)","title":"npsp 0.2-0 (2013-06-25)","text":"Major changes R functions locpol.default, locpol.bin.data svarisonp: Added new option set degree local polynomial used. Added new option compute (partial) derivative estimates. Added option enable/disable binning hat matrix computation. Added option enable/disable data hat matrix computation predict.locpol.bin. Major changes fortran code (lp_module.f90, svar_module.f90, linreg_module.f90): Weighted linear regression allows rank-deficient matrices (DGELSYR fortran routine, modification LAPACK DGELSY). New functionalities (degree, derivatives…) Changes Fortran-R interfaces.","code":""},{"path":"https://rubenfcasal.github.io/npsp/news/index.html","id":"npsp-01-8-2013-04-01","dir":"Changelog","previous_headings":"","what":"npsp 0.1-8 (2013-04-01)","title":"npsp 0.1-8 (2013-04-01)","text":"Added svarmod sb.iso (extends svarmod) S3 classes methods. Added svar() S3 generic covar() functions. Added fitsvar.sb.iso(), kappa.sb() disc.sb() functions. Added .vgm() S3 generic (interoperability gstat).","code":""},{"path":"https://rubenfcasal.github.io/npsp/news/index.html","id":"npsp-01-7-2013-02-19","dir":"Changelog","previous_headings":"","what":"npsp 0.1-7 (2013-02-19)","title":"npsp 0.1-7 (2013-02-19)","text":"Added h.cv.bin() h.cv() functions (EXPERIMENTAL). Changes locpolhcv() svarisohcv(). Changes predict.locpol.bin() (new fortran code).","code":""},{"path":"https://rubenfcasal.github.io/npsp/news/index.html","id":"npsp-01-6-2012-10-24","dir":"Changelog","previous_headings":"","what":"npsp 0.1-6 (2012-10-24)","title":"npsp 0.1-6 (2012-10-24)","text":"Added predict.locpol.bin() S3 generic function interp() (interp.grid.par() interp.data.grid() methods). Changes R-Fortran interfaces (parameters type(grid_bin) :: bin, lp_raw replaces est_bin, …).","code":""},{"path":"https://rubenfcasal.github.io/npsp/news/index.html","id":"npsp-01-5-2012-09-19","dir":"Changelog","previous_headings":"","what":"npsp 0.1-5 (2012-09-19)","title":"npsp 0.1-5 (2012-09-19)","text":"Added hopt.cv(), locpolhcv() svarisohcv() functions (EXPERIMENTAL). Changes FORTRAN R code handle missing values (EXPERIMENTAL) (NAs input & output). binning() standard function (interface fortran routine binning).","code":""},{"path":"https://rubenfcasal.github.io/npsp/news/index.html","id":"npsp-01-4-2012-09-01","dir":"Changelog","previous_headings":"","what":"npsp 0.1-4 (2012-09-01)","title":"npsp 0.1-4 (2012-09-01)","text":"Added svar.bin (extends bin.data), np.svar (extends svar.bin) S3 classes methods. Changes svariso() (returns object class svar.bin, …). Added svarisonp() .variogram() S3 generic functions. svarisonp.default replaces svarisonp (interface fortran routine svar_iso_np). Added variogram package demo.","code":""},{"path":"https://rubenfcasal.github.io/npsp/news/index.html","id":"npsp-01-3-2012-08-25","dir":"Changelog","previous_headings":"","what":"npsp 0.1-3 (2012-08-25)","title":"npsp 0.1-3 (2012-08-25)","text":"Added grid.par, data.grid, bin.data locpol.bin S3 classes methods. Added coords() coordvalues() S3 generic functions. Added binning() locpol() S3 generic functions. binning.default replaces set_bin (interface fortran routine set_bin).locpol.default replaces locpolbin (interface fortran routine est_bin). Added locpol.bin.data() (interface fortran routine lp_bin). Added datagrid, binning locpol package demos.","code":""},{"path":"https://rubenfcasal.github.io/npsp/news/index.html","id":"npsp-01-2-2012-08-20","dir":"Changelog","previous_headings":"","what":"npsp 0.1-2 (2012-08-20)","title":"npsp 0.1-2 (2012-08-20)","text":"Added svarisonp() (interface fortran routine svar_iso_np). Added svariso() (interface fortran routine svar_iso_bin). Added .variogram.svariso() (interoperability geoR).","code":""},{"path":"https://rubenfcasal.github.io/npsp/news/index.html","id":"npsp-01-1-2012-06-01","dir":"Changelog","previous_headings":"","what":"npsp 0.1-1 (2012-06-01)","title":"npsp 0.1-1 (2012-06-01)","text":"Added package demo. Added npsp-geoR.R (interoperability geoR). minor changes (output set_bin locpolbin, onLoad…).","code":""},{"path":"https://rubenfcasal.github.io/npsp/news/index.html","id":"npsp-01-0-2012-04-17","dir":"Changelog","previous_headings":"","what":"npsp 0.1-0 (2012-04-17)","title":"npsp 0.1-0 (2012-04-17)","text":"Initial version package form.","code":""}]
